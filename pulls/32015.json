{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32015",
    "id": 2378191350,
    "node_id": "PR_kwDOABII586NwFH2",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/32015",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/32015.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/32015.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32015",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32015/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32015/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32015/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/75acdcbaa99235c578a65c516dcb1f0baef29d6f",
    "number": 32015,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "net: replace manual reference counting of CNode with shared_ptr",
    "user": {
      "login": "vasild",
      "id": 266751,
      "node_id": "MDQ6VXNlcjI2Njc1MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vasild",
      "html_url": "https://github.com/vasild",
      "followers_url": "https://api.github.com/users/vasild/followers",
      "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
      "organizations_url": "https://api.github.com/users/vasild/orgs",
      "repos_url": "https://api.github.com/users/vasild/repos",
      "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/vasild/received_events",
      "type": "User",
      "site_admin": false,
      "patch_url": null
    },
    "body": "Before this change the code used to count references to `CNode` objects manually via `CNode::nRefCount`. Unneeded `CNode`s were scheduled for deletion by putting them in `CConnman::m_nodes_disconnected` and were deleted after their reference count reached zero. Deleting consists of calling `PeerManager::FinalizeNode()` and destroying the `CNode` object.\r\n\r\nReplace this scheme with `std::shared_ptr`. This simplifies the code and removes:\r\n`CNode::nRefCount`\r\n`CNode::GetRefCount()`\r\n`CNode::AddRef()`\r\n`CNode::Release()`\r\n`CConnman::m_nodes_disconnected`\r\n`CConnman::NodesSnapshot`\r\n\r\nNow creating a snapshot of `CConnman::m_nodes` is done by simply copying it (under the mutex).\r\n\r\nCall `PeerManager::FinalizeNode()` from the destructor of `CNode`, which is called when the reference count reaches 0.\r\n\r\nThis removes brittle code and replaces it by a code from the standard library which is more robust. All the below are possible with the manual reference counting and not possible with `shared_ptr`:\r\n* Use an object without adding a reference to it\r\n* Add too many references to an object, mismatch the add/remove by having more \"add\"\r\n* Forget to reduce the reference count, mismatch the add/remove by having less \"remove\"\r\n* Go with negative reference count by mistakenly having too many \"remove\"\r\n* Destroy an object while there are references to it\r\n\r\nThere is zero learning curve for the average C++ programmer who knows how `shared_ptr` works. Not so much with the manual reference counting because one has to learn about `AddRef()`, `Release()`, check and maintain where are they called and their relationship with `m_nodes_disconnected`.\r\n\r\n---\r\n\r\nThis has some history in https://github.com/bitcoin/bitcoin/pull/28222 and https://github.com/bitcoin/bitcoin/pull/10738. See below https://github.com/bitcoin/bitcoin/pull/32015#issuecomment-2717384152 and https://github.com/bitcoin/bitcoin/pull/32015#issuecomment-2717860925.\r\n",
    "labels": [
      {
        "id": 98298007,
        "node_id": "MDU6TGFiZWw5ODI5ODAwNw==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/P2P",
        "name": "P2P",
        "color": "006b75",
        "default": false
      }
    ],
    "created_at": "2025-03-07T09:53:01Z",
    "updated_at": "2025-04-24T19:17:10Z",
    "mergeable": true,
    "mergeable_state": "blocked",
    "merged": false,
    "merge_commit_sha": "0b7c59a84e1144de8302e5f63601fc81977195ef",
    "assignees": [],
    "requested_reviewers": [],
    "requested_teams": [],
    "rebaseable": true,
    "head": {
      "label": "vasild:cnode_shared_ptr",
      "ref": "cnode_shared_ptr",
      "sha": "75acdcbaa99235c578a65c516dcb1f0baef29d6f",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 120608826,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMjA2MDg4MjY=",
        "name": "bitcoin",
        "full_name": "vasild/bitcoin",
        "owner": {
          "login": "vasild",
          "id": 266751,
          "node_id": "MDQ6VXNlcjI2Njc1MQ==",
          "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/vasild",
          "html_url": "https://github.com/vasild",
          "followers_url": "https://api.github.com/users/vasild/followers",
          "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
          "organizations_url": "https://api.github.com/users/vasild/orgs",
          "repos_url": "https://api.github.com/users/vasild/repos",
          "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/vasild/received_events",
          "type": "User",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/vasild/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/vasild/bitcoin",
        "archive_url": "https://api.github.com/repos/vasild/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/vasild/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/vasild/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/vasild/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/vasild/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/vasild/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/vasild/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/vasild/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/vasild/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/vasild/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/vasild/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/vasild/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/vasild/bitcoin/events",
        "forks_url": "https://api.github.com/repos/vasild/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/vasild/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/vasild/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/vasild/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/vasild/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/vasild/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/vasild/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/vasild/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/vasild/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/vasild/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/vasild/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/vasild/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/vasild/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/vasild/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/vasild/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/vasild/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:vasild/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/vasild/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/vasild/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/vasild/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/vasild/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/vasild/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/vasild/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/vasild/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/vasild/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/vasild/bitcoin/hooks",
        "svn_url": "https://github.com/vasild/bitcoin",
        "homepage": "https://bitcoin.org/en/download",
        "language": "C++",
        "forks_count": 1,
        "stargazers_count": 6,
        "watchers_count": 6,
        "size": 255928,
        "default_branch": "master",
        "open_issues_count": 2,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": true,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-04-24T14:33:46Z",
        "created_at": "2018-02-07T11:52:47Z",
        "updated_at": "2025-04-24T14:00:10Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "cdc32994feadf3f15df3cfac5baae36b4b011462",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 37112,
        "stargazers_count": 83036,
        "watchers_count": 83036,
        "size": 280346,
        "default_branch": "master",
        "open_issues_count": 704,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-04-24T10:03:07Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2025-04-24T18:45:58Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32015"
      }
    },
    "author_association": "CONTRIBUTOR",
    "draft": false,
    "additions": 199,
    "deletions": 258,
    "changed_files": 11,
    "commits": 1,
    "review_comments": 24,
    "comments": 36
  },
  "events": [
    {
      "event": "commented",
      "id": 2706010466,
      "node_id": "IC_kwDOABII586hSnFi",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2706010466",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-07T09:53:04Z",
      "updated_at": "2025-04-22T20:53:07Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage & Benchmarks\nFor details see: https://corecheck.dev/bitcoin/bitcoin/pulls/32015.\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| Concept ACK | [hodlinator](https://github.com/bitcoin/bitcoin/pull/32015#pullrequestreview-2668522266), [theuni](https://github.com/bitcoin/bitcoin/pull/32015#issuecomment-2806461955) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#32326](https://github.com/bitcoin/bitcoin/pull/32326) (net: improve the interface around FindNode() and avoid a recursive mutex lock by vasild)\n* [#32278](https://github.com/bitcoin/bitcoin/pull/32278) (doc: better document NetEventsInterface and the deletion of \"CNode\"s by vasild)\n* [#32065](https://github.com/bitcoin/bitcoin/pull/32065) (i2p: make a time gap between creating transient sessions and using them by vasild)\n* [#31672](https://github.com/bitcoin/bitcoin/pull/31672) (rpc: add cpu_load to getpeerinfo by vasild)\n* [#30988](https://github.com/bitcoin/bitcoin/pull/30988) (Split CConnman by vasild)\n* [#30951](https://github.com/bitcoin/bitcoin/pull/30951) (net: option to disallow v1 connection on ipv4 and ipv6 peers by stratospher)\n* [#29641](https://github.com/bitcoin/bitcoin/pull/29641) (scripted-diff: Use LogInfo over LogPrintf [WIP, NOMERGE, DRAFT] by maflcko)\n* [#29415](https://github.com/bitcoin/bitcoin/pull/29415) (Broadcast own transactions only via short-lived Tor or I2P connections by vasild)\n* [#28584](https://github.com/bitcoin/bitcoin/pull/28584) (Fuzz: extend CConnman tests by vasild)\n* [#28463](https://github.com/bitcoin/bitcoin/pull/28463) (p2p: Increase inbound capacity for block-relay only connections by mzumsande)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32015#issuecomment-2706010466",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32015"
    },
    {
      "event": "labeled",
      "id": 16629735375,
      "node_id": "LE_lADOABII586tARLSzwAAAAPfNZ_P",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16629735375",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-07T09:53:07Z",
      "label": {
        "name": "P2P",
        "color": "006b75"
      }
    },
    {
      "event": "commented",
      "id": 2706012277,
      "node_id": "IC_kwDOABII586hSnh1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2706012277",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-07T09:53:53Z",
      "updated_at": "2025-03-07T09:53:53Z",
      "author_association": "CONTRIBUTOR",
      "body": "cc @willcl-ark, @dergoegge, @theuni ",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32015#issuecomment-2706012277",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32015"
    },
    {
      "event": "mentioned",
      "id": 16629746709,
      "node_id": "MEE_lADOABII586tARLSzwAAAAPfNcwV",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16629746709",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-07T09:53:54Z"
    },
    {
      "event": "subscribed",
      "id": 16629746730,
      "node_id": "SE_lADOABII586tARLSzwAAAAPfNcwq",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16629746730",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-07T09:53:54Z"
    },
    {
      "event": "mentioned",
      "id": 16629746758,
      "node_id": "MEE_lADOABII586tARLSzwAAAAPfNcxG",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16629746758",
      "actor": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-07T09:53:54Z"
    },
    {
      "event": "subscribed",
      "id": 16629746779,
      "node_id": "SE_lADOABII586tARLSzwAAAAPfNcxb",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16629746779",
      "actor": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-07T09:53:54Z"
    },
    {
      "event": "mentioned",
      "id": 16629746802,
      "node_id": "MEE_lADOABII586tARLSzwAAAAPfNcxy",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16629746802",
      "actor": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-07T09:53:54Z"
    },
    {
      "event": "subscribed",
      "id": 16629746821,
      "node_id": "SE_lADOABII586tARLSzwAAAAPfNcyF",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16629746821",
      "actor": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-07T09:53:54Z"
    },
    {
      "event": "commented",
      "id": 2706016805,
      "node_id": "IC_kwDOABII586hSool",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2706016805",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-07T09:55:59Z",
      "updated_at": "2025-03-07T09:55:59Z",
      "author_association": "CONTRIBUTOR",
      "body": "cc @hodlinator, you might be interested in this as well",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32015#issuecomment-2706016805",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32015"
    },
    {
      "event": "mentioned",
      "id": 16629775507,
      "node_id": "MEE_lADOABII586tARLSzwAAAAPfNjyT",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16629775507",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-07T09:56:00Z"
    },
    {
      "event": "subscribed",
      "id": 16629775519,
      "node_id": "SE_lADOABII586tARLSzwAAAAPfNjyf",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16629775519",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-07T09:56:00Z"
    },
    {
      "event": "commented",
      "id": 2706054855,
      "node_id": "IC_kwDOABII586hSx7H",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2706054855",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-07T10:13:26Z",
      "updated_at": "2025-03-07T10:13:26Z",
      "author_association": "MEMBER",
      "body": "https://github.com/bitcoin/bitcoin/actions/runs/13718139296/job/38367326902?pr=32015#step:7:1603:\r\n```bash\r\nRun p2p_headers_presync with args ['/Users/runner/work/bitcoin/bitcoin/ci/scratch/build-aarch64-apple-darwin23.6.0/src/test/fuzz/fuzz', PosixPath('/Users/runner/work/bitcoin/bitcoin/ci/scratch/qa-assets/fuzz_corpora/p2p_headers_presync')]net_processing.cpp:295 SetTxRelay: Assertion `!m_tx_relay' failed.\r\nError processing input \"/Users/runner/work/bitcoin/bitcoin/ci/scratch/qa-assets/fuzz_corpora/p2p_headers_presync/c12f87158cda99b4fb2e1fe7312af392a1f4634a\"\r\n\r\nnet_processing.cpp:295 SetTxRelay: Assertion `!m_tx_relay' failed.\r\nError processing input \"/Users/runner/work/bitcoin/bitcoin/ci/scratch/qa-assets/fuzz_corpora/p2p_headers_presync/c12f87158cda99b4fb2e1fe7312af392a1f4634a\"\r\n```",
      "user": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32015#issuecomment-2706054855",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32015"
    },
    {
      "event": "reviewed",
      "id": 2666944030,
      "node_id": "PRR_kwDOABII586e9lYe",
      "url": null,
      "actor": null,
      "commit_id": "2747f135be3a2ccf3ce89bea3ee6037266611a16",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32015#pullrequestreview-2666944030",
      "submitted_at": "2025-03-07T11:03:12Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32015"
    },
    {
      "event": "labeled",
      "id": 16630969657,
      "node_id": "LE_lADOABII586tARLSzwAAAAPfSHU5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16630969657",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-07T11:14:11Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2706186536,
      "node_id": "IC_kwDOABII586hTSEo",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2706186536",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-07T11:14:12Z",
      "updated_at": "2025-03-07T11:14:12Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n🚧 At least one of the CI tasks failed.\n<sub>Debug: https://github.com/bitcoin/bitcoin/runs/38367328595</sub>\n\n<details><summary>Hints</summary>\n\nTry to run the tests locally, according to the documentation. However, a CI failure may still\nhappen due to a number of reasons, for example:\n\n* Possibly due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\n* A sanitizer issue, which can only be found by compiling with the sanitizer and running the\n  affected test.\n\n* An intermittent issue.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n</details>\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32015#issuecomment-2706186536",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32015"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 16632514500,
      "node_id": "HRFPE_lADOABII586tARLSzwAAAAPfYAfE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16632514500",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "e35a382388d230daa0e05d41b53dc46117f9898e",
      "commit_url": "https://api.github.com/repos/vasild/bitcoin/commits/e35a382388d230daa0e05d41b53dc46117f9898e",
      "created_at": "2025-03-07T13:22:11Z"
    },
    {
      "event": "commented",
      "id": 2706446575,
      "node_id": "IC_kwDOABII586hURjv",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2706446575",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-07T13:23:01Z",
      "updated_at": "2025-03-07T13:23:01Z",
      "author_association": "CONTRIBUTOR",
      "body": "`2747f135be...e35a382388`: fix the CI failure, thanks!",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32015#issuecomment-2706446575",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32015"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 16633047252,
      "node_id": "HRFPE_lADOABII586tARLSzwAAAAPfaCjU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16633047252",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "36d932cebbb235a79e90575960646e86a23d39a8",
      "commit_url": "https://api.github.com/repos/vasild/bitcoin/commits/36d932cebbb235a79e90575960646e86a23d39a8",
      "created_at": "2025-03-07T14:02:31Z"
    },
    {
      "event": "unlabeled",
      "id": 16634179327,
      "node_id": "UNLE_lADOABII586tARLSzwAAAAPfeW7_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16634179327",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-07T15:23:08Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 2668522266,
      "node_id": "PRR_kwDOABII586fDmsa",
      "url": null,
      "actor": null,
      "commit_id": "36d932cebbb235a79e90575960646e86a23d39a8",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Concept ACK 36d932cebbb235a79e90575960646e86a23d39a8",
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32015#pullrequestreview-2668522266",
      "submitted_at": "2025-03-07T23:13:13Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32015"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 16657708442,
      "node_id": "HRFPE_lADOABII586tARLSzwAAAAPg4HWa",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16657708442",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "af622d00ba7f5317220cf8d7d71ad9cd791dd892",
      "commit_url": "https://api.github.com/repos/vasild/bitcoin/commits/af622d00ba7f5317220cf8d7d71ad9cd791dd892",
      "created_at": "2025-03-10T16:06:36Z"
    },
    {
      "event": "commented",
      "id": 2711102281,
      "node_id": "IC_kwDOABII586hmCNJ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2711102281",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-10T16:07:17Z",
      "updated_at": "2025-03-10T16:07:17Z",
      "author_association": "CONTRIBUTOR",
      "body": "`36d932cebb...af622d00ba`: address https://github.com/bitcoin/bitcoin/pull/32015#discussion_r1985793960",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32015#issuecomment-2711102281",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32015"
    },
    {
      "event": "commented",
      "id": 2711463453,
      "node_id": "IC_kwDOABII586hnaYd",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2711463453",
      "actor": {
        "login": "purpleKarrot",
        "id": 185240,
        "node_id": "MDQ6VXNlcjE4NTI0MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/185240?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/purpleKarrot",
        "html_url": "https://github.com/purpleKarrot",
        "followers_url": "https://api.github.com/users/purpleKarrot/followers",
        "following_url": "https://api.github.com/users/purpleKarrot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/purpleKarrot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/purpleKarrot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/purpleKarrot/subscriptions",
        "organizations_url": "https://api.github.com/users/purpleKarrot/orgs",
        "repos_url": "https://api.github.com/users/purpleKarrot/repos",
        "events_url": "https://api.github.com/users/purpleKarrot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/purpleKarrot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-10T18:24:49Z",
      "updated_at": "2025-03-10T18:24:49Z",
      "author_association": "CONTRIBUTOR",
      "body": "Instead of passing around shared pointers to mutable data (aka global variables in disguise), would it be possible to increase the level of abstraction and pass around values with regular semantics? Every C++ programmer should rewatch https://youtu.be/W2tWOdzgXHA from time to time.",
      "user": {
        "login": "purpleKarrot",
        "id": 185240,
        "node_id": "MDQ6VXNlcjE4NTI0MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/185240?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/purpleKarrot",
        "html_url": "https://github.com/purpleKarrot",
        "followers_url": "https://api.github.com/users/purpleKarrot/followers",
        "following_url": "https://api.github.com/users/purpleKarrot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/purpleKarrot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/purpleKarrot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/purpleKarrot/subscriptions",
        "organizations_url": "https://api.github.com/users/purpleKarrot/orgs",
        "repos_url": "https://api.github.com/users/purpleKarrot/repos",
        "events_url": "https://api.github.com/users/purpleKarrot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/purpleKarrot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32015#issuecomment-2711463453",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32015"
    },
    {
      "event": "commented",
      "id": 2711668773,
      "node_id": "IC_kwDOABII586hoMgl",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2711668773",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-10T19:51:54Z",
      "updated_at": "2025-03-10T19:51:54Z",
      "author_association": "CONTRIBUTOR",
      "body": "> Every C++ programmer should rewatch https://youtu.be/W2tWOdzgXHA from time to time.\r\n\r\nI remembered that as \"the seminal `std::rotate()`-talk\", but it also has \"No Raw Pointers\" from 48:45. Probably stoked my hatred of smart pointers which led to #31713. To be fair, in the talk he also says that we used to do intrusive ref-counting... so this is at least one step away from that.\r\n\r\n> Instead of passing around shared pointers to mutable data (aka global variables in disguise), would it be possible to increase the level of abstraction and pass around values with regular semantics?\r\n\r\nGuess one could have an `InternalCNode` which is the actual meat, and make the public `CNode` instances hold `shared_ptr<InternalCNode>`. Not sure how well that plays out.\r\nMaybe you  @purpleKarrot could take a stab at something along the lines of what you pointed to? Keep in mind that we try to minimize the number of lines touched in a change unless necessary.",
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32015#issuecomment-2711668773",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32015"
    },
    {
      "event": "mentioned",
      "id": 16660721697,
      "node_id": "MEE_lADOABII586tARLSzwAAAAPhDnAh",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16660721697",
      "actor": {
        "login": "purpleKarrot",
        "id": 185240,
        "node_id": "MDQ6VXNlcjE4NTI0MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/185240?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/purpleKarrot",
        "html_url": "https://github.com/purpleKarrot",
        "followers_url": "https://api.github.com/users/purpleKarrot/followers",
        "following_url": "https://api.github.com/users/purpleKarrot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/purpleKarrot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/purpleKarrot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/purpleKarrot/subscriptions",
        "organizations_url": "https://api.github.com/users/purpleKarrot/orgs",
        "repos_url": "https://api.github.com/users/purpleKarrot/repos",
        "events_url": "https://api.github.com/users/purpleKarrot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/purpleKarrot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-10T19:51:56Z"
    },
    {
      "event": "subscribed",
      "id": 16660721718,
      "node_id": "SE_lADOABII586tARLSzwAAAAPhDnA2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16660721718",
      "actor": {
        "login": "purpleKarrot",
        "id": 185240,
        "node_id": "MDQ6VXNlcjE4NTI0MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/185240?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/purpleKarrot",
        "html_url": "https://github.com/purpleKarrot",
        "followers_url": "https://api.github.com/users/purpleKarrot/followers",
        "following_url": "https://api.github.com/users/purpleKarrot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/purpleKarrot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/purpleKarrot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/purpleKarrot/subscriptions",
        "organizations_url": "https://api.github.com/users/purpleKarrot/orgs",
        "repos_url": "https://api.github.com/users/purpleKarrot/repos",
        "events_url": "https://api.github.com/users/purpleKarrot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/purpleKarrot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-10T19:51:56Z"
    },
    {
      "event": "commented",
      "id": 2711842250,
      "node_id": "IC_kwDOABII586ho23K",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2711842250",
      "actor": {
        "login": "purpleKarrot",
        "id": 185240,
        "node_id": "MDQ6VXNlcjE4NTI0MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/185240?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/purpleKarrot",
        "html_url": "https://github.com/purpleKarrot",
        "followers_url": "https://api.github.com/users/purpleKarrot/followers",
        "following_url": "https://api.github.com/users/purpleKarrot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/purpleKarrot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/purpleKarrot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/purpleKarrot/subscriptions",
        "organizations_url": "https://api.github.com/users/purpleKarrot/orgs",
        "repos_url": "https://api.github.com/users/purpleKarrot/repos",
        "events_url": "https://api.github.com/users/purpleKarrot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/purpleKarrot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-10T21:08:30Z",
      "updated_at": "2025-03-10T21:08:30Z",
      "author_association": "CONTRIBUTOR",
      "body": "After reviewing the code line by line, I realized that the only places where `AddRef` was ever called, was directly after construction (plus one place in the fuzz tests, not sure why that is needed). It looks like the `CNode` instances are not actually shared (good news). Could it be passed around by `std::unique_ptr` instead? This would greatly simplify future refactoring.",
      "user": {
        "login": "purpleKarrot",
        "id": 185240,
        "node_id": "MDQ6VXNlcjE4NTI0MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/185240?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/purpleKarrot",
        "html_url": "https://github.com/purpleKarrot",
        "followers_url": "https://api.github.com/users/purpleKarrot/followers",
        "following_url": "https://api.github.com/users/purpleKarrot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/purpleKarrot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/purpleKarrot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/purpleKarrot/subscriptions",
        "organizations_url": "https://api.github.com/users/purpleKarrot/orgs",
        "repos_url": "https://api.github.com/users/purpleKarrot/repos",
        "events_url": "https://api.github.com/users/purpleKarrot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/purpleKarrot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32015#issuecomment-2711842250",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32015"
    },
    {
      "event": "commented",
      "id": 2711968502,
      "node_id": "IC_kwDOABII586hpVr2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2711968502",
      "actor": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-10T22:15:26Z",
      "updated_at": "2025-03-10T22:15:26Z",
      "author_association": "MEMBER",
      "body": ">  realized that the only places where AddRef was ever called, was directly after construction\r\n\r\nIt is also called in the RAII helper `NodesSnapshot` which is used in different threads (i.e. \"net\" and \"msghand\"), so `unique_ptr` won't work unfortunately.\r\n\r\n> plus one place in the fuzz tests, not sure why that is needed\r\n\r\nIt's probably just there to have it \"covered\".",
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32015#issuecomment-2711968502",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32015"
    },
    {
      "event": "reviewed",
      "id": 2672347152,
      "node_id": "PRR_kwDOABII586fSMgQ",
      "url": null,
      "actor": null,
      "commit_id": "af622d00ba7f5317220cf8d7d71ad9cd791dd892",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "purpleKarrot",
        "id": 185240,
        "node_id": "MDQ6VXNlcjE4NTI0MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/185240?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/purpleKarrot",
        "html_url": "https://github.com/purpleKarrot",
        "followers_url": "https://api.github.com/users/purpleKarrot/followers",
        "following_url": "https://api.github.com/users/purpleKarrot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/purpleKarrot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/purpleKarrot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/purpleKarrot/subscriptions",
        "organizations_url": "https://api.github.com/users/purpleKarrot/orgs",
        "repos_url": "https://api.github.com/users/purpleKarrot/repos",
        "events_url": "https://api.github.com/users/purpleKarrot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/purpleKarrot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32015#pullrequestreview-2672347152",
      "submitted_at": "2025-03-10T22:41:30Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32015"
    },
    {
      "event": "reviewed",
      "id": 2672297590,
      "node_id": "PRR_kwDOABII586fSAZ2",
      "url": null,
      "actor": null,
      "commit_id": "af622d00ba7f5317220cf8d7d71ad9cd791dd892",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32015#pullrequestreview-2672297590",
      "submitted_at": "2025-03-10T22:58:41Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32015"
    },
    {
      "event": "commented",
      "id": 2712060971,
      "node_id": "IC_kwDOABII586hpsQr",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2712060971",
      "actor": {
        "login": "purpleKarrot",
        "id": 185240,
        "node_id": "MDQ6VXNlcjE4NTI0MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/185240?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/purpleKarrot",
        "html_url": "https://github.com/purpleKarrot",
        "followers_url": "https://api.github.com/users/purpleKarrot/followers",
        "following_url": "https://api.github.com/users/purpleKarrot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/purpleKarrot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/purpleKarrot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/purpleKarrot/subscriptions",
        "organizations_url": "https://api.github.com/users/purpleKarrot/orgs",
        "repos_url": "https://api.github.com/users/purpleKarrot/repos",
        "events_url": "https://api.github.com/users/purpleKarrot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/purpleKarrot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-10T23:18:39Z",
      "updated_at": "2025-03-10T23:18:39Z",
      "author_association": "CONTRIBUTOR",
      "body": "> unique_ptr won't work unfortunately.\r\n\r\nGot it. `m_nodes` needs to be able to be snapshotted. But that seems to be the only place where copies are made. `FindNode` should return non-owning observers rather than extend the ownership.",
      "user": {
        "login": "purpleKarrot",
        "id": 185240,
        "node_id": "MDQ6VXNlcjE4NTI0MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/185240?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/purpleKarrot",
        "html_url": "https://github.com/purpleKarrot",
        "followers_url": "https://api.github.com/users/purpleKarrot/followers",
        "following_url": "https://api.github.com/users/purpleKarrot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/purpleKarrot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/purpleKarrot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/purpleKarrot/subscriptions",
        "organizations_url": "https://api.github.com/users/purpleKarrot/orgs",
        "repos_url": "https://api.github.com/users/purpleKarrot/repos",
        "events_url": "https://api.github.com/users/purpleKarrot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/purpleKarrot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32015#issuecomment-2712060971",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32015"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 16682244877,
      "node_id": "HRFPE_lADOABII586tARLSzwAAAAPiVtsN",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16682244877",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "d233c7e9996912ef708d64a52604f3d5e8b54f47",
      "commit_url": "https://api.github.com/repos/vasild/bitcoin/commits/d233c7e9996912ef708d64a52604f3d5e8b54f47",
      "created_at": "2025-03-11T11:55:11Z"
    },
    {
      "event": "commented",
      "id": 2713885677,
      "node_id": "IC_kwDOABII586hwpvt",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2713885677",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-11T11:55:36Z",
      "updated_at": "2025-03-11T11:55:36Z",
      "author_association": "CONTRIBUTOR",
      "body": "`af622d00ba...d233c7e999`: address https://github.com/bitcoin/bitcoin/pull/32015#discussion_r1988085255",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32015#issuecomment-2713885677",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32015"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 16682764869,
      "node_id": "HRFPE_lADOABII586tARLSzwAAAAPiXspF",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16682764869",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "4492abbf0a8f34e07ac92bf5786f9564c00c8e45",
      "commit_url": "https://api.github.com/repos/vasild/bitcoin/commits/4492abbf0a8f34e07ac92bf5786f9564c00c8e45",
      "created_at": "2025-03-11T11:59:56Z"
    },
    {
      "event": "commented",
      "id": 2713906394,
      "node_id": "IC_kwDOABII586hwuza",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2713906394",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-11T12:00:24Z",
      "updated_at": "2025-03-11T12:00:24Z",
      "author_association": "CONTRIBUTOR",
      "body": "`d233c7e999...4492abbf0a`: rebase and address https://github.com/bitcoin/bitcoin/pull/32015#discussion_r1988125455",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32015#issuecomment-2713906394",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32015"
    },
    {
      "event": "reviewed",
      "id": 2674417539,
      "node_id": "PRR_kwDOABII586faF-D",
      "url": null,
      "actor": null,
      "commit_id": "4492abbf0a8f34e07ac92bf5786f9564c00c8e45",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32015#pullrequestreview-2674417539",
      "submitted_at": "2025-03-11T20:19:47Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32015"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 16704922171,
      "node_id": "HRFPE_lADOABII586tARLSzwAAAAPjsOI7",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16704922171",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "8c0ce1ca1c5f4701c24dc7721237f9af3fb02faa",
      "commit_url": "https://api.github.com/repos/vasild/bitcoin/commits/8c0ce1ca1c5f4701c24dc7721237f9af3fb02faa",
      "created_at": "2025-03-12T05:06:34Z"
    },
    {
      "event": "commented",
      "id": 2716480960,
      "node_id": "IC_kwDOABII586h6jXA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2716480960",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-12T05:06:51Z",
      "updated_at": "2025-03-12T05:06:51Z",
      "author_association": "CONTRIBUTOR",
      "body": "`4492abbf0a...8c0ce1ca1c`: address https://github.com/bitcoin/bitcoin/pull/32015#discussion_r1989217778",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32015#issuecomment-2716480960",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32015"
    },
    {
      "event": "commented",
      "id": 2717384152,
      "node_id": "IC_kwDOABII586h9_3Y",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2717384152",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-12T10:24:56Z",
      "updated_at": "2025-03-12T10:25:53Z",
      "author_association": "MEMBER",
      "body": "This seems like a nice simplification. It would be good to do before nobody remembers what the old code was trying to do (and prevent). Since @theUni tried something similar before in #10738 it would be great if he can look at this again.\r\n\r\nIn particular the 2017 PR claimed \"special care must be taken\" as to which thread destroys the object, but @vasild believes this doesn't matter (here): https://github.com/bitcoin/bitcoin/pull/32015#discussion_r1984875189\r\n\r\nThe end result of that PR seems a lot more complicated than what this PR does, and perhaps that's part of why it didn't get a huge amount of review and was closed eventually?\r\n\r\n@willcl-ark then tried again in 2023 in #28222 (initially not knowing about the earlier attempt). Similar concerns about threading were raised: https://github.com/bitcoin/bitcoin/pull/28222#pullrequestreview-1565029167\r\n\r\nIt seems that was never really settled and the PR died.\r\n\r\nIt would be good to be address this in the PR description to prevent going in circles.",
      "user": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32015#issuecomment-2717384152",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32015"
    },
    {
      "event": "mentioned",
      "id": 16709837397,
      "node_id": "MEE_lADOABII586tARLSzwAAAAPj--JV",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16709837397",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-12T10:24:58Z"
    },
    {
      "event": "subscribed",
      "id": 16709837417,
      "node_id": "SE_lADOABII586tARLSzwAAAAPj--Jp",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16709837417",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-12T10:24:58Z"
    },
    {
      "event": "mentioned",
      "id": 16709837439,
      "node_id": "MEE_lADOABII586tARLSzwAAAAPj--J_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16709837439",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-12T10:24:58Z"
    },
    {
      "event": "subscribed",
      "id": 16709837454,
      "node_id": "SE_lADOABII586tARLSzwAAAAPj--KO",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16709837454",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-12T10:24:58Z"
    },
    {
      "event": "mentioned",
      "id": 16709837478,
      "node_id": "MEE_lADOABII586tARLSzwAAAAPj--Km",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16709837478",
      "actor": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-12T10:24:58Z"
    },
    {
      "event": "subscribed",
      "id": 16709837494,
      "node_id": "SE_lADOABII586tARLSzwAAAAPj--K2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16709837494",
      "actor": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-12T10:24:58Z"
    },
    {
      "event": "commented",
      "id": 2717860925,
      "node_id": "IC_kwDOABII586h_0Q9",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2717860925",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-12T13:18:52Z",
      "updated_at": "2025-03-12T13:18:52Z",
      "author_association": "CONTRIBUTOR",
      "body": " Some comments from the other PRs:\r\n\r\n_from https://github.com/bitcoin/bitcoin/pull/10738#issue-240283546:_\r\n> Special care must be taken, though, to only delete CNodes from a single thread, and to control which thread that is.\r\n\r\nIn `master` deletion of `CNode` objects could happen in the `net` thread or in the `main` thread. In other words, some `CNode` object might be destroyed in the `net` thread and another `CNode` object might be destroyed in the `main` thread. I do not see any problem with that. Of course we do not destroy the same object from more than one thread, in `master` or in this PR. With this PR deletion might as well happen in the `msghand` thread (when destroying the temporary copy of `m_nodes` in `ThreadMessageHandler()`). That is fine as well, correct me if I am wrong.\r\n\r\n_from https://github.com/bitcoin/bitcoin/pull/28222#pullrequestreview-1565029167:_\r\n>> which thread actually deletes the CNode.\r\n\r\n> The reason why that is important is because we only want to call FinalizeNode once and we want there to be no other references to that CNode at that time.\r\n\r\nThis PR achieves that by calling `FinalizeNode()` from `~CNode()`. Just to clarify the obvious: the destructor is called only once and at the time the destructor is called `shared_ptr` has ensured that there are no other references to the object. This is simpler and easier to reason about than the code in `master` which waits manually for the number of references to drop.",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32015#issuecomment-2717860925",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32015"
    },
    {
      "event": "commented",
      "id": 2725084083,
      "node_id": "IC_kwDOABII586ibXuz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2725084083",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-14T15:48:31Z",
      "updated_at": "2025-03-14T15:48:31Z",
      "author_association": "CONTRIBUTOR",
      "body": "Further idea around the second sentence of this:\r\n\r\nhttps://github.com/bitcoin/bitcoin/pull/10738#issue-240283546:\r\n> Special care must be taken, though, to only delete CNodes from a single thread, and to control which thread that is. Eventually, this should move to the message processing thread, so that it's not possible to hit cs_main from the main network thread.\r\n\r\nIt is possible to decouple `CNode` deletion from the `FinalizeNode()` call and do the latter in the `msghand` thread regardless of when `CNode` is deleted. `FinalizeNode()` only needs 3 properties from `CNode`, so they can be extracted out from the `CNode` object and saved to a place which later is looked up by the `msghand` thread which calls `FinalizeNode()` on that data.\r\n\r\nHere is a patch that does that:\r\n\r\n<details>\r\n<summary>[patch] Call FinalizeNode() in the message processing thread</summary>\r\n\r\n```diff\r\ndiff --git i/src/net_processing.cpp w/src/net_processing.cpp\r\nindex 1da3ec9d21..1124036a2a 100644\r\n--- i/src/net_processing.cpp\r\n+++ w/src/net_processing.cpp\r\n@@ -487,13 +487,13 @@ public:\r\n         EXCLUSIVE_LOCKS_REQUIRED(!m_peer_mutex);\r\n     void NewPoWValidBlock(const CBlockIndex *pindex, const std::shared_ptr<const CBlock>& pblock) override\r\n         EXCLUSIVE_LOCKS_REQUIRED(!m_most_recent_block_mutex);\r\n \r\n     /** Implement NetEventsInterface */\r\n     void InitializeNode(const CNode& node, ServiceFlags our_services) override EXCLUSIVE_LOCKS_REQUIRED(!m_peer_mutex, !m_tx_download_mutex);\r\n-    void FinalizeNode(const CNode& node) override EXCLUSIVE_LOCKS_REQUIRED(!m_peer_mutex, !m_headers_presync_mutex, !m_tx_download_mutex);\r\n+    void FinalizeNode(const NodeFinalizationData& node) override EXCLUSIVE_LOCKS_REQUIRED(!m_peer_mutex, !m_headers_presync_mutex, !m_tx_download_mutex);\r\n     bool HasAllDesirableServiceFlags(ServiceFlags services) const override;\r\n     bool ProcessMessages(CNode* pfrom, std::atomic<bool>& interrupt) override\r\n         EXCLUSIVE_LOCKS_REQUIRED(!m_peer_mutex, !m_most_recent_block_mutex, !m_headers_presync_mutex, g_msgproc_mutex, !m_tx_download_mutex);\r\n     bool SendMessages(CNode* pto) override\r\n         EXCLUSIVE_LOCKS_REQUIRED(!m_peer_mutex, !m_most_recent_block_mutex, g_msgproc_mutex, !m_tx_download_mutex);\r\n \r\n@@ -1560,80 +1560,78 @@ void PeerManagerImpl::ReattemptInitialBroadcast(CScheduler& scheduler)\r\n     // Schedule next run for 10-15 minutes in the future.\r\n     // We add randomness on every cycle to avoid the possibility of P2P fingerprinting.\r\n     const auto delta = 10min + FastRandomContext().randrange<std::chrono::milliseconds>(5min);\r\n     scheduler.scheduleFromNow([&] { ReattemptInitialBroadcast(scheduler); }, delta);\r\n }\r\n \r\n-void PeerManagerImpl::FinalizeNode(const CNode& node)\r\n+void PeerManagerImpl::FinalizeNode(const NodeFinalizationData& node)\r\n {\r\n-    NodeId nodeid = node.GetId();\r\n     {\r\n     LOCK(cs_main);\r\n     {\r\n         // We remove the PeerRef from g_peer_map here, but we don't always\r\n         // destruct the Peer. Sometimes another thread is still holding a\r\n         // PeerRef, so the refcount is >= 1. Be careful not to do any\r\n         // processing here that assumes Peer won't be changed before it's\r\n         // destructed.\r\n-        PeerRef peer = RemovePeer(nodeid);\r\n+        PeerRef peer = RemovePeer(node.id);\r\n         assert(peer != nullptr);\r\n         m_wtxid_relay_peers -= peer->m_wtxid_relay;\r\n         assert(m_wtxid_relay_peers >= 0);\r\n     }\r\n-    CNodeState *state = State(nodeid);\r\n+    CNodeState *state = State(node.id);\r\n     assert(state != nullptr);\r\n \r\n     if (state->fSyncStarted)\r\n         nSyncStarted--;\r\n \r\n     for (const QueuedBlock& entry : state->vBlocksInFlight) {\r\n         auto range = mapBlocksInFlight.equal_range(entry.pindex->GetBlockHash());\r\n         while (range.first != range.second) {\r\n             auto [node_id, list_it] = range.first->second;\r\n-            if (node_id != nodeid) {\r\n+            if (node_id != node.id) {\r\n                 range.first++;\r\n             } else {\r\n                 range.first = mapBlocksInFlight.erase(range.first);\r\n             }\r\n         }\r\n     }\r\n     {\r\n         LOCK(m_tx_download_mutex);\r\n-        m_txdownloadman.DisconnectedPeer(nodeid);\r\n+        m_txdownloadman.DisconnectedPeer(node.id);\r\n     }\r\n-    if (m_txreconciliation) m_txreconciliation->ForgetPeer(nodeid);\r\n+    if (m_txreconciliation) m_txreconciliation->ForgetPeer(node.id);\r\n     m_num_preferred_download_peers -= state->fPreferredDownload;\r\n     m_peers_downloading_from -= (!state->vBlocksInFlight.empty());\r\n     assert(m_peers_downloading_from >= 0);\r\n     m_outbound_peers_with_protect_from_disconnect -= state->m_chain_sync.m_protect;\r\n     assert(m_outbound_peers_with_protect_from_disconnect >= 0);\r\n \r\n-    m_node_states.erase(nodeid);\r\n+    m_node_states.erase(node.id);\r\n \r\n     if (m_node_states.empty()) {\r\n         // Do a consistency check after the last peer is removed.\r\n         assert(mapBlocksInFlight.empty());\r\n         assert(m_num_preferred_download_peers == 0);\r\n         assert(m_peers_downloading_from == 0);\r\n         assert(m_outbound_peers_with_protect_from_disconnect == 0);\r\n         assert(m_wtxid_relay_peers == 0);\r\n         WITH_LOCK(m_tx_download_mutex, m_txdownloadman.CheckIsEmpty());\r\n     }\r\n     } // cs_main\r\n-    if (node.fSuccessfullyConnected &&\r\n-        !node.IsBlockOnlyConn() && !node.IsInboundConn()) {\r\n+    if (node.was_connected_full_outbound) {\r\n         // Only change visible addrman state for full outbound peers.  We don't\r\n         // call Connected() for feeler connections since they don't have\r\n         // fSuccessfullyConnected set.\r\n         m_addrman.Connected(node.addr);\r\n     }\r\n     {\r\n         LOCK(m_headers_presync_mutex);\r\n-        m_headers_presync_stats.erase(nodeid);\r\n+        m_headers_presync_stats.erase(node.id);\r\n     }\r\n-    LogDebug(BCLog::NET, \"Cleared nodestate for peer=%d\\n\", nodeid);\r\n+    LogDebug(BCLog::NET, \"Cleared nodestate for peer=%d\\n\", node.id);\r\n }\r\n \r\n bool PeerManagerImpl::HasAllDesirableServiceFlags(ServiceFlags services) const\r\n {\r\n     // Shortcut for (services & GetDesirableServiceFlags(services)) == GetDesirableServiceFlags(services)\r\n     return !(GetDesirableServiceFlags(services) & (~services));\r\ndiff --git i/src/net.h w/src/net.h\r\nindex ff83ecde4d..cbe044f27e 100644\r\n--- i/src/net.h\r\n+++ w/src/net.h\r\n@@ -1000,14 +1000,29 @@ public:\r\n     /** Mutex for anything that is only accessed via the msg processing thread */\r\n     static Mutex g_msgproc_mutex;\r\n \r\n     /** Initialize a peer (setup state) */\r\n     virtual void InitializeNode(const CNode& node, ServiceFlags our_services) = 0;\r\n \r\n+    /** Data needed for `FinalizeNode()`. */\r\n+    struct NodeFinalizationData {\r\n+        NodeFinalizationData(const CNode& node)\r\n+            : id{node.GetId()},\r\n+              addr{node.addr},\r\n+              was_connected_full_outbound{node.fSuccessfullyConnected &&\r\n+                                          !node.IsBlockOnlyConn() &&\r\n+                                          !node.IsInboundConn()}\r\n+        {}\r\n+\r\n+        const NodeId id;\r\n+        const CService addr;\r\n+        const bool was_connected_full_outbound;\r\n+    };\r\n+\r\n     /** Handle removal of a peer (clear state) */\r\n-    virtual void FinalizeNode(const CNode& node) = 0;\r\n+    virtual void FinalizeNode(const NodeFinalizationData& node_finalization_data) = 0;\r\n \r\n     /**\r\n      * Callback to determine whether the given set of service flags are sufficient\r\n      * for a peer to be \"relevant\".\r\n      */\r\n     virtual bool HasAllDesirableServiceFlags(ServiceFlags services) const = 0;\r\n@@ -1112,15 +1127,17 @@ public:\r\n \r\n     ~CConnman();\r\n \r\n     bool Start(CScheduler& scheduler, const Options& options) EXCLUSIVE_LOCKS_REQUIRED(!m_total_bytes_sent_mutex, !m_added_nodes_mutex, !m_addr_fetches_mutex, !mutexMsgProc);\r\n \r\n     void StopThreads();\r\n-    void StopNodes();\r\n-    void Stop()\r\n+    void StopNodes() EXCLUSIVE_LOCKS_REQUIRED(!m_nodes_for_finalization_mutex);\r\n+    void Stop() EXCLUSIVE_LOCKS_REQUIRED(!m_nodes_for_finalization_mutex)\r\n     {\r\n+        AssertLockNotHeld(m_nodes_for_finalization_mutex);\r\n+\r\n         StopThreads();\r\n         StopNodes();\r\n     };\r\n \r\n     void Interrupt() EXCLUSIVE_LOCKS_REQUIRED(!mutexMsgProc);\r\n     bool GetNetworkActive() const { return fNetworkActive; };\r\n@@ -1261,12 +1278,15 @@ public:\r\n \r\n     /** Return true if we should disconnect the peer for failing an inactivity check. */\r\n     bool ShouldRunInactivityChecks(const CNode& node, std::chrono::seconds now) const;\r\n \r\n     bool MultipleManualOrFullOutboundConns(Network net) const EXCLUSIVE_LOCKS_REQUIRED(m_nodes_mutex);\r\n \r\n+    /** Remember some of the node's properties for calling `m_msgproc->FinalizeNode()` later. */\r\n+    void RememberForFinalization(const CNode& node) EXCLUSIVE_LOCKS_REQUIRED(!m_nodes_for_finalization_mutex);\r\n+\r\n private:\r\n     struct ListenSocket {\r\n     public:\r\n         std::shared_ptr<Sock> sock;\r\n         inline void AddSocketPermissionFlags(NetPermissionFlags& flags) const { NetPermissions::AddFlag(flags, m_permissions); }\r\n         ListenSocket(std::shared_ptr<Sock> sock_, NetPermissionFlags permissions_)\r\n@@ -1287,13 +1307,13 @@ private:\r\n     bool InitBinds(const Options& options);\r\n \r\n     void ThreadOpenAddedConnections() EXCLUSIVE_LOCKS_REQUIRED(!m_added_nodes_mutex, !m_unused_i2p_sessions_mutex, !m_reconnections_mutex);\r\n     void AddAddrFetch(const std::string& strDest) EXCLUSIVE_LOCKS_REQUIRED(!m_addr_fetches_mutex);\r\n     void ProcessAddrFetch() EXCLUSIVE_LOCKS_REQUIRED(!m_addr_fetches_mutex, !m_unused_i2p_sessions_mutex);\r\n     void ThreadOpenConnections(std::vector<std::string> connect, Span<const std::string> seed_nodes) EXCLUSIVE_LOCKS_REQUIRED(!m_addr_fetches_mutex, !m_added_nodes_mutex, !m_nodes_mutex, !m_unused_i2p_sessions_mutex, !m_reconnections_mutex);\r\n-    void ThreadMessageHandler() EXCLUSIVE_LOCKS_REQUIRED(!mutexMsgProc);\r\n+    void ThreadMessageHandler() EXCLUSIVE_LOCKS_REQUIRED(!mutexMsgProc, !m_nodes_for_finalization_mutex);\r\n     void ThreadI2PAcceptIncoming();\r\n     void AcceptConnection(const ListenSocket& hListenSocket);\r\n \r\n     /**\r\n      * Create a `CNode` object from a socket that has just been accepted and add the node to\r\n      * the `m_nodes` member.\r\n@@ -1305,12 +1325,16 @@ private:\r\n     void CreateNodeFromAcceptedSocket(std::unique_ptr<Sock>&& sock,\r\n                                       NetPermissionFlags permission_flags,\r\n                                       const CService& addr_bind,\r\n                                       const CService& addr);\r\n \r\n     void DisconnectNodes() EXCLUSIVE_LOCKS_REQUIRED(!m_reconnections_mutex, !m_nodes_mutex);\r\n+\r\n+    /** Call `m_msgproc->FinalizeNode()` on all entries from `m_nodes_for_finalization`. */\r\n+    void FinalizeNodes() EXCLUSIVE_LOCKS_REQUIRED(!m_nodes_for_finalization_mutex);\r\n+\r\n     void NotifyNumConnectionsChanged();\r\n     /** Return true if the peer is inactive and should be disconnected. */\r\n     bool InactivityCheck(const CNode& node) const;\r\n \r\n     /**\r\n      * Generate a collection of sockets to check for IO readiness.\r\n@@ -1395,12 +1419,17 @@ private:\r\n     // Whether the node should be passed out in ForEach* callbacks\r\n     static bool NodeFullyConnected(const CNode& node);\r\n \r\n     uint16_t GetDefaultPort(Network net) const;\r\n     uint16_t GetDefaultPort(const std::string& addr) const;\r\n \r\n+    Mutex m_nodes_for_finalization_mutex;\r\n+\r\n+    /** When a node is destroyed some of its properties are saved here for calling m_msgproc->FinalizeNode() later. */\r\n+    std::queue<std::unique_ptr<NetEventsInterface::NodeFinalizationData>> m_nodes_for_finalization GUARDED_BY(m_nodes_for_finalization_mutex);\r\n+\r\n     // Network usage totals\r\n     mutable Mutex m_total_bytes_sent_mutex;\r\n     std::atomic<uint64_t> nTotalBytesRecv{0};\r\n     uint64_t nTotalBytesSent GUARDED_BY(m_total_bytes_sent_mutex) {0};\r\n \r\n     // outbound limit & stats\r\ndiff --git i/src/net.cpp w/src/net.cpp\r\nindex d641579f6b..3a6ba226d0 100644\r\n--- i/src/net.cpp\r\n+++ w/src/net.cpp\r\n@@ -534,13 +534,13 @@ std::shared_ptr<CNode> CConnman::ConnectNode(CAddress addrConnect, const char *p\r\n             CalculateKeyedNetGroup(target_addr),\r\n             nonce,\r\n             addr_bind,\r\n             pszDest ? pszDest : \"\",\r\n             conn_type,\r\n             /*inbound_onion=*/false,\r\n-            [this](CNode& node) { m_msgproc->FinalizeNode(node); },\r\n+            [this](CNode& node) { RememberForFinalization(node); },\r\n             CNodeOptions{\r\n                 .permission_flags = permission_flags,\r\n                 .i2p_sam_session = std::move(i2p_transient_session),\r\n                 .recv_flood_size = nReceiveFloodSize,\r\n                 .use_v2transport = use_v2transport,\r\n             });\r\n@@ -1832,13 +1832,13 @@ void CConnman::CreateNodeFromAcceptedSocket(std::unique_ptr<Sock>&& sock,\r\n         CalculateKeyedNetGroup(addr),\r\n         nonce,\r\n         addr_bind,\r\n         /*addrNameIn=*/\"\",\r\n         ConnectionType::INBOUND,\r\n         inbound_onion,\r\n-        [this](CNode& node) { m_msgproc->FinalizeNode(node); },\r\n+        [this](CNode& node) { RememberForFinalization(node); },\r\n         CNodeOptions{\r\n             .permission_flags = permission_flags,\r\n             .prefer_evict = discouraged,\r\n             .recv_flood_size = nReceiveFloodSize,\r\n             .use_v2transport = use_v2transport,\r\n         });\r\n@@ -1904,14 +1904,12 @@ void CConnman::DisconnectNodes()\r\n     AssertLockNotHeld(m_reconnections_mutex);\r\n \r\n     // Use a temporary variable to accumulate desired reconnections, so we don't need\r\n     // m_reconnections_mutex while holding m_nodes_mutex.\r\n     decltype(m_reconnections) reconnections_to_add;\r\n \r\n-    std::vector<std::shared_ptr<CNode>> disconnected_nodes;\r\n-\r\n     {\r\n         LOCK(m_nodes_mutex);\r\n \r\n         if (!fNetworkActive) {\r\n             // Disconnect any connected nodes\r\n             for (auto& pnode : m_nodes) {\r\n@@ -1925,18 +1923,12 @@ void CConnman::DisconnectNodes()\r\n         // Disconnect unused nodes\r\n         for (auto it = m_nodes.begin(); it != m_nodes.end();) {\r\n             auto node = *it;\r\n             if (node->fDisconnect) {\r\n                 it = m_nodes.erase(it);\r\n \r\n-                // Keep a reference to this CNode object to delay its destruction until\r\n-                // after m_nodes_mutex has been released. Destructing a node involves\r\n-                // calling m_msgproc->FinalizeNode() which acquires cs_main. Lock order\r\n-                // should be cs_main, m_nodes_mutex.\r\n-                disconnected_nodes.push_back(node);\r\n-\r\n                 // Add to reconnection list if appropriate. We don't reconnect right here, because\r\n                 // the creation of a connection is a blocking operation (up to several seconds),\r\n                 // and we don't want to hold up the socket handler thread for that long.\r\n                 if (node->m_transport->ShouldReconnectV1()) {\r\n                     reconnections_to_add.push_back({\r\n                         .addr_connect = node->addr,\r\n@@ -1964,12 +1956,38 @@ void CConnman::DisconnectNodes()\r\n         // Move entries from reconnections_to_add to m_reconnections.\r\n         LOCK(m_reconnections_mutex);\r\n         m_reconnections.splice(m_reconnections.end(), std::move(reconnections_to_add));\r\n     }\r\n }\r\n \r\n+void CConnman::RememberForFinalization(const CNode& node)\r\n+{\r\n+    LOCK(m_nodes_for_finalization_mutex);\r\n+    m_nodes_for_finalization.emplace(std::make_unique<NetEventsInterface::NodeFinalizationData>(node));\r\n+}\r\n+\r\n+void CConnman::FinalizeNodes()\r\n+{\r\n+    AssertLockNotHeld(m_nodes_for_finalization_mutex);\r\n+\r\n+    for (;;) {\r\n+        std::unique_ptr<NetEventsInterface::NodeFinalizationData> node_finalization_data;\r\n+\r\n+        {\r\n+            LOCK(m_nodes_for_finalization_mutex);\r\n+            if (m_nodes_for_finalization.empty()) {\r\n+                break;\r\n+            }\r\n+            node_finalization_data.swap(m_nodes_for_finalization.front());\r\n+            m_nodes_for_finalization.pop();\r\n+        }\r\n+\r\n+        m_msgproc->FinalizeNode(*node_finalization_data);\r\n+    }\r\n+}\r\n+\r\n void CConnman::NotifyNumConnectionsChanged()\r\n {\r\n     size_t nodes_size;\r\n     {\r\n         LOCK(m_nodes_mutex);\r\n         nodes_size = m_nodes.size();\r\n@@ -3050,12 +3068,14 @@ void CConnman::ThreadMessageHandler()\r\n \r\n         WAIT_LOCK(mutexMsgProc, lock);\r\n         if (!fMoreWork) {\r\n             condMsgProc.wait_until(lock, std::chrono::steady_clock::now() + std::chrono::milliseconds(100), [this]() EXCLUSIVE_LOCKS_REQUIRED(mutexMsgProc) { return fMsgProcWake; });\r\n         }\r\n         fMsgProcWake = false;\r\n+\r\n+        FinalizeNodes();\r\n     }\r\n }\r\n \r\n void CConnman::ThreadI2PAcceptIncoming()\r\n {\r\n     static constexpr auto err_wait_begin = 1s;\r\n@@ -3440,12 +3460,14 @@ void CConnman::StopThreads()\r\n     if (threadSocketHandler.joinable())\r\n         threadSocketHandler.join();\r\n }\r\n \r\n void CConnman::StopNodes()\r\n {\r\n+    AssertLockNotHeld(m_nodes_for_finalization_mutex);\r\n+\r\n     if (fAddressesInitialized) {\r\n         DumpAddresses();\r\n         fAddressesInitialized = false;\r\n \r\n         if (m_use_addrman_outgoing) {\r\n             // Anchor connections are only dumped during clean shutdown.\r\n@@ -3466,12 +3488,14 @@ void CConnman::StopNodes()\r\n     }\r\n     nodes.clear();\r\n \r\n     vhListenSocket.clear();\r\n     semOutbound.reset();\r\n     semAddnode.reset();\r\n+\r\n+    FinalizeNodes(); // Finalize any leftovers which were added after the msghand thread was interrupted.\r\n }\r\n \r\n CConnman::~CConnman()\r\n {\r\n     Interrupt();\r\n     Stop();\r\ndiff --git i/src/test/fuzz/p2p_handshake.cpp w/src/test/fuzz/p2p_handshake.cpp\r\nindex d881cb35ba..99b2d70706 100644\r\n--- i/src/test/fuzz/p2p_handshake.cpp\r\n+++ w/src/test/fuzz/p2p_handshake.cpp\r\n@@ -61,14 +61,14 @@ FUZZ_TARGET(p2p_handshake, .init = ::initialize)\r\n \r\n     LOCK(NetEventsInterface::g_msgproc_mutex);\r\n \r\n     std::vector<CNode*> peers;\r\n     const auto num_peers_to_add = fuzzed_data_provider.ConsumeIntegralInRange(1, 3);\r\n     for (int i = 0; i < num_peers_to_add; ++i) {\r\n-        peers.push_back(ConsumeNodeAsUniquePtr(fuzzed_data_provider, i, [&peerman](CNode& node) {\r\n-                            peerman->FinalizeNode(node);\r\n+        peers.push_back(ConsumeNodeAsUniquePtr(fuzzed_data_provider, i, [&connman](CNode& node) {\r\n+                            connman.RememberForFinalization(node);\r\n                         }).release());\r\n         connman.AddTestNode(*peers.back());\r\n         peerman->InitializeNode(\r\n             *peers.back(),\r\n             static_cast<ServiceFlags>(fuzzed_data_provider.ConsumeIntegral<uint64_t>()));\r\n     }\r\ndiff --git i/src/test/fuzz/p2p_headers_presync.cpp w/src/test/fuzz/p2p_headers_presync.cpp\r\nindex 4c470dab1c..d6159efaee 100644\r\n--- i/src/test/fuzz/p2p_headers_presync.cpp\r\n+++ w/src/test/fuzz/p2p_headers_presync.cpp\r\n@@ -58,13 +58,13 @@ void HeadersSyncSetup::ResetAndInitialize()\r\n         ConnectionType::INBOUND\r\n     };\r\n \r\n     for (auto conn_type : conn_types) {\r\n         CAddress addr{};\r\n         m_connections.push_back(new CNode(id++, nullptr, addr, 0, 0, addr, \"\", conn_type, false,\r\n-                                          [this](CNode& node) { m_node.peerman->FinalizeNode(node); }));\r\n+                                          [this](CNode& node) { m_node.connman->RememberForFinalization(node); }));\r\n         CNode& p2p_node = *m_connections.back();\r\n \r\n         connman.Handshake(\r\n             /*node=*/p2p_node,\r\n             /*successfully_connected=*/true,\r\n             /*remote_services=*/ServiceFlags(NODE_NETWORK | NODE_WITNESS),\r\ndiff --git i/src/test/fuzz/process_message.cpp w/src/test/fuzz/process_message.cpp\r\nindex b2031a60cc..a7b6913584 100644\r\n--- i/src/test/fuzz/process_message.cpp\r\n+++ w/src/test/fuzz/process_message.cpp\r\n@@ -64,13 +64,13 @@ FUZZ_TARGET(process_message, .init = initialize_process_message)\r\n \r\n     const std::string random_message_type{fuzzed_data_provider.ConsumeBytesAsString(CMessageHeader::MESSAGE_TYPE_SIZE).c_str()};\r\n     if (!LIMIT_TO_MESSAGE_TYPE.empty() && random_message_type != LIMIT_TO_MESSAGE_TYPE) {\r\n         return;\r\n     }\r\n     CNode& p2p_node = *ConsumeNodeAsUniquePtr(fuzzed_data_provider, std::nullopt, [](CNode& node) {\r\n-                           g_setup->m_node.peerman->FinalizeNode(node);\r\n+                           g_setup->m_node.connman->RememberForFinalization(node);\r\n                        }).release();\r\n \r\n     connman.AddTestNode(p2p_node);\r\n     FillNode(fuzzed_data_provider, connman, p2p_node);\r\n \r\n     const auto mock_time = ConsumeTime(fuzzed_data_provider);\r\ndiff --git i/src/test/fuzz/process_messages.cpp w/src/test/fuzz/process_messages.cpp\r\nindex 89584e3d59..9377327f8e 100644\r\n--- i/src/test/fuzz/process_messages.cpp\r\n+++ w/src/test/fuzz/process_messages.cpp\r\n@@ -53,13 +53,13 @@ FUZZ_TARGET(process_messages, .init = initialize_process_messages)\r\n     LOCK(NetEventsInterface::g_msgproc_mutex);\r\n \r\n     std::vector<CNode*> peers;\r\n     const auto num_peers_to_add = fuzzed_data_provider.ConsumeIntegralInRange(1, 3);\r\n     for (int i = 0; i < num_peers_to_add; ++i) {\r\n         peers.push_back(ConsumeNodeAsUniquePtr(fuzzed_data_provider, i, [&connman](CNode& node) {\r\n-                            connman.MsgProc()->FinalizeNode(node);\r\n+                            connman.RememberForFinalization(node);\r\n                         }).release());\r\n         CNode& p2p_node = *peers.back();\r\n \r\n         FillNode(fuzzed_data_provider, connman, p2p_node);\r\n \r\n         connman.AddTestNode(p2p_node);\r\n```\r\n</details>\r\n\r\nMaybe worth exploring in a followup if people think that makes sense. Calling `FinalizeNode()` on the `msghand` thread to avoid locking `cs_main` in the `net` thread looks out of the scope of this PR which is about removing the manual reference counting of `CNode`.\r\n",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32015#issuecomment-2725084083",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32015"
    },
    {
      "event": "labeled",
      "id": 16899590337,
      "node_id": "LE_lADOABII586tARLSzwAAAAPvS0jB",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16899590337",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-20T10:09:45Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 16915403320,
      "node_id": "HRFPE_lADOABII586tARLSzwAAAAPwPJI4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16915403320",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "dcb0be18ac64f001abaf646930bae1b5f6dba8c0",
      "commit_url": "https://api.github.com/repos/vasild/bitcoin/commits/dcb0be18ac64f001abaf646930bae1b5f6dba8c0",
      "created_at": "2025-03-20T17:45:28Z"
    },
    {
      "event": "commented",
      "id": 2741231347,
      "node_id": "IC_kwDOABII586jY97z",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2741231347",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-20T17:45:47Z",
      "updated_at": "2025-03-20T17:45:47Z",
      "author_association": "CONTRIBUTOR",
      "body": "`8c0ce1ca1c...dcb0be18ac`: rebase due to conflicts",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32015#issuecomment-2741231347",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32015"
    },
    {
      "event": "unlabeled",
      "id": 16916395102,
      "node_id": "UNLE_lADOABII586tARLSzwAAAAPwS7Re",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16916395102",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-20T18:54:17Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2747360632,
      "node_id": "IC_kwDOABII586jwWV4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2747360632",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-24T08:59:47Z",
      "updated_at": "2025-04-16T13:57:43Z",
      "author_association": "CONTRIBUTOR",
      "body": "### unique_ptr\r\n\r\nEdit: *Please see newer branch: https://github.com/bitcoin/bitcoin/pull/32015#issuecomment-2809672862*\r\n\r\nHere is a branch implementing another possible variant, using `unique_ptr` as suggested by @purpleKarrot in https://github.com/bitcoin/bitcoin/pull/32015#issuecomment-2711842250:\r\nhttps://github.com/bitcoin/bitcoin/compare/master...hodlinator:bitcoin:pr/32015_unique_ptr\r\n\r\n#### Pros\r\n\r\n- It keeps the `CNode` ownership/lifetime under control of `CConnman::m_nodes`/`m_nodes_disconnected`. This can be considered an advancement over the unclear ownership/lifetime of `shared_ptr` ([\"global variables in disguise\"](https://github.com/bitcoin/bitcoin/pull/32015#issuecomment-2711463453)).\r\n\r\n- It avoids the need for introducing `~CNode()` and `m_destruct_cb` together with passing a callback into `CNode()` everywhere.\r\n\r\n#### Cons\r\n\r\n- It requires more ongoing awareness of `CNode` lifetime than when using `shared_ptr`. However, once we grok `CNode` lifetimes, they appear fairly simple (unless I'm missing something):\r\n\r\n```\r\nCConnman::ThreadSocketHandler()\r\n    while (!interruptNet)\r\n        DisconnectNodes()\r\n            for m_nodes\r\n                move disconnected nodes to m_nodes_disconnected\r\n            for m_nodes_disconnected\r\n                // Not referenced from other threads.\r\n                // And no new snapshots possible since we are in m_nodes_disconnected.\r\n                if refcount <= 0\r\n                    DeleteNode()\r\n        CConnman::SocketHandler()\r\n            NodesSnapshot\r\n\r\nCConnman::ThreadMessageHandler()\r\n    while (!flagInterruptMsgProc)\r\n        NodesSnapshot\r\n\r\nShutdown() (init.cpp)\r\n    CConnman::Stop()\r\n        StopThreads()\r\n            threadMessageHandler.join()\r\n            threadSocketHandler.join()\r\n        StopNodes()\r\n            for m_nodes\r\n                DeleteNode()\r\n            for m_nodes_disconnected\r\n                DeleteNode()\r\n```\r\n\r\n- It retains `CNode::nRefCount` (but documents its purpose as tracking `NodesSnapshot` references).",
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32015#issuecomment-2747360632",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32015"
    },
    {
      "event": "mentioned",
      "id": 16951380863,
      "node_id": "MEE_lADOABII586tARLSzwAAAAPyYYt_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16951380863",
      "actor": {
        "login": "purpleKarrot",
        "id": 185240,
        "node_id": "MDQ6VXNlcjE4NTI0MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/185240?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/purpleKarrot",
        "html_url": "https://github.com/purpleKarrot",
        "followers_url": "https://api.github.com/users/purpleKarrot/followers",
        "following_url": "https://api.github.com/users/purpleKarrot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/purpleKarrot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/purpleKarrot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/purpleKarrot/subscriptions",
        "organizations_url": "https://api.github.com/users/purpleKarrot/orgs",
        "repos_url": "https://api.github.com/users/purpleKarrot/repos",
        "events_url": "https://api.github.com/users/purpleKarrot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/purpleKarrot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-24T08:59:48Z"
    },
    {
      "event": "subscribed",
      "id": 16951380930,
      "node_id": "SE_lADOABII586tARLSzwAAAAPyYYvC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16951380930",
      "actor": {
        "login": "purpleKarrot",
        "id": 185240,
        "node_id": "MDQ6VXNlcjE4NTI0MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/185240?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/purpleKarrot",
        "html_url": "https://github.com/purpleKarrot",
        "followers_url": "https://api.github.com/users/purpleKarrot/followers",
        "following_url": "https://api.github.com/users/purpleKarrot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/purpleKarrot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/purpleKarrot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/purpleKarrot/subscriptions",
        "organizations_url": "https://api.github.com/users/purpleKarrot/orgs",
        "repos_url": "https://api.github.com/users/purpleKarrot/repos",
        "events_url": "https://api.github.com/users/purpleKarrot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/purpleKarrot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-24T08:59:48Z"
    },
    {
      "event": "labeled",
      "id": 16964058777,
      "node_id": "LE_lADOABII586tARLSzwAAAAPzIv6Z",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16964058777",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-24T22:31:19Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2770068984,
      "node_id": "IC_kwDOABII586lG-X4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2770068984",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-01T17:13:11Z",
      "updated_at": "2025-04-01T17:13:11Z",
      "author_association": "CONTRIBUTOR",
      "body": "Comparing current shared_ptr change dcb0be18ac64f001abaf646930bae1b5f6dba8c0 with [suggested](https://github.com/bitcoin/bitcoin/pull/32015#issuecomment-2747360632) unique_ptr change cb959340a6734c3461f6d51a4a689f6067ba5e91 both seem like reasonable approaches.\r\n\r\n- I think vasild's point that drawbacks of manual reference counting outweigh drawbacks of shared_ptr, even if new shared_ptr code makes it a little harder to understand where objects will be deleted exactly. So this PR does seem like an improvement over the status quo.\r\n- Not sure I understand the purpose of the FinalizeNode patch https://github.com/bitcoin/bitcoin/pull/32015#issuecomment-2725084083 and whether it has benefits related to this PR, or unrelated to it?\r\n- The [suggested](https://github.com/bitcoin/bitcoin/pull/32015#issuecomment-2747360632) unique_ptr branch also seems nice because changes are broken up into smaller commits. And even though it doesn't completely remove reference counting, it does hide it inside the NodesSnapshot class, so maybe that is enough to achieve goals of this PR. I think the branch might also be able to also go further, deleting the CNode AddSnapshot, ReleaseSnapshot, and GetSnapshotCount methods and making NodesSnapshot a friend class that accesses the reference count directly. This could make it easier to see and guarantee that NodesSnapshot is the only thing accessing the reference count.\r\n\r\nOverall it could be nice to adopt at least parts of the unique_ptr branch here.\r\n\r\n",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32015#issuecomment-2770068984",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32015"
    },
    {
      "event": "commented",
      "id": 2770528058,
      "node_id": "IC_kwDOABII586lIuc6",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2770528058",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-01T19:50:27Z",
      "updated_at": "2025-04-01T19:52:21Z",
      "author_association": "CONTRIBUTOR",
      "body": "> I think the branch might also be able to also go further, deleting the CNode AddSnapshot, ReleaseSnapshot, and GetSnapshotCount methods and making NodesSnapshot a friend class that accesses the reference count directly. This could make it easier to see and guarantee that NodesSnapshot is the only thing accessing the reference count.\r\n\r\nI thought about making a base class of `CNode` that exposed snapshot refcounting through a `friend`-relationship, but I like the fact that `NodesSnapshot` is a private class inside `CConnman` (and didn't see a way to serve both goals).",
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32015#issuecomment-2770528058",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32015"
    },
    {
      "event": "unsubscribed",
      "id": 17081762904,
      "node_id": "UE_lADOABII586tARLSzwAAAAP6JwRY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17081762904",
      "actor": {
        "login": "lemons2lemonade",
        "id": 13054140,
        "node_id": "MDQ6VXNlcjEzMDU0MTQw",
        "avatar_url": "https://avatars.githubusercontent.com/u/13054140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/lemons2lemonade",
        "html_url": "https://github.com/lemons2lemonade",
        "followers_url": "https://api.github.com/users/lemons2lemonade/followers",
        "following_url": "https://api.github.com/users/lemons2lemonade/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/lemons2lemonade/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/lemons2lemonade/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/lemons2lemonade/subscriptions",
        "organizations_url": "https://api.github.com/users/lemons2lemonade/orgs",
        "repos_url": "https://api.github.com/users/lemons2lemonade/repos",
        "events_url": "https://api.github.com/users/lemons2lemonade/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/lemons2lemonade/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-01T19:53:50Z"
    },
    {
      "event": "commented",
      "id": 2798060885,
      "node_id": "IC_kwDOABII586mxwVV",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2798060885",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-11T21:43:31Z",
      "updated_at": "2025-04-11T21:43:31Z",
      "author_association": "MEMBER",
      "body": "As @Sjors [mentioned](https://github.com/bitcoin/bitcoin/pull/32015#issuecomment-2717384152), I attempted to do this a while ago, but brought in a whole new smart pointer impl to keep the threading guarantees so it never got much review.\r\n\r\n> In master deletion of CNode objects could happen in the net thread or in the main thread. In other words, some CNode object might be destroyed in the net thread and another CNode object might be destroyed in the main thread.\r\n\r\nWhere can this happen? At least in the current model, that sounds like a bug to me.\r\n\r\n> The idea is that it does not matter which thread will destroy the CNode objects.\r\n\r\nWhat makes this suddenly ok? I recall that deleting from the socket handler thread was a hard requirement for safety/sanity.\r\n\r\nThis makes me very uncomfortable. It's been a while since I've looked at this code so the details are fuzzy now, but I don't like the idea of refactoring the simple refcounters and changing the threading guarantees for no obvious gain. Is there some strong motivation for this I'm missing?",
      "user": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32015#issuecomment-2798060885",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32015"
    },
    {
      "event": "mentioned",
      "id": 17230895194,
      "node_id": "MEE_lADOABII586tARLSzwAAAAQDCpha",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17230895194",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-11T21:43:32Z"
    },
    {
      "event": "subscribed",
      "id": 17230895202,
      "node_id": "SE_lADOABII586tARLSzwAAAAQDCphi",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17230895202",
      "actor": {
        "login": "Sjors",
        "id": 10217,
        "node_id": "MDQ6VXNlcjEwMjE3",
        "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Sjors",
        "html_url": "https://github.com/Sjors",
        "followers_url": "https://api.github.com/users/Sjors/followers",
        "following_url": "https://api.github.com/users/Sjors/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Sjors/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Sjors/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
        "organizations_url": "https://api.github.com/users/Sjors/orgs",
        "repos_url": "https://api.github.com/users/Sjors/repos",
        "events_url": "https://api.github.com/users/Sjors/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Sjors/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-11T21:43:32Z"
    },
    {
      "event": "commented",
      "id": 2798111021,
      "node_id": "IC_kwDOABII586mx8kt",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2798111021",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-11T22:26:12Z",
      "updated_at": "2025-04-11T22:27:42Z",
      "author_association": "CONTRIBUTOR",
      "body": "> > In master deletion of CNode objects could happen in the net thread or in the main thread. In other words, some CNode object might be destroyed in the net thread and another CNode object might be destroyed in the main thread.\r\n> \r\n> Where can this happen? At least in the current model, that sounds like a bug to me.\r\n\r\nThe \"diagram\" at the bottom of https://github.com/bitcoin/bitcoin/pull/32015#issuecomment-2747360632 may be helpful. The net-thread corresponds to `CConnman::ThreadSocketHandler()` and the main-thread corresponds to `Shutdown() (init.cpp)`. (See calls to `DeleteNode()` in the diagram).",
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32015#issuecomment-2798111021",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32015"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 17239033901,
      "node_id": "HRFPE_lADOABII586tARLSzwAAAAQDhsgt",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17239033901",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "71750daa51de355e5a74ab3e20c1b408658d2a94",
      "commit_url": "https://api.github.com/repos/vasild/bitcoin/commits/71750daa51de355e5a74ab3e20c1b408658d2a94",
      "created_at": "2025-04-13T16:26:22Z"
    },
    {
      "event": "commented",
      "id": 2800041130,
      "node_id": "IC_kwDOABII586m5Tyq",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2800041130",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-13T17:22:08Z",
      "updated_at": "2025-04-13T17:22:08Z",
      "author_association": "CONTRIBUTOR",
      "body": "`dcb0be1...71750da`: rebase due to conflicts\r\n\r\nI do not understand the fixation of knowing and controlling where an object is destroyed from. The elegance and simplicity behind the sole idea of `shared_ptr` is that it does not matter.\r\n\r\n@hodlinator, I checked https://github.com/bitcoin/bitcoin/compare/master...hodlinator:bitcoin:pr/32015_unique_ptr, here is a quick feedback:\r\n* Does not remove the manual reference counting which is the aim of this PR. That diff mostly replaces the raw pointer `CNode*` with `std::unique_ptr<CNode>`.\r\n* To implement the snapshots it takes and stores raw pointers away from the `unique_ptr` which is an anti-pattern because then the lifetime of the raw pointer has to be manually kept shorter than the lifetime of the `unique_ptr`. I think that defeats the purpose of `unique_ptr` itself.\r\n* Any operation on the `std::vector<std::unique_ptr<CNode>> m_nodes` that deletes elements, e.g. `clear()`, `erase()`, `pop_back()` or `resize()` will automatically destroy the `CNode` objects even if they are referenced (manual ref count `>0`).\r\n\r\n@theuni,\r\n> > The idea is that it does not matter which thread will destroy the CNode objects.\r\n\r\n> What makes this suddenly ok? I recall that deleting from the socket handler thread was a hard requirement for safety/sanity.\r\n\r\nI do not know about that. Can you elaborate? `PeerManagerImpl::FinalizeNode()` has to be called on the `CNode` before it is destroyed. Could this be some misunderstanding that from this follows that `CNode` must be destroyed from a particular thread?\r\n\r\n> ... I don't like the idea of refactoring the simple refcounters and changing the threading guarantees for no obvious gain ...\r\n\r\nHmm, \"simple refcounters\"... IMO those are \"complicated\". That might be subjective. But this patch reduces the code by about 70 lines. It entirely drops the need for snapshots as well. There is no changing of \"threading guarantees\" here. You seem to be thinking that `CNode` objects can and must only be destroyed from the `net` thread, but that [might as well happen](https://github.com/bitcoin/bitcoin/pull/32015#issuecomment-2798111021) from the `main` thread. I do not think that this is a bug. And it is just fine, IMO, that with this PR deletion can now happen from the `msghand` thread. If you think that is not ok, can you explain why?",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32015#issuecomment-2800041130",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32015"
    },
    {
      "event": "mentioned",
      "id": 17239154147,
      "node_id": "MEE_lADOABII586tARLSzwAAAAQDiJ3j",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17239154147",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-13T17:22:10Z"
    },
    {
      "event": "subscribed",
      "id": 17239154150,
      "node_id": "SE_lADOABII586tARLSzwAAAAQDiJ3m",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17239154150",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-13T17:22:10Z"
    },
    {
      "event": "mentioned",
      "id": 17239154153,
      "node_id": "MEE_lADOABII586tARLSzwAAAAQDiJ3p",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17239154153",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-13T17:22:10Z"
    },
    {
      "event": "subscribed",
      "id": 17239154155,
      "node_id": "SE_lADOABII586tARLSzwAAAAQDiJ3r",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17239154155",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-13T17:22:10Z"
    },
    {
      "event": "unlabeled",
      "id": 17239169208,
      "node_id": "UNLE_lADOABII586tARLSzwAAAAQDiNi4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17239169208",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-13T17:29:48Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2800470466,
      "node_id": "IC_kwDOABII586m68nC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2800470466",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-14T04:53:00Z",
      "updated_at": "2025-04-14T04:53:00Z",
      "author_association": "CONTRIBUTOR",
      "body": "I thought a bit more about the [unique_ptr + manual refcounting](https://github.com/bitcoin/bitcoin/compare/master...hodlinator:bitcoin:pr/32015_unique_ptr). It seems to me that the manual refcounting can be replaced by the internal refcoutning in `shared_ptr`, like this:\r\n\r\n* drop `CNode::nRefCount`, same counter is somewhere inside `shared_ptr`\r\n* `CNode::GetSnapshotCount()` -> `std::shared_ptr::use_count()`\r\n* `CNode::AddSnapshot()` + copy the raw pointer out from `unique_ptr` -> copy the `shared_ptr`\r\n* `CNode::ReleaseSnapshot()` -> destroy the `shared_ptr` copy\r\n* drop all of `CConnman::NodesSnapshot` -> just make a copy of `m_nodes` under the mutex.\r\n\r\nThe purpose of `CConnman::m_nodes_disconnected` and `CConnman::DeleteNode()` seems to be to call `FinalizeNode()` before the `CNode` object is destroyed. If `m_nodes_disconnected` and `DeleteNode()` are replaced with calling `FinalizeNode()` from `~CNode()`, then it becomes this PR.",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32015#issuecomment-2800470466",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32015"
    },
    {
      "event": "commented",
      "id": 2802932015,
      "node_id": "IC_kwDOABII586nEVkv",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2802932015",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-14T20:39:19Z",
      "updated_at": "2025-04-14T20:42:17Z",
      "author_association": "MEMBER",
      "body": "Note: This is a long and rambling comment, which mostly consists of me reminding myself about the specifics of this code. I'm leaving the whole thing in case my thought process helps any other reviewers.\r\n\r\n---\r\n\r\n > > > The idea is that it does not matter which thread will destroy the CNode objects.\r\n> \r\n> > What makes this suddenly ok? I recall that deleting from the socket handler thread was a hard requirement for safety/sanity.\r\n> \r\n> I do not know about that. Can you elaborate? `PeerManagerImpl::FinalizeNode()` has to be called on the `CNode` before it is destroyed. Could this be some misunderstanding that from this follows that `CNode` must be destroyed from a particular thread?\r\n> \r\n\r\nYes, the main thread may call `FinalizeNode()`, but at that point the message handler and socket handler threads have already been joined, so that's not really interesting.\r\n\r\nWe currently guarantee that no node will be deleted from `threadMessageHandler` as it iterates. That's the one that matters.\r\n\r\nThis guarantee protects us from a large footgun. Note that my original motivation for #10738 had nothing to do with code cleanliness, rather I was targeting a substantial optimization: `CConnman::ForNode` / `CConnman::ForEachNode` both hold `m_nodes_mutex` for the duration of their callbacks. Those callbacks may be long-lived, substantial, and/or have scary locks themselves, so blocking the socket handler thread for them _really_ sucks.\r\n\r\nCrucially, `PeerManagerImpl::State(nodeid)` will stay valid for any reachable `nodeid` for the duration of `SendMessages` and `ProcessMessages`.\r\n\r\nNow consider if:\r\n\r\n> with this PR deletion can now happen from the msghand thread\r\n\r\nA reasonable follow-up to this PR (I actually expected to see it here) would be:\r\n\r\n```diff\r\ndiff --git a/src/net.cpp b/src/net.cpp\r\nindex b68d2fb37aa..d5631c056ce 100644\r\n--- a/src/net.cpp\r\n+++ b/src/net.cpp\r\n@@ -3902,13 +3902,16 @@ void CConnman::PushMessage(CNode* pnode, CSerializedNetMsg&& msg)\r\n\r\n bool CConnman::ForNode(NodeId id, std::function<bool(CNode* pnode)> func)\r\n {\r\n+    std::shared_ptr<CNode> found_node = nullptr;\r\n+    {\r\n     LOCK(m_nodes_mutex);\r\n     for (auto&& pnode : m_nodes) {\r\n         if(pnode->GetId() == id) {\r\n-            return NodeFullyConnected(*pnode) && func(pnode.get());\r\n+            found_node = pnode;\r\n         }\r\n     }\r\n-    return false;\r\n+    }\r\n+    return found_node && NodeFullyConnected(*found_node) && func(found_node.get());\r\n }\r\n\r\n CSipHasher CConnman::GetDeterministicRandomizer(uint64_t id) const\r\ndiff --git a/src/net.h b/src/net.h\r\nindex e1318c8e66b..bff5c5f423f 100644\r\n--- a/src/net.h\r\n+++ b/src/net.h\r\n@@ -1140,11 +1140,9 @@ public:\r\n     using NodeFn = std::function<void(CNode*)>;\r\n     void ForEachNode(const NodeFn& func)\r\n     {\r\n-        LOCK(m_nodes_mutex);\r\n-        for (auto&& node : m_nodes) {\r\n-            if (NodeFullyConnected(*node)) {\r\n-                func(node.get());\r\n-            }\r\n+        auto nodes = WITH_LOCK(m_nodes_mutex, return m_nodes);\r\n+        for (auto&& node : nodes) {\r\n+            if (NodeFullyConnected(*node)) func(node.get());\r\n         }\r\n     };\r\n\r\n```\r\n\r\nRight? Because if the threading restriction is \"gone\", that seems like it should be safe. Like I said, I did that as part of the PR mentioned above: https://github.com/bitcoin/bitcoin/pull/10738/commits/6dc671a22046c6c09a6de2b1d38e9e2fa3920628\r\n\r\nBut if we're not careful, the nodes could now be deleted as a result of `ForNode`/`ForEachNode`, or any function that copies the node vector under the lock and uses the copy.\r\n\r\nThe problem with this is that it makes interactions with `PeerManager` super hard to reason about. Consider a function like that does something like this:\r\n\r\n```c++\r\nPeerManagerImpl::SomeFunction()\r\n{\r\n    NodeId to_disconnect = CallSomeFunctionToGetWorstNode();\r\n    m_connman.ForNode(to_disconnect, [&](CNode* pnode) {\r\n        ...\r\n        pnode->fDisconnect = true;\r\n        ...\r\n    }\r\n    SomeFunctionThatTakesAFewSeconds();\r\n    CNodeState *state = State(to_disconnect); // YIKES\r\n```\r\n\r\nThe above isn't contrived either, `EvictExtraOutboundPeers`/`NewPoWValidBlock` do things like that.\r\n\r\n## HOWEVER\r\n\r\nAs-is, the impl here currently protects against nodes being deleted in `SendMessages` and `ProcessMessages` using the same refcounting trick that we do in master. Frustratingly, in master it's already abstracted away by `NodesSnapshot` so it's not immediately obvious (RAII notwithstanding, it's an annoying trend in our repo imo to hide crucial implementation details behind abstractions for the sake of having fewer lines of code). And this PR takes it one step further:\r\n```\r\nauto nodes = WITH_LOCK(m_nodes_mutex, return m_nodes);\r\n```\r\n^^ This line is now in charge of keeping the shared_ptrs alive until the end of the message handling loop. If not for that (for ex, if we instead kept `weak_ptr`s and upgraded them as we passed through the loop), the `ForEachNode` case I explained above would be a problem.\r\n\r\nSo I don't think it's true (and imo it's quite dangerous to assume) that it's \"safe to delete a CNode from any thread\". What's happening here is that it's now possible that nodes are deleted in two places rather than one: either after as pass through the socket handler loop, or after a pass through the message handler loop. That still makes me uncomfortable, but I admit that I can't find any problems with it.\r\n\r\nThis PR also maintains the invariant that the socket handler thread is always completely finished with all socket operations before `FinalizeNode` is called.\r\n\r\nAnd as far as I can tell, this PR *does* allow us to take the patch above, getting rid of the nasty lock-holding in `ForEachNode` and `ForNode`. BUT that _would_ open up the possibility of deletion from other callers. For example, it would make it possible for the RPC thread to delete the node from `sendmsgtopeer()`. And if any future code stashed the shared_ptrs from CConnman, it would make it possible for the deletion to happen anywhere.\r\n\r\n---\r\n\r\n### TLDR\r\n\r\nThis is a combination of 2 changes: replacing our refcounters with shared_ptrs (style), and adding a new deletion point (functionality). As far as I can tell, the 2nd change is a side-effect of the first because it's not straightforward to implement this with shared pointers while avoiding the possible deletion in `ThreadMessageHandler()`. I _really_ don't care for behavioral changes that are dictated by style changes. So the question for reviewers, imo, is: is the functional change a good one?\r\n\r\nI don't trust that it would be safe to simply allow `CNode`s to be deleted just anywhere. But crucially, that's not what's being proposed in the code here. Instead, a single new deletion point has been introduced (at the end of the message processing loop), which is much more reasonable, as it protects `SendMessages` and `ProcessMessages` as-before.\r\n\r\nI'm not completely opposed to this, but I still find it scary and rather unjustified. I'm not convinced by the \"it reduces the lines of code\" argument. In fact, I would probably prefer to add comments around the `NodesSnapshot` to obviate what it's doing.\r\n\r\nIf we're going to move forward with this I think we need:\r\n- ~Split the style change and functional change into separate commits: first the shared_ptr change as a no-op, then the additional deletion point.~ Edit: Looks like this isn't realistic.\r\n- Justification besides \"code cleanup\". I don't think that's a valid reason to be making behavioral changes to such low-level code.\r\n- In-place comments that describe the guarantees we provide. If the safety of the p2p layer revolves around a copy of a vector of shared_ptrs, that needs to be made clear. That `nodes.clear()` is also too crucial to not have a comment.\r\n- Documentation about the finalization/deletion process in general. This should probably happen even if we don't take these changes.",
      "user": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32015#issuecomment-2802932015",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32015"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDc1YWNkY2JhYTk5MjM1YzU3OGE2NWM1MTZkY2IxZjBiYWVmMjlkNmY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/75acdcbaa99235c578a65c516dcb1f0baef29d6f",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/75acdcbaa99235c578a65c516dcb1f0baef29d6f",
      "tree": {
        "sha": "ddbad2b50f215ba16337530ca169a3ef48152fb4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ddbad2b50f215ba16337530ca169a3ef48152fb4"
      },
      "verification": {
        "verified": true,
        "reason": "valid",
        "payload": "tree ddbad2b50f215ba16337530ca169a3ef48152fb4\nparent 817edfb21e4fa96289d69d4e1dbabb6b9ef9d8f5\nauthor Vasil Dimov <vd@FreeBSD.org> 1692032928 +0200\ncommitter Vasil Dimov <vd@FreeBSD.org> 1744729408 +0200\n\nnet: replace manual reference counting of CNode with shared_ptr\n\nBefore this change the code used to count references to `CNode` objects\nmanually via `CNode::nRefCount`. Unneeded `CNode`s were scheduled for\ndeletion by putting them in `CConnman::m_nodes_disconnected` and were\ndeleted after their reference count reached zero. Deleting consists of\ncalling `PeerManager::FinalizeNode()` and destroying the `CNode` object.\n\nReplace this scheme with `std::shared_ptr`. This simplifies the code and\nremoves:\n`CNode::nRefCount`\n`CNode::GetRefCount()`\n`CNode::AddRef()`\n`CNode::Release()`\n`CConnman::m_nodes_disconnected`\n`CConnman::NodesSnapshot`\n\nNow creating a snapshot of `CConnman::m_nodes` is done by simply copying\nit (under the mutex).\n\nCall `PeerManager::FinalizeNode()` from the destructor of `CNode`, which\nis called when the reference count reaches 0.\n",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQQzBAABCAAdFiEE5k2NRWFNsHVF2czBVN8G9ktVy78FAmf+dUEACgkQVN8G9ktV\ny7/R/R//SGQlgpNmFxxFktjAARmqwtyycxbA9FaGtli419++khJRSvvdiDpsUuX1\nef6Cpos556bdqx0G2TNyVq7T1Dsrv/JiD6uo6/+E1hrqZwmVUKTN7hJqoREnDep8\neRmBk8QKSiqTk+cQ8Ae7d94Yn4lzFnNAEtNv0kfszlXd2IZhz7GHuGd7CVML8/Ir\n5CX0g9iu5uxztTP5tayt4kws4KrGERrM/iFe4yy9ecmVh++PCOwrjG/E+ETOnKjX\nj0A4BBpMmBKllcAAIXSanZN7aMEpU71JtGZwr1tCwjyHpUlXc2/8i3NdNdaWb9en\nyrkCoNXCXXRgdasiPaXG4yI4J3OHQPzbMWtOhQvjRaR/5SsQBF3MSBw/nCHmooms\nMlNJIsdclOBBtMGeEXzfReTlLaUjiYXSSz+gpEMRnb9qMUsyMAEtWTMeDvZ+53GW\ntJA7perz4G/0wks2Pqd+CexQZ14f61RZ1jbr6zl3lOLj21euDux5Cri2vioMuHIk\n35jOCRbRbDSt5xXbK+kfui761vxxxxVvaelN4CjRdrBg7l8l0akRTeCpF8OklZUl\n7cEaXGBxejKxRj7/gRNaTC/2duSAS6QBSCuxUkfaawmZJbz0K0+GDhArJS3kpqIr\nmdWiHhOUHB7dtAiilChlCQma4Tpn6biDlhGYfQYRLynRag2Ma4sl2Rf6qppMrIkD\nae348wdeSUf2tvFWxnN1U38LUpjIye4HH8mWoANdq2ceIKwaXwTaEYLZiS/dSGhj\norRsVUlvhgY/+3h1B5Abw45v8wQGeSyL+aiupf5WNWE3w4bd8JxBixFEO3IKrawz\n9yteHYHcqjI9iwqFAe8+gNIBRTocT2U3hIbsStqaQLk3oNw+hCrznMWXphILzHQ9\nez1A8B1KuQbRHFmm46KZMhs8/P01121mBtP5svLdT+UF0+QyR6Npu4rZwmxXBJY5\n2Xqz2fZk2n2BMCOJN2QRB9eJTjIr0k4jN9fcnRR/yZmREas8QnlleZjPSJHbGUsI\nXrln7hP/dONSkjt8kRgCyytFGX6X9IGCU5X058cXTAdxDd/E1DT3RYCeP7TWBTlf\nR3L91V0IZ8Oy5PfhND+mZqGjQO6Q5hFSivbm2SV2IY0iDQu4/PWYEZj8o1l87TjX\nYl08oZ5HLY+Zuvdh7ul9F8C+apStvYoNFAqkdttDrRIkzBUI8S1VNFEmJpJgoLZh\nZH8ZRjQX4VB/508ozLG4yxV1FZOOmu3G6ZQec0YppjR8dD0FLpJ7UQNDI1mWyopi\nMdkf3CP8hDbzfrB2ujCBf1TMdGjAtth6ezDr8ypDFssYCCEcRV+iPNm+JNnjwUnz\nif8Qg4d/EuupQmyiCPeuLmf2dcEUUQ==\n=A89Q\n-----END PGP SIGNATURE-----"
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/817edfb21e4fa96289d69d4e1dbabb6b9ef9d8f5",
          "sha": "817edfb21e4fa96289d69d4e1dbabb6b9ef9d8f5",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/817edfb21e4fa96289d69d4e1dbabb6b9ef9d8f5"
        }
      ],
      "message": "net: replace manual reference counting of CNode with shared_ptr\n\nBefore this change the code used to count references to `CNode` objects\nmanually via `CNode::nRefCount`. Unneeded `CNode`s were scheduled for\ndeletion by putting them in `CConnman::m_nodes_disconnected` and were\ndeleted after their reference count reached zero. Deleting consists of\ncalling `PeerManager::FinalizeNode()` and destroying the `CNode` object.\n\nReplace this scheme with `std::shared_ptr`. This simplifies the code and\nremoves:\n`CNode::nRefCount`\n`CNode::GetRefCount()`\n`CNode::AddRef()`\n`CNode::Release()`\n`CConnman::m_nodes_disconnected`\n`CConnman::NodesSnapshot`\n\nNow creating a snapshot of `CConnman::m_nodes` is done by simply copying\nit (under the mutex).\n\nCall `PeerManager::FinalizeNode()` from the destructor of `CNode`, which\nis called when the reference count reaches 0.",
      "committer": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2025-04-15T15:03:28Z"
      },
      "author": {
        "name": "Vasil Dimov",
        "email": "vd@FreeBSD.org",
        "date": "2023-08-14T17:08:48Z"
      },
      "sha": "75acdcbaa99235c578a65c516dcb1f0baef29d6f"
    },
    {
      "event": "commented",
      "id": 2806161332,
      "node_id": "IC_kwDOABII586nQp-0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2806161332",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-15T15:21:55Z",
      "updated_at": "2025-04-15T15:21:55Z",
      "author_association": "CONTRIBUTOR",
      "body": "@theuni would be curious for your feedback on hodlinators's unique_ptr + isolated refcount approach in https://github.com/bitcoin/bitcoin/pull/32015#issuecomment-2747360632.\r\n\r\nThe more I read here (not fully understanding everything) the more that approach seems appealing because when you say things like \"it's now possible that nodes are deleted in two places rather than one\" and \"But if we're not careful, the nodes could now be deleted as a result of ForNode/ForEachNode\" it really makes shared_ptr seem like a poor fit. Shared_ptr can be great when objects have trivial destructors and it doesn't actually matter when they are deleted, but if you need control over when resources are freed, more explicit refcounting would seem safer and simpler.\r\n\r\nIt seems like both you and vasild like making a dichotomy between (1) using manual refcounting and (2) using shared_ptr, and not wanting to choose a middle ground like hodlinators approach which provides automatic reference counting though an explicit mechanism that is less flexible but simpler than shared_ptr. I'm not really sure why that is.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32015#issuecomment-2806161332",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32015"
    },
    {
      "event": "mentioned",
      "id": 17271697964,
      "node_id": "MEE_lADOABII586tARLSzwAAAAQFeTIs",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17271697964",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-15T15:21:56Z"
    },
    {
      "event": "subscribed",
      "id": 17271697995,
      "node_id": "SE_lADOABII586tARLSzwAAAAQFeTJL",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17271697995",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-15T15:21:57Z"
    },
    {
      "event": "commented",
      "id": 2806461955,
      "node_id": "IC_kwDOABII586nRzYD",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2806461955",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-15T15:47:14Z",
      "updated_at": "2025-04-15T15:47:14Z",
      "author_association": "MEMBER",
      "body": "> The more I read here (not fully understanding everything) the more that approach seems appealing because when you say things like \"it's now possible that nodes are deleted in two places rather than one\" and \"But if we're not careful, the nodes could now be deleted as a result of ForNode/ForEachNode\" it really makes shared_ptr seem like a poor fit. Shared_ptr can be great when objects have trivial destructors and it doesn't actually matter when they are deleted, but if you need control over when resources are freed, more explicit refcounting would seem safer and simpler.\r\n\r\nI agree.\r\n\r\n> \r\n> It seems like both you and vasild like making a dichotomy between (1) using manual refcounting and (2) using shared_ptr, and not wanting to choose a middle ground like hodlinators approach which provides automatic reference counting though an explicit mechanism that is less flexible but simpler than shared_ptr. I'm not really sure why that is.\r\n\r\nNo reason, I just haven't looked at it yet.\r\n\r\nI spent all of yesterday poking around and trying to remind myself of where be the dragons in this code, hence the rambly and not very useful comment :)\r\n\r\nI originally intended to comment that it was definitely unsafe to change the way deletion happens, but after poking around all day I concluded that even though it makes me uneasy (because I feel like I've forgotten something important over the years), I can't really find any tangible issues with the addition of a new deletion point. I wouldn't feel comfortable enough to ACK the approach, but I recognize that I can't argue against it either. However, since there's no real justification for the behavioral change (which I consider scary) other than \"code cleanup\", I can't really get onboard with it.\r\n\r\nIf the `unique_ptr` approach cleans things up without the behavioral change, that sounds much nicer to me. Will have a look.",
      "user": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32015#issuecomment-2806461955",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32015"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 17272569911,
      "node_id": "HRFPE_lADOABII586tARLSzwAAAAQFhoA3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17272569911",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "75acdcbaa99235c578a65c516dcb1f0baef29d6f",
      "commit_url": "https://api.github.com/repos/vasild/bitcoin/commits/75acdcbaa99235c578a65c516dcb1f0baef29d6f",
      "created_at": "2025-04-15T16:11:52Z"
    },
    {
      "event": "commented",
      "id": 2806700806,
      "node_id": "IC_kwDOABII586nStsG",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2806700806",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-15T16:15:44Z",
      "updated_at": "2025-04-15T16:15:44Z",
      "author_association": "CONTRIBUTOR",
      "body": "`71750daa51...75acdcbaa9`: add some comments and rename a variable, see below\r\n\r\n> We currently guarantee that no node will be deleted from `threadMessageHandler` as it iterates. That's the one that matters.\r\n\r\nYes. I just want to clarify - what do you mean by \"from\"? I would say \"no node will be deleted (does not matter _from_ which thread) while `threadMessageHandler` iterates\". Is this what you mean? This guarantee is achieved by the caller of `ProcessMessages()` and `SendMessages()` taking a snapshot of all nodes to keep them from destruction while those functions are running. That is the same in `master` and in this PR.\r\n\r\n> Crucially, `PeerManagerImpl::State(nodeid)` will stay valid for any reachable `nodeid` for the duration of `SendMessages` and `ProcessMessages`.\r\n\r\nYes. True in `master` and in this PR for the same reason - the caller takes a snapshot while calling those functions.\r\n\r\n> Now consider if:\r\n\r\n> > with this PR deletion can now happen from the msghand thread\r\n\r\nYes. Sounds good. As long as `ProcessMessages()` and `SendMessages()` are protected by the snapshot (they are in `master` and in this PR).\r\n\r\n> A reasonable follow-up to this PR (I actually expected to see it here) would be ... Right? Because if the threading restriction is \"gone\", that seems like it should be safe.\r\n\r\nRight. That is safe and super reasonable because it minimizes the time `m_nodes_mutex` is held, like you mentioned. I think that belongs to this PR or a followup.\r\n\r\n> But if we're not careful, the nodes could now be deleted as a result of ForNode/ForEachNode, or any function that copies the node vector under the lock and uses the copy.\r\n\r\nOnly if all others have released their copies. In which case it is ok.\r\n\r\n> The problem with this is that it makes interactions with `PeerManager` super hard to reason about. Consider a function like that does something like this: `PeerManagerImpl::SomeFunction()` ...\r\n\r\nThis does not change rules about interactions with `PeerManager` (so it is not harder or easier, it is the same). The fact that nodes may be deleted if nobody holds a reference to them is true in `master` and in this PR. I think the rule is \"Don't delete nodes while `ProcessMessages()` and `SendMessages()` are running\".\r\n\r\n`PeerManagerImpl::SomeFunction()` could result in `state` being `nullptr` (YIKES) also in `master`, depending on where `SomeFunction()` is called from. If that is a problem for `SomeFunction()` it could either:\r\n* handle `State()` returning `nullptr` (some callers of `State()` already do that in `master`) or\r\n* it could increment the reference count internally at the start and reduce it at the end or demand that its callers do that, like `ProcessMessages()` and `SendMessages()`.\r\n\r\nThis reasoning is unchanged by this PR.\r\n\r\n> the impl here currently protects against nodes being deleted in SendMessages and ProcessMessages using the same refcounting trick that we do in master.\r\n\r\nYes.\r\n\r\n> > auto nodes = WITH_LOCK(m_nodes_mutex, return m_nodes);\r\n\r\n> This line is now in charge of keeping the shared_ptrs alive until the end of the message handling loop\r\n\r\nRenamed it to `nodes_snapshot` and added a comment. I find the pattern used in `master` and in this PR reasonable:\r\n\r\n1. Take a snapshot of the nodes\r\n2. Do something with the nodes from the snapshot (Implying they will not get deleted while we work on them, that is obvious, right? What's the meaning of \"snapshot\" otherwise?)\r\n3. Release the snapshot\r\n// after the release this code does not care, nodes may get deleted if all others have released their references\r\n\r\n> So I don't think it's true (and imo it's quite dangerous to assume) that it's \"safe to delete a CNode from any thread\".\r\n\r\nBut why? I agree it is unsafe to:\r\n\r\nA. Delete a node without calling `FinalizeNode()`, or\r\nB. Delete a node while there are references to it.\r\n\r\nbut the thread that does the deletion? That does not matter.\r\n\r\n> What's happening here is that it's now possible that nodes are deleted in two places rather than one: either after as pass through the socket handler loop, or after a pass through the message handler loop.\r\n\r\nIMO that is safe as long as A. and B. are guaranteed not to happen.\r\n\r\n> This PR also maintains the invariant that the socket handler thread is always completely finished with all socket operations before `FinalizeNode` is called.\r\n\r\nThat is also the same in `master`. `FinalizeNode()` is called after `CNode::CloseSocketDisconnect()`. To me the code in this PR makes that more obvious compared to `master` because `FinalizeNode()` is called from the `CNode`'s destructor and at that time it is clear that all socket operations are completely finished.\r\n\r\n> And as far as I can tell, this PR does allow us to take the patch above, getting rid of the nasty lock-holding in ForEachNode and ForNode.\r\n\r\nI think so too.\r\n\r\n> BUT that would open up the possibility of deletion from other callers. For example, it would make it possible for the RPC thread to delete the node from sendmsgtopeer(). And if any future code stashed the shared_ptrs from CConnman, it would make it possible for the deletion to happen anywhere.\r\n\r\nYes, and that is fine. But don't forget - only if all others have released their copies. We shouldn't be worried that we will brick some other thread from the RPC thread if we delete a `CNode` object from the RPC thread which the other thread is using. That is because deletion only happens if reference count drops to zero which means nobody is using it and then it is irrelevant which thread does the deletion because at that time there are 0 users of the object.\r\n\r\n> * Justification besides \"code cleanup\". I don't think that's a valid reason to be making behavioral changes to such low-level code.\r\n\r\nAdded some to the PR description.\r\n\r\n> In-place comments that describe the guarantees we provide. If the safety of the p2p layer revolves around a copy of a vector of shared_ptrs, that needs to be made clear. That `nodes.clear()` is also too crucial to not have a comment.\r\n\r\nAdded some comments.\r\n\r\n> Documentation about the finalization/deletion process in general. This should probably happen even if we don't take these changes.\r\n\r\nI agree. Maybe if that doc existed beforehand it would have made this discussion shorter. Opened https://github.com/bitcoin/bitcoin/pull/32278\r\n",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32015#issuecomment-2806700806",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32015"
    },
    {
      "event": "commented",
      "id": 2807266497,
      "node_id": "IC_kwDOABII586nU3zB",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2807266497",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-15T19:29:16Z",
      "updated_at": "2025-04-15T19:29:16Z",
      "author_association": "CONTRIBUTOR",
      "body": "> when you say things like \"it's now possible that nodes are deleted in two places rather than one\" and\r\n\r\nIt is actually \"... in 3 places rather than 2\"\r\n\r\n> \"But if we're not careful, the nodes could now be deleted as a result of ForNode/ForEachNode\"\r\n\r\nThis sounds like some unexpected deletion is going to happen in the middle of everything and bad things will follow and this is going to be because of this PR. But that is not true. Nodes could be deleted as a result of ForNode even now in `master` - if ForNode sets `fDisconnect` to `true`, then that will eventually result in the deletion of the node when it is safe to do so. This is both in `master` and in this PR. Nodes will not be deleted unexpectedly, accidentally, while there are references to them because we are not careful with ForNode (again, same in `master` and in this PR).\r\n\r\n> It seems like both you and vasild like making a dichotomy between (1) using manual refcounting and (2) using shared_ptr, and not wanting to choose a middle ground like hodlinators approach which provides automatic reference counting though an explicit mechanism that is less flexible but simpler than shared_ptr. I'm not really sure why that is.\r\n\r\nI expressed some concerns about the \"unique_ptr+manual refcounting\" in https://github.com/bitcoin/bitcoin/pull/32015#issuecomment-2800041130",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32015#issuecomment-2807266497",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32015"
    },
    {
      "event": "commented",
      "id": 2808714778,
      "node_id": "IC_kwDOABII586naZYa",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2808714778",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-16T07:52:57Z",
      "updated_at": "2025-04-16T07:52:57Z",
      "author_association": "CONTRIBUTOR",
      "body": "> I do not understand the fixation of knowing and controlling where an object is destroyed from. The elegance and simplicity behind the sole idea of `shared_ptr` is that it does not matter.\r\n\r\nI used to appreciate `shared_ptr`-like constructs, but as @purpleKarrot [wrote](https://github.com/bitcoin/bitcoin/pull/32015#issuecomment-2711463453), they introduce global variables in disguise. Using `unique_ptr` prevents that and makes ownership clear, which is a step forward.\r\n\r\n> @hodlinator, I checked [master...hodlinator:bitcoin:pr/32015_unique_ptr](https://github.com/bitcoin/bitcoin/compare/master...hodlinator:bitcoin:pr/32015_unique_ptr), here is a quick feedback:\r\n> \r\n> * Does not remove the manual reference counting which is the aim of this PR. That diff mostly replaces the raw pointer `CNode*` with `std::unique_ptr<CNode>`.\r\n\r\nYes, the PR instead makes clear that refcounting is there just to track live snapshots. Making that sole purpose clear removes the itch to eradicate it for me.\r\n\r\n> * To implement the snapshots it takes and stores raw pointers away from the `unique_ptr` which is an anti-pattern because then the lifetime of the raw pointer has to be manually kept shorter than the lifetime of the `unique_ptr`. I think that defeats the purpose of `unique_ptr` itself.\r\n\r\nIn a post-`unique_ptr` (and `shared_ptr`) world, raw pointers indicate non-ownership. It is subtle but not an anti-pattern.\r\n\r\n> * Any operation on the `std::vector<std::unique_ptr<CNode>> m_nodes` that deletes elements, e.g. `clear()`, `erase()`, `pop_back()` or `resize()` will automatically destroy the `CNode` objects even if they are referenced (manual ref count `>0`).\r\n\r\nGood point. Might be worth adding `~CNode() { Assume(GetSnapshotCount() == 0); }`.",
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32015#issuecomment-2808714778",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32015"
    },
    {
      "event": "mentioned",
      "id": 17283981975,
      "node_id": "MEE_lADOABII586tARLSzwAAAAQGNKKX",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17283981975",
      "actor": {
        "login": "purpleKarrot",
        "id": 185240,
        "node_id": "MDQ6VXNlcjE4NTI0MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/185240?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/purpleKarrot",
        "html_url": "https://github.com/purpleKarrot",
        "followers_url": "https://api.github.com/users/purpleKarrot/followers",
        "following_url": "https://api.github.com/users/purpleKarrot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/purpleKarrot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/purpleKarrot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/purpleKarrot/subscriptions",
        "organizations_url": "https://api.github.com/users/purpleKarrot/orgs",
        "repos_url": "https://api.github.com/users/purpleKarrot/repos",
        "events_url": "https://api.github.com/users/purpleKarrot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/purpleKarrot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-16T07:52:58Z"
    },
    {
      "event": "subscribed",
      "id": 17283982001,
      "node_id": "SE_lADOABII586tARLSzwAAAAQGNKKx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17283982001",
      "actor": {
        "login": "purpleKarrot",
        "id": 185240,
        "node_id": "MDQ6VXNlcjE4NTI0MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/185240?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/purpleKarrot",
        "html_url": "https://github.com/purpleKarrot",
        "followers_url": "https://api.github.com/users/purpleKarrot/followers",
        "following_url": "https://api.github.com/users/purpleKarrot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/purpleKarrot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/purpleKarrot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/purpleKarrot/subscriptions",
        "organizations_url": "https://api.github.com/users/purpleKarrot/orgs",
        "repos_url": "https://api.github.com/users/purpleKarrot/repos",
        "events_url": "https://api.github.com/users/purpleKarrot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/purpleKarrot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-16T07:52:58Z"
    },
    {
      "event": "mentioned",
      "id": 17283982024,
      "node_id": "MEE_lADOABII586tARLSzwAAAAQGNKLI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17283982024",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-16T07:52:58Z"
    },
    {
      "event": "subscribed",
      "id": 17283982055,
      "node_id": "SE_lADOABII586tARLSzwAAAAQGNKLn",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17283982055",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-16T07:52:58Z"
    },
    {
      "event": "commented",
      "id": 2808774455,
      "node_id": "IC_kwDOABII586nan83",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2808774455",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-16T08:16:34Z",
      "updated_at": "2025-04-16T08:16:34Z",
      "author_association": "CONTRIBUTOR",
      "body": "> Consider a function like that does something like this: ... PeerManagerImpl::SomeFunction()\r\n\r\nHere is an example that YIKES on `master` as well:\r\n\r\n<details>\r\n<summary>[patch] YIKES on master</summary>\r\n\r\n```diff\r\ndiff --git i/src/net.cpp w/src/net.cpp\r\nindex fc0edc1a5c..c48a62f31e 100644\r\n--- i/src/net.cpp\r\n+++ w/src/net.cpp\r\n@@ -2758,12 +2758,14 @@ void CConnman::ThreadOpenConnections(const std::vector<std::string> connect, std\r\n         const auto current_time{NodeClock::now()};\r\n         int nTries = 0;\r\n         const auto reachable_nets{g_reachable_nets.All()};\r\n \r\n         while (!interruptNet)\r\n         {\r\n+            m_msgproc->HasAllDesirableServiceFlags(ServiceFlags{123});\r\n+\r\n             if (anchor && !m_anchors.empty()) {\r\n                 const CAddress addr = m_anchors.back();\r\n                 m_anchors.pop_back();\r\n                 if (!addr.IsValid() || IsLocal(addr) || !g_reachable_nets.Contains(addr) ||\r\n                     !m_msgproc->HasAllDesirableServiceFlags(addr.nServices) ||\r\n                     outbound_ipv46_peer_netgroups.count(m_netgroupman.GetGroup(addr))) continue;\r\ndiff --git i/src/net_processing.cpp w/src/net_processing.cpp\r\nindex 0b25396dd2..6148c1d8de 100644\r\n--- i/src/net_processing.cpp\r\n+++ w/src/net_processing.cpp\r\n@@ -519,12 +519,13 @@ public:\r\n         EXCLUSIVE_LOCKS_REQUIRED(!m_most_recent_block_mutex);\r\n \r\n     /** Implement NetEventsInterface */\r\n     void InitializeNode(const CNode& node, ServiceFlags our_services) override EXCLUSIVE_LOCKS_REQUIRED(!m_peer_mutex, !m_tx_download_mutex);\r\n     void FinalizeNode(const CNode& node) override EXCLUSIVE_LOCKS_REQUIRED(!m_peer_mutex, !m_headers_presync_mutex, !m_tx_download_mutex);\r\n     bool HasAllDesirableServiceFlags(ServiceFlags services) const override;\r\n+    void SomeFunction() const;\r\n     bool ProcessMessages(CNode* pfrom, std::atomic<bool>& interrupt) override\r\n         EXCLUSIVE_LOCKS_REQUIRED(!m_peer_mutex, !m_most_recent_block_mutex, !m_headers_presync_mutex, g_msgproc_mutex, !m_tx_download_mutex);\r\n     bool SendMessages(CNode* pto) override\r\n         EXCLUSIVE_LOCKS_REQUIRED(!m_peer_mutex, !m_most_recent_block_mutex, g_msgproc_mutex, !m_tx_download_mutex);\r\n \r\n     /** Implement PeerManager */\r\n@@ -1660,14 +1661,32 @@ void PeerManagerImpl::FinalizeNode(const CNode& node)\r\n         LOCK(m_headers_presync_mutex);\r\n         m_headers_presync_stats.erase(nodeid);\r\n     }\r\n     LogDebug(BCLog::NET, \"Cleared nodestate for peer=%d\\n\", nodeid);\r\n }\r\n \r\n+void PeerManagerImpl::SomeFunction() const\r\n+{\r\n+    const NodeId to_disconnect{0};\r\n+    m_connman.ForNode(to_disconnect, [&](CNode* node) {\r\n+        node->fDisconnect = true;\r\n+        return true;\r\n+    });\r\n+    while (WITH_LOCK(cs_main, return State(to_disconnect)) != nullptr) {\r\n+        std::this_thread::sleep_for(1s);\r\n+    }\r\n+    LogInfo(\"YIKES\");\r\n+    Assert(false);\r\n+}\r\n+\r\n bool PeerManagerImpl::HasAllDesirableServiceFlags(ServiceFlags services) const\r\n {\r\n+    if (services == 123) {\r\n+        SomeFunction();\r\n+    }\r\n+\r\n     // Shortcut for (services & GetDesirableServiceFlags(services)) == GetDesirableServiceFlags(services)\r\n     return !(GetDesirableServiceFlags(services) & (~services));\r\n }\r\n \r\n ServiceFlags PeerManagerImpl::GetDesirableServiceFlags(ServiceFlags services) const\r\n {\r\n```\r\n</details>\r\n\r\nThat might happen on `master` and on this PR. I would say that for each yikes in this PR there is an equivalent yikes on `master`, or in other words, this PR does not have more or is not prone to more yikes. The rule is the same - \"if a code relies on CNode not being deleted, then it should either hold m_nodex_mutex, or increment the reference count during its usage.\r\n\r\n> ~Split the style change and functional change into separate commits: first the shared_ptr change as a no-op, then the additional deletion point.~ Edit: Looks like this isn't realistic.\r\n\r\nI just did that, see https://github.com/vasild/bitcoin/commits/cnode_shared_ptr_split_in_two_commits/\r\nThe intermediate state, after the first commit is somewhat odd - we have `shared_ptr` but don't let it destroy the owned object by itself when we drop the `shared_ptr`, e.g. just remove from the vector. Instead in this intermediate state we monitor the `use_count()` and call `reset()` manually. Also `NodesSnapshot` is an useless wrapper that just copies the vector. The second commit cleans all that and arrives at the same end result as this PR.",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32015#issuecomment-2808774455",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32015"
    },
    {
      "event": "commented",
      "id": 2809672862,
      "node_id": "IC_kwDOABII586neDSe",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2809672862",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-16T13:55:23Z",
      "updated_at": "2025-04-16T13:55:23Z",
      "author_association": "CONTRIBUTOR",
      "body": "Published new iteration of `unique_ptr` change in separate branch: https://github.com/bitcoin/bitcoin/compare/master...hodlinator:bitcoin:pr/32015_unique_ptr2\r\n\r\n* Moved changes clarifying `CNode::nRefCount` really only being used for `NodesSnapshot`s to happen before `unique_ptr` commit.\r\n* Split the `CNode::nRefCount`-commit in two, one to change usage to only be for snapshots, one for renaming the methods. Now we also rename the field to `m_snapshot_count` and group refcounting methods together.\r\n* Added `~CNode()`-dtor with `assert(GetSnapshotCount() == 0)` in order to catch invalid operations like `CConnman::m_nodes.clear()` as [pointed out by vasild](https://github.com/bitcoin/bitcoin/pull/32015#issuecomment-2800041130).\r\n* Added speculative final commit to introduce use of `NodesSnapshot` in `ForNode` and `ForEachNode` to decrease time `m_nodes_mutex` is locked, inspired by [@theuni's comment](https://github.com/bitcoin/bitcoin/pull/32015#issuecomment-2802932015). Feels fairly safe given that we only delete nodes with 0 snapshots prior to `CConnman::Stop()` & `StopNodes()`. If another thread was still inside `ForNode`/`ForEachNode` at that point, we are already shutting down, and the asserts for zero snapshots in `DeleteNode()` will simply kill the process quicker. Should it be deemed too risky this commit could be skipped.\r\n* Moved some paranoid `TRACEPOINT` changes and making `StopThreads` & `StopNodes` private into early \"Minor improvements\" commit.\r\n* `DeleteNode(std::unique_ptr<CNode> pnode)` -> `DeleteNode(std::unique_ptr<CNode>&& pnode)`: Clarifies that we are assuming ownership of the `unique_ptr`.\r\n* Rebased on same parent as this PR.",
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32015#issuecomment-2809672862",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32015"
    },
    {
      "event": "commented",
      "id": 2810940584,
      "node_id": "IC_kwDOABII586ni4yo",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2810940584",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-16T22:17:30Z",
      "updated_at": "2025-04-16T22:17:30Z",
      "author_association": "MEMBER",
      "body": "I've been working on some experiments and tests for this again today, but unfortunately I didn't have time to get finished.\r\n\r\nI'll be away until Tuesday, but I'll resume here next week. Sorry for the delay :(",
      "user": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32015#issuecomment-2810940584",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32015"
    },
    {
      "event": "reviewed",
      "id": 2775466634,
      "node_id": "PRR_kwDOABII586lbkKK",
      "url": null,
      "actor": null,
      "commit_id": "75acdcbaa99235c578a65c516dcb1f0baef29d6f",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32015#pullrequestreview-2775466634",
      "submitted_at": "2025-04-17T11:49:36Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32015"
    },
    {
      "event": "commented",
      "id": 2828630396,
      "node_id": "IC_kwDOABII586omXl8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2828630396",
      "actor": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-24T19:17:09Z",
      "updated_at": "2025-04-24T19:17:09Z",
      "author_association": "MEMBER",
      "body": "Ok, I'm back after a week of paging all of this back in and hacking around. This is actually something I wanted to get cleaned up a long time ago, so I'm happy it has eyes on it again. Sorry in advance for the novel :)\r\n\r\n---\r\n\r\nI think the discussions about `shared_ptr`/`unique_ptr`/refcounting have distracted from what really needs to be discussed here: the lifetime and concurrency requirements/guarantees of the various subsystems.\r\n\r\nThe refcounters are (ab)used as a generic means of controlling the teardown order of a `CNode`. As I mentioned above, historically, this has meant that disconnection/finalization/deletion have always happened on the socket handler thread and always in that order (with the exception of when we're shutting down).\r\n\r\nHowever, as @vasild has pointed out, this is neither ideal nor necessary.\r\n\r\nSo rather than starting by discussing what types of pointers we should be using, we need to start by figuring out what we're trying to solve/improve. And before we can do that, we need to lay out the way things currently work.\r\n\r\nThese are the important guarantees at the moment, as I see them:\r\n---\r\n#### `FinalizeNode` may only be called once per node.\r\nThis one is obvious, but it's necessary to keep in mind that we shouldn't be introducing any possible races.\r\n\r\n#### `FinalizeNode` will never be called as a result of setting `fDisconnect` from `ProcessMessages`/`SendMessages`\r\nThis prevents any pointers obtained by calling `State(id)` or `GetPeerRef(id)` from being yanked out from under us when we're in those functions.\r\n\r\nI think this is the one that has led to the workarounds and `shared_ptr` discussion here. It is currently enforced by `NodesSnapshot`: a class which bumps the refcount for each node before calling `ProcessMessages`/`SendMessages`, then decref'ing them when finished. This has the effect of keeping them all alive for the duration of a single pass through the loop.\r\n\r\n@vasild's observation was that this looks a lot like an ownership model which can be handled with `shared_ptr`s by taking advantage of their inherent refcounting and introducing a deletion point in `ThreadMessageHandler`. \r\n\r\nI maintain that this is non-ideal and foot-gunny, as making a copy of `m_nodes` is the mechanism used to enforce the above contract, though it's not at all obvious that it's doing so.\r\n\r\n#### Finalization happens just before deletion, both on the socket handler thread\r\nAgain, this one isn't strictly necessary, but it's currently the case.\r\n\r\nAnd again, @vasild's `shared_ptr` approach handles this by removing that restriction, and calling `FinalizeNode` as part of `CNode`'s destructor, as that means that its refcount has reached zero.\r\n\r\nHe points out that it is safe to call this sometimes from the message handler thread instead, as long as it is only called once. I agree with this and suggest (see below) taking it a step further and _only_ calling it from the message handler thread, as that guarantees that it can't be running during `ProcessMessages`/`SendMessages`.\r\n\r\n#### Disconnection always happens before calling `FinalizeNode`.\r\nI'll come back to this one later as it's not strictly necessary, but it's currently the case. By the time `FinalizeNode` is called, the socket handler thread is completely done with the node (the socket has been shutdown). \r\n\r\n#### When the socket handler disconnects a peer, it is almost immediately (in the same pass through the loop) removed from `m_nodes`\r\nThis one is annoying, but the unit tests depend on it. Basically, as soon as we notice that a peer has disconnected, the socket handler thread takes care to ensure that other subsystems won't find it by looking through `m_nodes`. This includes `ForEachNode`/`ForNode`/`CopyStats`, etc.\r\n\r\n#### Only a single thread deletes `CNode`s.\r\nDuh.\r\n\r\n#### Any other function passing a `CNode` (for ex, a caller of `ForNode() from RPC`) shouldn't have it deleted for its duration\r\nThis is a completely separate issue from the disconnection/finalization semantics, and _is_ a good use-case for `shared_ptr`s.\r\n\r\n--- \r\n\r\nIn reality, the refcounting (and by extension `NodesSnapshot`) has been used as a loose way of enforcing teardown semantics. It's true that we can mimic those semantics by introducing `shared_ptr`s to manage the nodes instead, but that further obscures what the actual requirements are. As a few people have pointed out on this PR, abusing the facilities of `shared_ptr`/`unique_ptr` to replace the manual refcounting is not the solution. Rather, we should enforce the _actual_ semantics in code.\r\n\r\nI've pushed a branch here to illustrate the above: https://github.com/theuni/bitcoin/commits/finalize_threadheandler2/\r\n\r\nIt makes the following changes:\r\n\r\n- Expose `m_nodes_disconnected` to the message handling thread.\r\n- Add `CNode::m_finalized` which is set once FinalizeNode has been called. This, combined with the move from `m_nodes` to `m_nodes_disconnected` is enough for us to determine when the socket handler/message handler threads are done with a `CNode`.\r\n- Call `FinalizeNode` from the top/bottom of the message handler thread instead, to guarantee that it will never be called from another thread during a `ProcessMessages`/`SendMessages` invocation. This also makes much more sense conceptually, as `FinalizeNode` is not something the socket handler should have anything to do with.\r\n\r\nWith the above changes in place, the ordering of the teardown is fully proceduralized, so the refcounting is no longer needed and is thus removed. At that point, the CNode can be safely deleted once (in no particular order)\r\n- It has been moved to `m_nodes_disconnected`\r\n- `CNode::m_finalized` is true\r\n- No other threads (RPC via `ForNode` as an example) are holding it\r\n\r\nIn order to guarantee the last one, `CNode`s are kept in `m_nodes` and `m_nodes_disconnected` as `shared_ptr`s. Since the teardown semantics are enforced elsewhere, deletion is now uninteresting and can happen safely from any thread.\r\n\r\nIt also contains a few optimizations that become possible once the teardown procedure is proceduralized:\r\n- `m_nodes_mutex` is no longer held for the duration of ForNode/ForEachNode. This should be a nice improvement, especially for nodes with hundreds of connections.\r\n- `FinalizeNode` is now allowed to happen before disconnection, as there's no actual need to order those events.\r\n\r\n---\r\n\r\nI realize that I've duplicated a good amount of work here like the `shared_ptr` commit as well as some of the pre-requisite cleanup commits that are similar to @hodlinator's. It's also incomplete, for example it's missing the fuzzing fixups that @vasild has already done, as well as a bunch of additional comments/docs as I've suggested already. I'd be happy to rebase my branch to include those. I agree with #32326 as well. It's not necessary for my branch, but it's a nice improvement and I did have a similar commit at one point for the exact same reason.\r\n\r\nI feel pretty strongly about addressing the teardown order procedurally rather than mimicking our current refcounting semantics which don't make the requirements/guarantees clear. Ultimately I agree that `shared_ptr`s are best to enforce the lifetimes, but only after codifying the other rules.\r\n\r\nI think the code in my branch is much easier to reason about. There's no hidden side-effects of node deletion, magic copies of `m_nodes` aren't used to prevent `FinalizeNode` being called at the wrong time, and disconnection/finalization/deletion no longer carry hidden dependencies on each other.",
      "user": {
        "login": "theuni",
        "id": 417043,
        "node_id": "MDQ6VXNlcjQxNzA0Mw==",
        "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/theuni",
        "html_url": "https://github.com/theuni",
        "followers_url": "https://api.github.com/users/theuni/followers",
        "following_url": "https://api.github.com/users/theuni/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/theuni/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/theuni/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
        "organizations_url": "https://api.github.com/users/theuni/orgs",
        "repos_url": "https://api.github.com/users/theuni/repos",
        "events_url": "https://api.github.com/users/theuni/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/theuni/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32015#issuecomment-2828630396",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32015"
    },
    {
      "event": "mentioned",
      "id": 17396047000,
      "node_id": "MEE_lADOABII586tARLSzwAAAAQM4pyY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17396047000",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-24T19:17:10Z"
    },
    {
      "event": "subscribed",
      "id": 17396047019,
      "node_id": "SE_lADOABII586tARLSzwAAAAQM4pyr",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17396047019",
      "actor": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-24T19:17:10Z"
    },
    {
      "event": "mentioned",
      "id": 17396047042,
      "node_id": "MEE_lADOABII586tARLSzwAAAAQM4pzC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17396047042",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-24T19:17:11Z"
    },
    {
      "event": "subscribed",
      "id": 17396047059,
      "node_id": "SE_lADOABII586tARLSzwAAAAQM4pzT",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17396047059",
      "actor": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-24T19:17:11Z"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1984875189",
      "pull_request_review_id": 2666944030,
      "id": 1984875189,
      "node_id": "PRRC_kwDOABII5852Tsq1",
      "diff_hunk": "@@ -1921,51 +1927,40 @@ void CConnman::DisconnectNodes()\n         }\n \n         // Disconnect unused nodes\n-        std::vector<CNode*> nodes_copy = m_nodes;\n-        for (CNode* pnode : nodes_copy)\n-        {\n-            if (pnode->fDisconnect)\n-            {\n-                // remove from m_nodes\n-                m_nodes.erase(remove(m_nodes.begin(), m_nodes.end(), pnode), m_nodes.end());\n+        for (auto it = m_nodes.begin(); it != m_nodes.end();) {\n+            auto node = *it;\n+            if (node->fDisconnect) {\n+                it = m_nodes.erase(it);\n+\n+                // Keep a reference to this CNode object to delay its destruction until\n+                // after m_nodes_mutex has been released. Destructing a node involves\n+                // calling m_msgproc->FinalizeNode() which acquires cs_main. Lock order\n+                // should be cs_main, m_nodes_mutex.\n+                disconnected_nodes.push_back(node);",
      "path": "src/net.cpp",
      "position": 236,
      "original_position": 207,
      "commit_id": "75acdcbaa99235c578a65c516dcb1f0baef29d6f",
      "original_commit_id": "2747f135be3a2ccf3ce89bea3ee6037266611a16",
      "in_reply_to_id": null,
      "user": {
        "login": "dergoegge",
        "id": 8077169,
        "node_id": "MDQ6VXNlcjgwNzcxNjk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8077169?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/dergoegge",
        "html_url": "https://github.com/dergoegge",
        "followers_url": "https://api.github.com/users/dergoegge/followers",
        "following_url": "https://api.github.com/users/dergoegge/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/dergoegge/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/dergoegge/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/dergoegge/subscriptions",
        "organizations_url": "https://api.github.com/users/dergoegge/orgs",
        "repos_url": "https://api.github.com/users/dergoegge/repos",
        "events_url": "https://api.github.com/users/dergoegge/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/dergoegge/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Now that `~CNode` is responsible for calling `FinalizeNode`, the guarantees around which thread does the actual cleanup are lost. It's basically just whichever thread ends up holding the last instance of a `CNode`. This seems bug prone.\r\n\r\nE.g. there are no guarantees (afaict) that `disconnected_nodes` will actually be the last owner.",
      "created_at": "2025-03-07T11:03:12Z",
      "updated_at": "2025-03-07T11:03:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32015#discussion_r1984875189",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1984875189"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32015"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1938,
      "original_line": 1938,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1985062506",
      "pull_request_review_id": 2667258371,
      "id": 1985062506,
      "node_id": "PRRC_kwDOABII5852UaZq",
      "diff_hunk": "@@ -1921,51 +1927,40 @@ void CConnman::DisconnectNodes()\n         }\n \n         // Disconnect unused nodes\n-        std::vector<CNode*> nodes_copy = m_nodes;\n-        for (CNode* pnode : nodes_copy)\n-        {\n-            if (pnode->fDisconnect)\n-            {\n-                // remove from m_nodes\n-                m_nodes.erase(remove(m_nodes.begin(), m_nodes.end(), pnode), m_nodes.end());\n+        for (auto it = m_nodes.begin(); it != m_nodes.end();) {\n+            auto node = *it;\n+            if (node->fDisconnect) {\n+                it = m_nodes.erase(it);\n+\n+                // Keep a reference to this CNode object to delay its destruction until\n+                // after m_nodes_mutex has been released. Destructing a node involves\n+                // calling m_msgproc->FinalizeNode() which acquires cs_main. Lock order\n+                // should be cs_main, m_nodes_mutex.\n+                disconnected_nodes.push_back(node);",
      "path": "src/net.cpp",
      "position": 236,
      "original_position": 207,
      "commit_id": "75acdcbaa99235c578a65c516dcb1f0baef29d6f",
      "original_commit_id": "2747f135be3a2ccf3ce89bea3ee6037266611a16",
      "in_reply_to_id": 1984875189,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "The idea is that it does not matter which thread will destroy the `CNode` objects.\r\n\r\n> there are no guarantees (afaict) that `disconnected_nodes` will actually be the last owner.\r\n\r\nThat is right, but there is no need for such a guarantee. `disconnected_nodes` is to guarantee that the objects will not be destroyed while holding `m_nodes_mutex`.",
      "created_at": "2025-03-07T13:29:34Z",
      "updated_at": "2025-03-07T13:29:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32015#discussion_r1985062506",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1985062506"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32015"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1938,
      "original_line": 1938,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1985793960",
      "pull_request_review_id": 2668522266,
      "id": 1985793960,
      "node_id": "PRRC_kwDOABII5852XM-o",
      "diff_hunk": "@@ -1884,8 +1884,15 @@ bool CConnman::AddConnection(const std::string& address, ConnectionType conn_typ\n     } // no default case, so the compiler can warn about missing cases\n \n     // Count existing connections\n-    int existing_connections = WITH_LOCK(m_nodes_mutex,\n-                                         return std::count_if(m_nodes.begin(), m_nodes.end(), [conn_type](CNode* node) { return node->m_conn_type == conn_type; }););\n+    const int existing_connections = WITH_LOCK(m_nodes_mutex,\n+        return std::count_if(",
      "path": "src/net.cpp",
      "position": null,
      "original_position": 193,
      "commit_id": "75acdcbaa99235c578a65c516dcb1f0baef29d6f",
      "original_commit_id": "36d932cebbb235a79e90575960646e86a23d39a8",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: Might as well use `std::ranges::count_if` here and in `GetFullOutboundConnCount`.",
      "created_at": "2025-03-07T22:24:56Z",
      "updated_at": "2025-03-07T23:13:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32015#discussion_r1985793960",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1985793960"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32015"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1888,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1985826873",
      "pull_request_review_id": 2668522266,
      "id": 1985826873,
      "node_id": "PRRC_kwDOABII5852XVA5",
      "diff_hunk": "@@ -1921,51 +1927,40 @@ void CConnman::DisconnectNodes()\n         }\n \n         // Disconnect unused nodes\n-        std::vector<CNode*> nodes_copy = m_nodes;\n-        for (CNode* pnode : nodes_copy)\n-        {\n-            if (pnode->fDisconnect)\n-            {\n-                // remove from m_nodes\n-                m_nodes.erase(remove(m_nodes.begin(), m_nodes.end(), pnode), m_nodes.end());\n+        for (auto it = m_nodes.begin(); it != m_nodes.end();) {\n+            auto node = *it;\n+            if (node->fDisconnect) {\n+                it = m_nodes.erase(it);\n+\n+                // Keep a reference to this CNode object to delay its destruction until\n+                // after m_nodes_mutex has been released. Destructing a node involves\n+                // calling m_msgproc->FinalizeNode() which acquires cs_main. Lock order\n+                // should be cs_main, m_nodes_mutex.\n+                disconnected_nodes.push_back(node);",
      "path": "src/net.cpp",
      "position": 236,
      "original_position": 207,
      "commit_id": "75acdcbaa99235c578a65c516dcb1f0baef29d6f",
      "original_commit_id": "2747f135be3a2ccf3ce89bea3ee6037266611a16",
      "in_reply_to_id": 1984875189,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In thread https://github.com/bitcoin/bitcoin/pull/32015#discussion_r1984875189:\r\n\r\nMaybe one could have an additional `vector<shared_ptr<CNode>>` member in `CConnman` beyond `m_nodes` that always keeps the `shared_ptr::use_count()` above 0. Then use removal from that vector (when `use_count() == 1`) for controlled deletion with enforced lock order, more like how the code was before?",
      "created_at": "2025-03-07T23:06:14Z",
      "updated_at": "2025-03-07T23:13:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32015#discussion_r1985826873",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1985826873"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32015"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1938,
      "original_line": 1938,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1987604281",
      "pull_request_review_id": 2671518728,
      "id": 1987604281,
      "node_id": "PRRC_kwDOABII5852eG85",
      "diff_hunk": "@@ -1884,8 +1884,15 @@ bool CConnman::AddConnection(const std::string& address, ConnectionType conn_typ\n     } // no default case, so the compiler can warn about missing cases\n \n     // Count existing connections\n-    int existing_connections = WITH_LOCK(m_nodes_mutex,\n-                                         return std::count_if(m_nodes.begin(), m_nodes.end(), [conn_type](CNode* node) { return node->m_conn_type == conn_type; }););\n+    const int existing_connections = WITH_LOCK(m_nodes_mutex,\n+        return std::count_if(",
      "path": "src/net.cpp",
      "position": null,
      "original_position": 193,
      "commit_id": "75acdcbaa99235c578a65c516dcb1f0baef29d6f",
      "original_commit_id": "36d932cebbb235a79e90575960646e86a23d39a8",
      "in_reply_to_id": 1985793960,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Indeed, done, thanks!",
      "created_at": "2025-03-10T16:06:50Z",
      "updated_at": "2025-03-10T16:06:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32015#discussion_r1987604281",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1987604281"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32015"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1888,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1988085255",
      "pull_request_review_id": 2672297590,
      "id": 1988085255,
      "node_id": "PRRC_kwDOABII5852f8YH",
      "diff_hunk": "@@ -1716,7 +1714,7 @@ bool CConnman::AttemptToEvictConnection()\n         return false;\n     }\n     LOCK(m_nodes_mutex);\n-    for (CNode* pnode : m_nodes) {\n+    for (const auto& pnode : m_nodes) {",
      "path": "src/net.cpp",
      "position": null,
      "original_position": 132,
      "commit_id": "75acdcbaa99235c578a65c516dcb1f0baef29d6f",
      "original_commit_id": "af622d00ba7f5317220cf8d7d71ad9cd791dd892",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Not sure about adding non-transitive `const` here since we set `pnode->fDisconnect` inside the loop.\r\n\r\nSimilar case in `DisconnectNodes()`-loop.",
      "created_at": "2025-03-10T22:01:04Z",
      "updated_at": "2025-03-10T22:58:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32015#discussion_r1988085255",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1988085255"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32015"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1717,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1988117321",
      "pull_request_review_id": 2672347152,
      "id": 1988117321,
      "node_id": "PRRC_kwDOABII5852gENJ",
      "diff_hunk": "@@ -54,20 +54,19 @@ struct ConnmanTestMsg : public CConnman {\n     void AddTestNode(CNode& node)\n     {\n         LOCK(m_nodes_mutex);\n-        m_nodes.push_back(&node);\n+        m_nodes.push_back(std::shared_ptr<CNode>(&node));",
      "path": "src/test/util/net.h",
      "position": 14,
      "original_position": 14,
      "commit_id": "75acdcbaa99235c578a65c516dcb1f0baef29d6f",
      "original_commit_id": "af622d00ba7f5317220cf8d7d71ad9cd791dd892",
      "in_reply_to_id": null,
      "user": {
        "login": "purpleKarrot",
        "id": 185240,
        "node_id": "MDQ6VXNlcjE4NTI0MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/185240?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/purpleKarrot",
        "html_url": "https://github.com/purpleKarrot",
        "followers_url": "https://api.github.com/users/purpleKarrot/followers",
        "following_url": "https://api.github.com/users/purpleKarrot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/purpleKarrot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/purpleKarrot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/purpleKarrot/subscriptions",
        "organizations_url": "https://api.github.com/users/purpleKarrot/orgs",
        "repos_url": "https://api.github.com/users/purpleKarrot/repos",
        "events_url": "https://api.github.com/users/purpleKarrot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/purpleKarrot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "This looks suspicious. No custom deleter is passed to the `shared_ptr` constructor, so it defaults to [`default_delete`](https://en.cppreference.com/w/cpp/memory/default_delete) which will `delete ptr;` eventually. Is the argument `CNode& node` guaranteed to be heap allocated? Otherwise:\r\n\r\n```cpp\r\nm_nodes.push_back(std::shared_ptr<CNode>(&node, [](CNode*){}));\r\n```",
      "created_at": "2025-03-10T22:41:30Z",
      "updated_at": "2025-03-10T22:41:30Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32015#discussion_r1988117321",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1988117321"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32015"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 57,
      "original_line": 57,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1988125455",
      "pull_request_review_id": 2672297590,
      "id": 1988125455,
      "node_id": "PRRC_kwDOABII5852gGMP",
      "diff_hunk": "@@ -438,8 +436,7 @@ CNode* CConnman::ConnectNode(CAddress addrConnect, const char *pszDest, bool fCo\n                 // It is possible that we already have a connection to the IP/port pszDest resolved to.\n                 // In that case, drop the connection that was just created.\n                 LOCK(m_nodes_mutex);",
      "path": "src/net.cpp",
      "position": null,
      "original_position": 71,
      "commit_id": "75acdcbaa99235c578a65c516dcb1f0baef29d6f",
      "original_commit_id": "af622d00ba7f5317220cf8d7d71ad9cd791dd892",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Since we aren't doing anything with `pnode` anymore, we should be able to remove this `LOCK()` too, avoiding re-entrant locking inside `FindNode()`.",
      "created_at": "2025-03-10T22:52:54Z",
      "updated_at": "2025-03-10T22:58:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32015#discussion_r1988125455",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1988125455"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32015"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 438,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1988127685",
      "pull_request_review_id": 2672297590,
      "id": 1988127685,
      "node_id": "PRRC_kwDOABII5852gGvF",
      "diff_hunk": "@@ -332,32 +332,32 @@ bool IsLocal(const CService& addr)\n     return mapLocalHost.count(addr) > 0;\n }\n \n-CNode* CConnman::FindNode(const CNetAddr& ip)",
      "path": "src/net.cpp",
      "position": 4,
      "original_position": 4,
      "commit_id": "75acdcbaa99235c578a65c516dcb1f0baef29d6f",
      "original_commit_id": "af622d00ba7f5317220cf8d7d71ad9cd791dd892",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "It is notable how unsafe the design was for the `FindNode()`-methods before switching to `shared_ptr`. Returning a raw pointer as we let go of the mutex protecting it.",
      "created_at": "2025-03-10T22:55:39Z",
      "updated_at": "2025-03-10T22:58:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32015#discussion_r1988127685",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1988127685"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32015"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 335,
      "original_line": 335,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1988141217",
      "pull_request_review_id": 2672382867,
      "id": 1988141217,
      "node_id": "PRRC_kwDOABII5852gKCh",
      "diff_hunk": "@@ -332,32 +332,32 @@ bool IsLocal(const CService& addr)\n     return mapLocalHost.count(addr) > 0;\n }\n \n-CNode* CConnman::FindNode(const CNetAddr& ip)",
      "path": "src/net.cpp",
      "position": 4,
      "original_position": 4,
      "commit_id": "75acdcbaa99235c578a65c516dcb1f0baef29d6f",
      "original_commit_id": "af622d00ba7f5317220cf8d7d71ad9cd791dd892",
      "in_reply_to_id": 1988127685,
      "user": {
        "login": "purpleKarrot",
        "id": 185240,
        "node_id": "MDQ6VXNlcjE4NTI0MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/185240?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/purpleKarrot",
        "html_url": "https://github.com/purpleKarrot",
        "followers_url": "https://api.github.com/users/purpleKarrot/followers",
        "following_url": "https://api.github.com/users/purpleKarrot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/purpleKarrot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/purpleKarrot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/purpleKarrot/subscriptions",
        "organizations_url": "https://api.github.com/users/purpleKarrot/orgs",
        "repos_url": "https://api.github.com/users/purpleKarrot/repos",
        "events_url": "https://api.github.com/users/purpleKarrot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/purpleKarrot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "This is not a raw pointer, but an observer (\"Raw pointer\" is coined by Sean Parent as \"anything that implies ownership\", which explicitly includes `shared_ptr`. Stricly speaking, changing `CNode*` to `std::shared_ptr<CNode>` turns an observer **into** a raw pointer).\r\n\r\nI actually think that returning an observer is fine here, even after the change.",
      "created_at": "2025-03-10T23:15:10Z",
      "updated_at": "2025-03-10T23:15:11Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32015#discussion_r1988141217",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1988141217"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32015"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 335,
      "original_line": 335,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1988630364",
      "pull_request_review_id": 2673269135,
      "id": 1988630364,
      "node_id": "PRRC_kwDOABII5852iBdc",
      "diff_hunk": "@@ -332,32 +332,32 @@ bool IsLocal(const CService& addr)\n     return mapLocalHost.count(addr) > 0;\n }\n \n-CNode* CConnman::FindNode(const CNetAddr& ip)",
      "path": "src/net.cpp",
      "position": 4,
      "original_position": 4,
      "commit_id": "75acdcbaa99235c578a65c516dcb1f0baef29d6f",
      "original_commit_id": "af622d00ba7f5317220cf8d7d71ad9cd791dd892",
      "in_reply_to_id": 1988127685,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "If that is the case I think Parent goes one step too far in redefining terms.\r\n\r\nReturning an raw C pointer is not an okay design, as another thread could potentially come along and delete whatever the returned pointer is referencing, resulting in use-after-free. This is mitigated by `FindNode` being private and node deletion being done in a controlled fashion on master. But it's a loaded foot-gun IMO.\r\n\r\nAdding `EXCLUSIVE_LOCKS_REQUIRED()` would have been a different fix, forcing the caller to protect the returned value with the mutex.\r\n```C++\r\nCNode* FindNode(...) EXCLUSIVE_LOCKS_REQUIRED(m_nodes_mutex)\r\n```\r\n\r\nIntroducing `shared_ptr` solves the use-after-free design issue. (Although I agree it would be great to get rid of `shared_ptr`).",
      "created_at": "2025-03-11T08:02:08Z",
      "updated_at": "2025-03-11T08:02:08Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32015#discussion_r1988630364",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1988630364"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32015"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 335,
      "original_line": 335,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1988726994",
      "pull_request_review_id": 2673460137,
      "id": 1988726994,
      "node_id": "PRRC_kwDOABII5852iZDS",
      "diff_hunk": "@@ -1921,51 +1927,40 @@ void CConnman::DisconnectNodes()\n         }\n \n         // Disconnect unused nodes\n-        std::vector<CNode*> nodes_copy = m_nodes;\n-        for (CNode* pnode : nodes_copy)\n-        {\n-            if (pnode->fDisconnect)\n-            {\n-                // remove from m_nodes\n-                m_nodes.erase(remove(m_nodes.begin(), m_nodes.end(), pnode), m_nodes.end());\n+        for (auto it = m_nodes.begin(); it != m_nodes.end();) {\n+            auto node = *it;\n+            if (node->fDisconnect) {\n+                it = m_nodes.erase(it);\n+\n+                // Keep a reference to this CNode object to delay its destruction until\n+                // after m_nodes_mutex has been released. Destructing a node involves\n+                // calling m_msgproc->FinalizeNode() which acquires cs_main. Lock order\n+                // should be cs_main, m_nodes_mutex.\n+                disconnected_nodes.push_back(node);",
      "path": "src/net.cpp",
      "position": 236,
      "original_position": 207,
      "commit_id": "75acdcbaa99235c578a65c516dcb1f0baef29d6f",
      "original_commit_id": "2747f135be3a2ccf3ce89bea3ee6037266611a16",
      "in_reply_to_id": 1984875189,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I do not think that is necessary. I mean - if we would assume that the code is going to be modified in a careless way to break the logic, in other words to destroy `CNode` objects while holding `m_nodes_mutex`, then we might as well assume that the code could be modified in a way that breaks the manual reference counting. IMO the manual reference counting is more fragile and error prone.\r\n\r\nFurther, if the code is changed to destroy `CNode` objects while holding `m_nodes_mutex`, then 83 functional tests fail. I think it is safe to assume that such a thing will not go unnoticed.",
      "created_at": "2025-03-11T08:55:46Z",
      "updated_at": "2025-03-11T08:55:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32015#discussion_r1988726994",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1988726994"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32015"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1938,
      "original_line": 1938,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1988909339",
      "pull_request_review_id": 2673807235,
      "id": 1988909339,
      "node_id": "PRRC_kwDOABII5852jFkb",
      "diff_hunk": "@@ -54,20 +54,19 @@ struct ConnmanTestMsg : public CConnman {\n     void AddTestNode(CNode& node)\n     {\n         LOCK(m_nodes_mutex);\n-        m_nodes.push_back(&node);\n+        m_nodes.push_back(std::shared_ptr<CNode>(&node));",
      "path": "src/test/util/net.h",
      "position": 14,
      "original_position": 14,
      "commit_id": "75acdcbaa99235c578a65c516dcb1f0baef29d6f",
      "original_commit_id": "af622d00ba7f5317220cf8d7d71ad9cd791dd892",
      "in_reply_to_id": 1988117321,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Yes, the argument `CNode& node` is always heap allocated. Not sure about \"guaranteed\". If not heap allocated, then this will be a gross error, resulting in an immediate crash or an error report by Valgrind or a memory sanitizer.\r\n\r\nNote that the semantic of this piece of code is not changed by this PR. It was the same before as well - it would eventually `delete` the object.",
      "created_at": "2025-03-11T10:25:38Z",
      "updated_at": "2025-03-11T10:25:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32015#discussion_r1988909339",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1988909339"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32015"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 57,
      "original_line": 57,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1989085326",
      "pull_request_review_id": 2674151425,
      "id": 1989085326,
      "node_id": "PRRC_kwDOABII5852jwiO",
      "diff_hunk": "@@ -1716,7 +1714,7 @@ bool CConnman::AttemptToEvictConnection()\n         return false;\n     }\n     LOCK(m_nodes_mutex);\n-    for (CNode* pnode : m_nodes) {\n+    for (const auto& pnode : m_nodes) {",
      "path": "src/net.cpp",
      "position": null,
      "original_position": 132,
      "commit_id": "75acdcbaa99235c578a65c516dcb1f0baef29d6f",
      "original_commit_id": "af622d00ba7f5317220cf8d7d71ad9cd791dd892",
      "in_reply_to_id": 1988085255,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Removed the `const`.",
      "created_at": "2025-03-11T11:55:50Z",
      "updated_at": "2025-03-11T11:55:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32015#discussion_r1989085326",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1989085326"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32015"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1717,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1989097485",
      "pull_request_review_id": 2674178728,
      "id": 1989097485,
      "node_id": "PRRC_kwDOABII5852jzgN",
      "diff_hunk": "@@ -438,8 +436,7 @@ CNode* CConnman::ConnectNode(CAddress addrConnect, const char *pszDest, bool fCo\n                 // It is possible that we already have a connection to the IP/port pszDest resolved to.\n                 // In that case, drop the connection that was just created.\n                 LOCK(m_nodes_mutex);",
      "path": "src/net.cpp",
      "position": null,
      "original_position": 71,
      "commit_id": "75acdcbaa99235c578a65c516dcb1f0baef29d6f",
      "original_commit_id": "af622d00ba7f5317220cf8d7d71ad9cd791dd892",
      "in_reply_to_id": 1988125455,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Right! Removed.",
      "created_at": "2025-03-11T12:00:50Z",
      "updated_at": "2025-03-11T12:00:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32015#discussion_r1989097485",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1989097485"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32015"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 438,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1989115901",
      "pull_request_review_id": 2674218491,
      "id": 1989115901,
      "node_id": "PRRC_kwDOABII5852j3_9",
      "diff_hunk": "@@ -332,32 +332,32 @@ bool IsLocal(const CService& addr)\n     return mapLocalHost.count(addr) > 0;\n }\n \n-CNode* CConnman::FindNode(const CNetAddr& ip)",
      "path": "src/net.cpp",
      "position": 4,
      "original_position": 4,
      "commit_id": "75acdcbaa99235c578a65c516dcb1f0baef29d6f",
      "original_commit_id": "af622d00ba7f5317220cf8d7d71ad9cd791dd892",
      "in_reply_to_id": 1988127685,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I agree with @hodlinator that this has lifetime issue in `master` and in this PR it does not. That issue was also discussed in another PR. Good to resolve it.",
      "created_at": "2025-03-11T12:10:28Z",
      "updated_at": "2025-03-11T12:10:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32015#discussion_r1989115901",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1989115901"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32015"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 335,
      "original_line": 335,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1989217778",
      "pull_request_review_id": 2674417539,
      "id": 1989217778,
      "node_id": "PRRC_kwDOABII5852kQ3y",
      "diff_hunk": "@@ -1363,7 +1355,7 @@ class CConnman\n     bool AlreadyConnectedToAddress(const CAddress& addr);\n \n     bool AttemptToEvictConnection();\n-    CNode* ConnectNode(CAddress addrConnect, const char *pszDest, bool fCountFailure, ConnectionType conn_type, bool use_v2transport) EXCLUSIVE_LOCKS_REQUIRED(!m_unused_i2p_sessions_mutex);\n+    std::shared_ptr<CNode> ConnectNode(CAddress addrConnect, const char *pszDest, bool fCountFailure, ConnectionType conn_type, bool use_v2transport) EXCLUSIVE_LOCKS_REQUIRED(!m_unused_i2p_sessions_mutex);\n     void AddWhitelistPermissionFlags(NetPermissionFlags& flags, const CNetAddr &addr, const std::vector<NetWhitelistPermissions>& ranges) const;\n \n     void DeleteNode(CNode* pnode);",
      "path": "src/net.h",
      "position": null,
      "original_position": 128,
      "commit_id": "75acdcbaa99235c578a65c516dcb1f0baef29d6f",
      "original_commit_id": "4492abbf0a8f34e07ac92bf5786f9564c00c8e45",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Function body was removed.",
      "created_at": "2025-03-11T13:01:17Z",
      "updated_at": "2025-03-11T20:19:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32015#discussion_r1989217778",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1989217778"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32015"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1361,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1989248213",
      "pull_request_review_id": 2674417539,
      "id": 1989248213,
      "node_id": "PRRC_kwDOABII5852kYTV",
      "diff_hunk": "@@ -3470,30 +3458,19 @@ void CConnman::StopNodes()\n     }\n \n     // Delete peer connections.\n-    std::vector<CNode*> nodes;\n+    std::vector<std::shared_ptr<CNode>> nodes;\n     WITH_LOCK(m_nodes_mutex, nodes.swap(m_nodes));\n-    for (CNode* pnode : nodes) {\n+    for (auto& pnode : nodes) {\n         LogDebug(BCLog::NET, \"Stopping node, %s\", pnode->DisconnectMsg(fLogIPs));\n         pnode->CloseSocketDisconnect();\n-        DeleteNode(pnode);",
      "path": "src/net.cpp",
      "position": 499,
      "original_position": 490,
      "commit_id": "75acdcbaa99235c578a65c516dcb1f0baef29d6f",
      "original_commit_id": "4492abbf0a8f34e07ac92bf5786f9564c00c8e45",
      "in_reply_to_id": null,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Seems brittle on master that we just `delete` the node here without checking the refcount. From what I see we only call `StopNodes()` from tests and `CConnman::Stop()`, and we only create `NodesSnapshot`s inside threads we've already stopped earlier in `Stop()`.",
      "created_at": "2025-03-11T13:14:39Z",
      "updated_at": "2025-03-11T20:19:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32015#discussion_r1989248213",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1989248213"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32015"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 3481,
      "original_line": 3481,
      "side": "LEFT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1990071370",
      "pull_request_review_id": 2674417539,
      "id": 1990071370,
      "node_id": "PRRC_kwDOABII5852nhRK",
      "diff_hunk": "@@ -1921,51 +1927,40 @@ void CConnman::DisconnectNodes()\n         }\n \n         // Disconnect unused nodes\n-        std::vector<CNode*> nodes_copy = m_nodes;\n-        for (CNode* pnode : nodes_copy)\n-        {\n-            if (pnode->fDisconnect)\n-            {\n-                // remove from m_nodes\n-                m_nodes.erase(remove(m_nodes.begin(), m_nodes.end(), pnode), m_nodes.end());\n+        for (auto it = m_nodes.begin(); it != m_nodes.end();) {\n+            auto node = *it;\n+            if (node->fDisconnect) {\n+                it = m_nodes.erase(it);\n+\n+                // Keep a reference to this CNode object to delay its destruction until\n+                // after m_nodes_mutex has been released. Destructing a node involves\n+                // calling m_msgproc->FinalizeNode() which acquires cs_main. Lock order\n+                // should be cs_main, m_nodes_mutex.\n+                disconnected_nodes.push_back(node);",
      "path": "src/net.cpp",
      "position": 236,
      "original_position": 207,
      "commit_id": "75acdcbaa99235c578a65c516dcb1f0baef29d6f",
      "original_commit_id": "2747f135be3a2ccf3ce89bea3ee6037266611a16",
      "in_reply_to_id": 1984875189,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "In thread https://github.com/bitcoin/bitcoin/pull/32015#discussion_r1984875189:\r\n\r\nStarted proving out my suggestion and landed on something closer to master.\r\n- Resurrect `m_nodes_disconnected` (now holding `shared_ptr`) along with clearly defined lifetimes.\r\n- Resurrect `DeleteNode()`, but make it take an r-value `shared_ptr` and assert that `use_count() == 1`.\r\n- Avoid adding `~CNode()` and `CNode::m_destruct_cb` along with sending it in everywhere in the constructor. This means we don't need to touch 5 of the test files.\r\n\r\nhttps://github.com/bitcoin/bitcoin/compare/master...hodlinator:bitcoin:pr/32015_suggestion\r\n\r\nPasses unit tests and functional tests.",
      "created_at": "2025-03-11T20:18:38Z",
      "updated_at": "2025-03-11T20:19:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32015#discussion_r1990071370",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1990071370"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32015"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1938,
      "original_line": 1938,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1990577831",
      "pull_request_review_id": 2676928054,
      "id": 1990577831,
      "node_id": "PRRC_kwDOABII5852pc6n",
      "diff_hunk": "@@ -1363,7 +1355,7 @@ class CConnman\n     bool AlreadyConnectedToAddress(const CAddress& addr);\n \n     bool AttemptToEvictConnection();\n-    CNode* ConnectNode(CAddress addrConnect, const char *pszDest, bool fCountFailure, ConnectionType conn_type, bool use_v2transport) EXCLUSIVE_LOCKS_REQUIRED(!m_unused_i2p_sessions_mutex);\n+    std::shared_ptr<CNode> ConnectNode(CAddress addrConnect, const char *pszDest, bool fCountFailure, ConnectionType conn_type, bool use_v2transport) EXCLUSIVE_LOCKS_REQUIRED(!m_unused_i2p_sessions_mutex);\n     void AddWhitelistPermissionFlags(NetPermissionFlags& flags, const CNetAddr &addr, const std::vector<NetWhitelistPermissions>& ranges) const;\n \n     void DeleteNode(CNode* pnode);",
      "path": "src/net.h",
      "position": null,
      "original_position": 128,
      "commit_id": "75acdcbaa99235c578a65c516dcb1f0baef29d6f",
      "original_commit_id": "4492abbf0a8f34e07ac92bf5786f9564c00c8e45",
      "in_reply_to_id": 1989217778,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Removed the declaration as well, thanks!",
      "created_at": "2025-03-12T05:07:27Z",
      "updated_at": "2025-03-12T05:07:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32015#discussion_r1990577831",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1990577831"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32015"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1361,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2048782819",
      "pull_request_review_id": 2775466634,
      "id": 2048782819,
      "node_id": "PRRC_kwDOABII5856HfHj",
      "diff_hunk": "@@ -1442,8 +1432,7 @@ class CConnman\n     std::vector<AddedNodeParams> m_added_node_params GUARDED_BY(m_added_nodes_mutex);\n \n     mutable Mutex m_added_nodes_mutex;\n-    std::vector<CNode*> m_nodes GUARDED_BY(m_nodes_mutex);\n-    std::list<CNode*> m_nodes_disconnected;\n+    std::vector<std::shared_ptr<CNode>> m_nodes GUARDED_BY(m_nodes_mutex);",
      "path": "src/net.h",
      "position": 148,
      "original_position": 148,
      "commit_id": "75acdcbaa99235c578a65c516dcb1f0baef29d6f",
      "original_commit_id": "75acdcbaa99235c578a65c516dcb1f0baef29d6f",
      "in_reply_to_id": null,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "_Bringing the anti-`shared_ptr` discussion to its own dedicated thread here._\r\n\r\n> https://github.com/bitcoin/bitcoin/pull/32015#issuecomment-2711463453\r\n> Instead of passing around shared pointers to mutable data (aka global variables in disguise), would it be possible to increase the level of abstraction and pass around values with regular semantics?\r\n\r\n> https://github.com/bitcoin/bitcoin/pull/32015#issuecomment-2808714778\r\n> I used to appreciate `shared_ptr`-like constructs, but as @purpleKarrot https://github.com/bitcoin/bitcoin/pull/32015#issuecomment-2711463453, they introduce global variables in disguise.\r\n\r\nHow come? The `CNode` objects have a lifetime equal to the lifetime of the connection with the peer, usually much less than the lifetime of a global variable (which is the lifetime of the entire program). Also those `CNode` objects are in a private variable inside `CConnman`. Global variables can be accessed from everywhere. Private class members are the _opposite_.\r\n\r\n> would it be possible to increase the level of abstraction and pass around values with regular semantics?\r\n\r\n* `ProcessMessages()` and `SendMessages()` take `CNode*` and they can / should be changed to take `CNode&`.\r\n* `FindNode()` returns `shared_ptr`, this can be changed to return `bool` and the sole user that makes use of the return value can be changed to use `ForNode()`.\r\n* `ConnectNode()` is the function that creates the objects and it returns `shared_ptr`, not sure if it makes sense to change it?\r\n* `GenerateWaitSockets()` takes a const vector of `shared_ptr`. It needs just a list of nodes, could take a vector of `CNode`, but since we already have a vector of `shared_ptr` we pass that. Same for `SocketHandlerConnected()` and both need to run on the same \"snapshot\" when called one after the other.\r\n\r\nIf there is review interest I would pursue those.",
      "created_at": "2025-04-17T11:49:35Z",
      "updated_at": "2025-04-17T12:17:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32015#discussion_r2048782819",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2048782819"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32015"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1435,
      "original_line": 1435,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2049571166",
      "pull_request_review_id": 2776787810,
      "id": 2049571166,
      "node_id": "PRRC_kwDOABII5856Kfle",
      "diff_hunk": "@@ -1442,8 +1432,7 @@ class CConnman\n     std::vector<AddedNodeParams> m_added_node_params GUARDED_BY(m_added_nodes_mutex);\n \n     mutable Mutex m_added_nodes_mutex;\n-    std::vector<CNode*> m_nodes GUARDED_BY(m_nodes_mutex);\n-    std::list<CNode*> m_nodes_disconnected;\n+    std::vector<std::shared_ptr<CNode>> m_nodes GUARDED_BY(m_nodes_mutex);",
      "path": "src/net.h",
      "position": 148,
      "original_position": 148,
      "commit_id": "75acdcbaa99235c578a65c516dcb1f0baef29d6f",
      "original_commit_id": "75acdcbaa99235c578a65c516dcb1f0baef29d6f",
      "in_reply_to_id": 2048782819,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "1. The intent behind the code on master is to delete the nodes at specific points, otherwise `CNode::Release()` would do `if (--nRefCount == 0) delete this` (and had different logic around `m_nodes_disconnected`). You might be correct in that having been okay, nobody has been able to prove otherwise in this PR so far.\r\n\r\n2. I agree that `shared_ptr`-usage in this PR not being exposed in the public interface of `CConnman` is a mitigating factor.\r\n\r\n3. I bet you've checked all angles I would check when it comes to how the `shared_ptr` would lead to `CNode` destruction in the current PR.\r\n\r\n4. `shared_ptr` still opens up the door towards future changes in the direction of chaos when compared to `unique_ptr`. Nailing down where ownership/lifetime is managed facilitates fresh eyes in following the code, improving maintainability. Using `shared_ptr` can be *perceived* as a cop-out of saying it will be destroyed whenever & wherever the last reference is destroyed. `shared_ptr` in other cases/projects are often an indication of imprecise/prototype-quality code, so as a general rule, it makes sense to avoid if possible.\r\n\r\n5. This is not my first objection to `shared_ptr` in this project, I experimented with removing it from miniscript-code here: https://github.com/bitcoin/bitcoin/pull/30866#pullrequestreview-2434704657, which lead to uncovering an extra issue to fix in that PR. The PR settled on taking that fix and also replacing `shared_ptr` with `unique_ptr` for a less invasive change. I have #31713 which replaces those new `unique_ptr`s with straight up instances, so I'm by no means wedded to `unique_ptr` if there's a better option.\r\n\r\n> * `ProcessMessages()` and `SendMessages()` take `CNode*` and they can / should be changed to take `CNode&`.\r\n> * `FindNode()` returns `shared_ptr`, this can be changed to return `bool` and the sole user that makes use of the return value can be changed to use `ForNode()`.\r\n> * `ConnectNode()` is the function that creates the objects and it returns `shared_ptr`, not sure if it makes sense to change it?\r\n> * `GenerateWaitSockets()` takes a const vector of `shared_ptr`. It needs just a list of nodes, could take a vector of `CNode`, but since we already have a vector of `shared_ptr` we pass that. Same for `SocketHandlerConnected()` and both need to run on the same \"snapshot\" when called one after the other.\r\n> \r\n> If there is review interest I would pursue those.\r\n\r\nIMO if we go with `shared_ptr` we don't need to change those, thanks for investigating though!",
      "created_at": "2025-04-17T20:07:38Z",
      "updated_at": "2025-04-17T20:07:38Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32015#discussion_r2049571166",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2049571166"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32015"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1435,
      "original_line": 1435,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2054291997",
      "pull_request_review_id": 2784405078,
      "id": 2054291997,
      "node_id": "PRRC_kwDOABII5856cgId",
      "diff_hunk": "@@ -1442,8 +1432,7 @@ class CConnman\n     std::vector<AddedNodeParams> m_added_node_params GUARDED_BY(m_added_nodes_mutex);\n \n     mutable Mutex m_added_nodes_mutex;\n-    std::vector<CNode*> m_nodes GUARDED_BY(m_nodes_mutex);\n-    std::list<CNode*> m_nodes_disconnected;\n+    std::vector<std::shared_ptr<CNode>> m_nodes GUARDED_BY(m_nodes_mutex);",
      "path": "src/net.h",
      "position": 148,
      "original_position": 148,
      "commit_id": "75acdcbaa99235c578a65c516dcb1f0baef29d6f",
      "original_commit_id": "75acdcbaa99235c578a65c516dcb1f0baef29d6f",
      "in_reply_to_id": 2048782819,
      "user": {
        "login": "vasild",
        "id": 266751,
        "node_id": "MDQ6VXNlcjI2Njc1MQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/vasild",
        "html_url": "https://github.com/vasild",
        "followers_url": "https://api.github.com/users/vasild/followers",
        "following_url": "https://api.github.com/users/vasild/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/vasild/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/vasild/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
        "organizations_url": "https://api.github.com/users/vasild/orgs",
        "repos_url": "https://api.github.com/users/vasild/repos",
        "events_url": "https://api.github.com/users/vasild/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/vasild/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Thanks for the input, I respect and agree with most of it. The only bit I do not agree with is a general rule to avoid `shared_ptr`. I agree using `unique_ptr` is better than `shared_ptr`, especially if `unique_ptr` is to be used as intented - to manage the lifetime of the owned object. If we start extracting the raw pointers from `unique_ptr` and managing them separately and manually ref-counting then maybe it is better to just use `shared_ptr`.\r\n\r\n> FindNode() returns shared_ptr, this can be changed to return bool and the sole user that makes use of the return value can be changed to use ForNode()\r\n\r\nI think that's worth doing, regardless of this PR. Done in https://github.com/bitcoin/bitcoin/pull/32326",
      "created_at": "2025-04-22T14:50:56Z",
      "updated_at": "2025-04-22T14:50:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32015#discussion_r2054291997",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2054291997"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32015"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1435,
      "original_line": 1435,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2057787797",
      "pull_request_review_id": 2790128441,
      "id": 2057787797,
      "node_id": "PRRC_kwDOABII5856p1mV",
      "diff_hunk": "@@ -1442,8 +1432,7 @@ class CConnman\n     std::vector<AddedNodeParams> m_added_node_params GUARDED_BY(m_added_nodes_mutex);\n \n     mutable Mutex m_added_nodes_mutex;\n-    std::vector<CNode*> m_nodes GUARDED_BY(m_nodes_mutex);\n-    std::list<CNode*> m_nodes_disconnected;\n+    std::vector<std::shared_ptr<CNode>> m_nodes GUARDED_BY(m_nodes_mutex);",
      "path": "src/net.h",
      "position": 148,
      "original_position": 148,
      "commit_id": "75acdcbaa99235c578a65c516dcb1f0baef29d6f",
      "original_commit_id": "75acdcbaa99235c578a65c516dcb1f0baef29d6f",
      "in_reply_to_id": 2048782819,
      "user": {
        "login": "hodlinator",
        "id": 172445034,
        "node_id": "U_kgDOCkdNag",
        "avatar_url": "https://avatars.githubusercontent.com/u/172445034?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hodlinator",
        "html_url": "https://github.com/hodlinator",
        "followers_url": "https://api.github.com/users/hodlinator/followers",
        "following_url": "https://api.github.com/users/hodlinator/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hodlinator/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hodlinator/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hodlinator/subscriptions",
        "organizations_url": "https://api.github.com/users/hodlinator/orgs",
        "repos_url": "https://api.github.com/users/hodlinator/repos",
        "events_url": "https://api.github.com/users/hodlinator/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hodlinator/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> If we start extracting the raw pointers from `unique_ptr` and managing them separately and manually ref-counting then maybe it is better to just use `shared_ptr`.\r\n\r\nI think doing ref-counting for snapshots is fine, but agree raw pointers in this codebase are ambiguous. It would be one thing if we started over with strict policies for `shared_ptr`/`unique_ptr`/raw pointers. Then one could consistently use raw pointer to always mean a non-owning \"view-pointer\" (https://github.com/bitcoin/bitcoin/pull/32015#issuecomment-2712060971).\r\n\r\nMaybe that distinction could still be made through introducing something like:\r\n\r\n```C++\r\ntemplate <typename T>\r\nclass ViewPtr\r\n{\r\n    T* ptr;\r\npublic:\r\n    ...operator->...;\r\n    ...operator*...;\r\n};\r\n```\r\n\\+ `OwnerPtr<T>` in the vane of GSL: https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#SS-views\r\n\r\n> I think that's worth doing, regardless of this PR. Done in #32326\r\n\r\nGood call on peeling off a separate PR as it's nice but not a requirement here.",
      "created_at": "2025-04-24T07:59:32Z",
      "updated_at": "2025-04-24T07:59:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/32015#discussion_r2057787797",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2057787797"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/32015"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1435,
      "original_line": 1435,
      "side": "RIGHT"
    }
  ]
}