{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31444",
    "id": 2222046922,
    "node_id": "PR_kwDOABII586Ecb7K",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/31444",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/31444.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/31444.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31444",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31444/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31444/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31444/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/27a0c93abb7e70b93214eb857e2046f848139e68",
    "number": 31444,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "cluster mempool: add txgraph diagrams/mining/eviction",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false,
      "patch_url": null
    },
    "body": "Part of cluster mempool: #30289. Builds on top of #31363.\r\n\r\nThis adds more functionality to the txgraph module, specifically:\r\n* `TxGraph::GetMainStagingDiagrams()`, a function to obtain feerate diagrams for both the main graph and the staged changes to it, including only the clusters that differ between the two.\r\n* `TxGraph::GetBlockBuilder()`, a function to obtain an object which can efficiently iterate the chunks of the (main) graph from high to low chunk feerate, allowing each to be skipped or included.\r\n* `TxGraph::GetWorstMainChunk()`, a function to obtain the last chunk that would be returned by `GetBlockBuilder()`'s returned object, intended for eviction.\r\n",
    "labels": [
      {
        "id": 164208572,
        "node_id": "MDU6TGFiZWwxNjQyMDg1NzI=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Mempool",
        "name": "Mempool",
        "color": "fef2c0",
        "default": false
      }
    ],
    "created_at": "2024-12-08T14:50:02Z",
    "updated_at": "2025-04-09T04:34:02Z",
    "mergeable": true,
    "mergeable_state": "blocked",
    "merged": false,
    "merge_commit_sha": "b3789aadab1cea783aed8318ce7546eba0d3a8d1",
    "assignees": [],
    "requested_reviewers": [
      {
        "login": "ismaelsadeeq",
        "id": 48946461,
        "node_id": "MDQ6VXNlcjQ4OTQ2NDYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/48946461?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ismaelsadeeq",
        "html_url": "https://github.com/ismaelsadeeq",
        "followers_url": "https://api.github.com/users/ismaelsadeeq/followers",
        "following_url": "https://api.github.com/users/ismaelsadeeq/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ismaelsadeeq/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ismaelsadeeq/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ismaelsadeeq/subscriptions",
        "organizations_url": "https://api.github.com/users/ismaelsadeeq/orgs",
        "repos_url": "https://api.github.com/users/ismaelsadeeq/repos",
        "events_url": "https://api.github.com/users/ismaelsadeeq/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ismaelsadeeq/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    ],
    "requested_teams": [],
    "rebaseable": true,
    "head": {
      "label": "sipa:202412_txgraph_index",
      "ref": "202412_txgraph_index",
      "sha": "27a0c93abb7e70b93214eb857e2046f848139e68",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 1458655,
        "node_id": "MDEwOlJlcG9zaXRvcnkxNDU4NjU1",
        "name": "bitcoin",
        "full_name": "sipa/bitcoin",
        "owner": {
          "login": "sipa",
          "id": 548488,
          "node_id": "MDQ6VXNlcjU0ODQ4OA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/sipa",
          "html_url": "https://github.com/sipa",
          "followers_url": "https://api.github.com/users/sipa/followers",
          "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
          "organizations_url": "https://api.github.com/users/sipa/orgs",
          "repos_url": "https://api.github.com/users/sipa/repos",
          "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/sipa/received_events",
          "type": "User",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/sipa/bitcoin",
        "description": "Bitcoin integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/sipa/bitcoin",
        "archive_url": "https://api.github.com/repos/sipa/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/sipa/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/sipa/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/sipa/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/sipa/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/sipa/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/sipa/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/sipa/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/sipa/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/sipa/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/sipa/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/sipa/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/sipa/bitcoin/events",
        "forks_url": "https://api.github.com/repos/sipa/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/sipa/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/sipa/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/sipa/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/sipa/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/sipa/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/sipa/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/sipa/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/sipa/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/sipa/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/sipa/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/sipa/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/sipa/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/sipa/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/sipa/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/sipa/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:sipa/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/sipa/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/sipa/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/sipa/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/sipa/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/sipa/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/sipa/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/sipa/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/sipa/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/sipa/bitcoin/hooks",
        "svn_url": "https://github.com/sipa/bitcoin",
        "homepage": "http://www.bitcoin.org",
        "language": "TypeScript",
        "forks_count": 20,
        "stargazers_count": 90,
        "watchers_count": 90,
        "size": 258817,
        "default_branch": "lows",
        "open_issues_count": 16,
        "is_template": false,
        "topics": [],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": true,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-04-09T03:26:49Z",
        "created_at": "2011-03-09T10:46:59Z",
        "updated_at": "2025-02-27T11:11:39Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "0dc74c92c0650a171e1c6f5bea1c15e13584e799",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 37017,
        "stargazers_count": 82822,
        "watchers_count": 82822,
        "size": 279446,
        "default_branch": "master",
        "open_issues_count": 695,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-04-08T21:27:02Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2025-04-09T04:33:22Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31444"
      }
    },
    "author_association": "MEMBER",
    "draft": false,
    "additions": 791,
    "deletions": 96,
    "changed_files": 3,
    "commits": 11,
    "review_comments": 111,
    "comments": 17
  },
  "events": [
    {
      "event": "commented",
      "id": 2526130500,
      "node_id": "IC_kwDOABII586WkbFE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2526130500",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-08T14:50:17Z",
      "updated_at": "2025-04-09T04:34:01Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage & Benchmarks\nFor details see: https://corecheck.dev/bitcoin/bitcoin/pulls/31444.\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| ACK | [instagibbs](https://github.com/bitcoin/bitcoin/pull/31444#issuecomment-2784038326) |\n| Approach ACK | [ismaelsadeeq](https://github.com/bitcoin/bitcoin/pull/31444#pullrequestreview-2665561910) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#32191](https://github.com/bitcoin/bitcoin/pull/32191) (Make TxGraph fuzz tests more deterministic by sipa)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31444#issuecomment-2526130500",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31444"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 15573178924,
      "node_id": "HRFPE_lADOABII586icM2GzwAAAAOgO9os",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15573178924",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "a458462b478fa596825b264225ddf64f2b0d70cd",
      "commit_url": "https://api.github.com/repos/sipa/bitcoin/commits/a458462b478fa596825b264225ddf64f2b0d70cd",
      "created_at": "2024-12-08T14:59:34Z"
    },
    {
      "event": "labeled",
      "id": 15573179104,
      "node_id": "LE_lADOABII586icM2GzwAAAAOgO9rg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15573179104",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-08T14:59:41Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2526152182,
      "node_id": "IC_kwDOABII586WkgX2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2526152182",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-08T14:59:42Z",
      "updated_at": "2024-12-08T14:59:42Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n🚧 At least one of the CI tasks failed.\n<sub>Debug: https://github.com/bitcoin/bitcoin/runs/34093447174</sub>\n\n<details><summary>Hints</summary>\n\nTry to run the tests locally, according to the documentation. However, a CI failure may still\nhappen due to a number of reasons, for example:\n\n* Possibly due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\n* A sanitizer issue, which can only be found by compiling with the sanitizer and running the\n  affected test.\n\n* An intermittent issue.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n</details>\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31444#issuecomment-2526152182",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31444"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 15573298379,
      "node_id": "HRFPE_lADOABII586icM2GzwAAAAOgPazL",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15573298379",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "12f681c9a0f1e63f982d15eda57e2d3989b4d73a",
      "commit_url": "https://api.github.com/repos/sipa/bitcoin/commits/12f681c9a0f1e63f982d15eda57e2d3989b4d73a",
      "created_at": "2024-12-08T15:29:30Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 15573449222,
      "node_id": "HRFPE_lADOABII586icM2GzwAAAAOgP_oG",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15573449222",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "b7720d0759584a3c92ef98a93e8c931392a8063c",
      "commit_url": "https://api.github.com/repos/sipa/bitcoin/commits/b7720d0759584a3c92ef98a93e8c931392a8063c",
      "created_at": "2024-12-08T16:01:16Z"
    },
    {
      "event": "unlabeled",
      "id": 15573567875,
      "node_id": "UNLE_lADOABII586icM2GzwAAAAOgQcmD",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15573567875",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-08T16:49:06Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 15689612966,
      "node_id": "LE_lADOABII586icM2GzwAAAAOnLH6m",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15689612966",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-17T16:57:27Z",
      "label": {
        "name": "Mempool",
        "color": "fef2c0"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 15732588107,
      "node_id": "HRFPE_lADOABII586icM2GzwAAAAOpvD5L",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15732588107",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "b68bd663bf335bbb2a8dbe0890c58925d3397f18",
      "commit_url": "https://api.github.com/repos/sipa/bitcoin/commits/b68bd663bf335bbb2a8dbe0890c58925d3397f18",
      "created_at": "2024-12-20T13:16:13Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 15742003799,
      "node_id": "HRFPE_lADOABII586icM2GzwAAAAOqS-pX",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15742003799",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "2dbcf9228756f2e29a80a618b709d0b4e8a09490",
      "commit_url": "https://api.github.com/repos/sipa/bitcoin/commits/2dbcf9228756f2e29a80a618b709d0b4e8a09490",
      "created_at": "2024-12-22T17:19:34Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 15861074030,
      "node_id": "HRFPE_lADOABII586icM2GzwAAAAOxZMhu",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15861074030",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "b27d7571c4194df81f793fe7df2cd5446ca13aba",
      "commit_url": "https://api.github.com/repos/sipa/bitcoin/commits/b27d7571c4194df81f793fe7df2cd5446ca13aba",
      "created_at": "2025-01-08T23:27:16Z"
    },
    {
      "event": "commented",
      "id": 2578874634,
      "node_id": "IC_kwDOABII586ZtoEK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2578874634",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-01-08T23:30:08Z",
      "updated_at": "2025-01-08T23:30:08Z",
      "author_association": "MEMBER",
      "body": "I have simplified the eviction interface. Instead of getting a `TxGraph::Evictor` object through `TxGraph::GetEvictor()`, there is now a simpler `TxGraph::GetWorstMainChunk()` function, which is a pure inspector.",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31444#issuecomment-2578874634",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31444"
    },
    {
      "event": "labeled",
      "id": 15861620956,
      "node_id": "LE_lADOABII586icM2GzwAAAAOxbSDc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15861620956",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-01-09T00:51:39Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2578976528,
      "node_id": "IC_kwDOABII586ZuA8Q",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2578976528",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-01-09T00:51:40Z",
      "updated_at": "2025-01-09T00:51:40Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n🚧 At least one of the CI tasks failed.\n<sub>Debug: https://github.com/bitcoin/bitcoin/runs/35343422864</sub>\n\n<details><summary>Hints</summary>\n\nTry to run the tests locally, according to the documentation. However, a CI failure may still\nhappen due to a number of reasons, for example:\n\n* Possibly due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\n* A sanitizer issue, which can only be found by compiling with the sanitizer and running the\n  affected test.\n\n* An intermittent issue.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n</details>\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31444#issuecomment-2578976528",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31444"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 15861754148,
      "node_id": "HRFPE_lADOABII586icM2GzwAAAAOxbykk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15861754148",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "9a206315947b732ff9fbb34160864189f8f5da44",
      "commit_url": "https://api.github.com/repos/sipa/bitcoin/commits/9a206315947b732ff9fbb34160864189f8f5da44",
      "created_at": "2025-01-09T01:12:18Z"
    },
    {
      "event": "unlabeled",
      "id": 15862041512,
      "node_id": "UNLE_lADOABII586icM2GzwAAAAOxc4uo",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15862041512",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-01-09T02:34:05Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 15873840919,
      "node_id": "HRFPE_lADOABII586icM2GzwAAAAOyJ5cX",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15873840919",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "92396678473009e85167c8f612b82d286c59bbba",
      "commit_url": "https://api.github.com/repos/sipa/bitcoin/commits/92396678473009e85167c8f612b82d286c59bbba",
      "created_at": "2025-01-09T21:34:13Z"
    },
    {
      "event": "commented",
      "id": 2581455543,
      "node_id": "IC_kwDOABII586Z3eK3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2581455543",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-01-09T23:40:32Z",
      "updated_at": "2025-01-09T23:40:32Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n🚧 At least one of the CI tasks failed.\n<sub>Debug: https://github.com/bitcoin/bitcoin/runs/35398305833</sub>\n\n<details><summary>Hints</summary>\n\nTry to run the tests locally, according to the documentation. However, a CI failure may still\nhappen due to a number of reasons, for example:\n\n* Possibly due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\n* A sanitizer issue, which can only be found by compiling with the sanitizer and running the\n  affected test.\n\n* An intermittent issue.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n</details>\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31444#issuecomment-2581455543",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31444"
    },
    {
      "event": "labeled",
      "id": 15874876683,
      "node_id": "LE_lADOABII586icM2GzwAAAAOyN2UL",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15874876683",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-01-09T23:40:32Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 15875389244,
      "node_id": "HRFPE_lADOABII586icM2GzwAAAAOyPzc8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15875389244",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "5c9d05c671efdc52b9542ec0103bc2391505268f",
      "commit_url": "https://api.github.com/repos/sipa/bitcoin/commits/5c9d05c671efdc52b9542ec0103bc2391505268f",
      "created_at": "2025-01-10T01:19:01Z"
    },
    {
      "event": "unlabeled",
      "id": 15875753477,
      "node_id": "UNLE_lADOABII586icM2GzwAAAAOyRMYF",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15875753477",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-01-10T02:17:08Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 15876191914,
      "node_id": "HRFPE_lADOABII586icM2GzwAAAAOyS3aq",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15876191914",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "39040fe39a45e9afcfba28bac622566bb29994ae",
      "commit_url": "https://api.github.com/repos/sipa/bitcoin/commits/39040fe39a45e9afcfba28bac622566bb29994ae",
      "created_at": "2025-01-10T03:33:43Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 15967726797,
      "node_id": "HRFPE_lADOABII586icM2GzwAAAAO3wCzN",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15967726797",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "a17fae3c9d4d3b011498fba9be56a943223dfa08",
      "commit_url": "https://api.github.com/repos/sipa/bitcoin/commits/a17fae3c9d4d3b011498fba9be56a943223dfa08",
      "created_at": "2025-01-16T21:12:18Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 16034232840,
      "node_id": "HRFPE_lADOABII586icM2GzwAAAAO7tvoI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16034232840",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "050a824204bb8c0bb5ffd0b4254629866eea618c",
      "commit_url": "https://api.github.com/repos/sipa/bitcoin/commits/050a824204bb8c0bb5ffd0b4254629866eea618c",
      "created_at": "2025-01-22T20:00:27Z"
    },
    {
      "event": "commented",
      "id": 2608151320,
      "node_id": "IC_kwDOABII586bdTsY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2608151320",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-01-22T20:01:06Z",
      "updated_at": "2025-01-22T20:01:06Z",
      "author_association": "MEMBER",
      "body": "I modified `TxGraph::GetWorstMainChunk()` to return the chunk feerate in addition to the list of transaction Refs.",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31444#issuecomment-2608151320",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31444"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 16064774141,
      "node_id": "HRFPE_lADOABII586icM2GzwAAAAO9iP_9",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16064774141",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "aa0f5fb13690733c83a22ba4ca11bdb5f813efe5",
      "commit_url": "https://api.github.com/repos/sipa/bitcoin/commits/aa0f5fb13690733c83a22ba4ca11bdb5f813efe5",
      "created_at": "2025-01-24T22:11:21Z"
    },
    {
      "event": "commented",
      "id": 2613608256,
      "node_id": "IC_kwDOABII586byH9A",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2613608256",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-01-24T23:48:50Z",
      "updated_at": "2025-01-24T23:48:50Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n🚧 At least one of the CI tasks failed.\n<sub>Debug: https://github.com/bitcoin/bitcoin/runs/36148920396</sub>\n\n<details><summary>Hints</summary>\n\nTry to run the tests locally, according to the documentation. However, a CI failure may still\nhappen due to a number of reasons, for example:\n\n* Possibly due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\n* A sanitizer issue, which can only be found by compiling with the sanitizer and running the\n  affected test.\n\n* An intermittent issue.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n</details>\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31444#issuecomment-2613608256",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31444"
    },
    {
      "event": "labeled",
      "id": 16065522270,
      "node_id": "LE_lADOABII586icM2GzwAAAAO9lGpe",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16065522270",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-01-24T23:48:50Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 16068866293,
      "node_id": "HRFPE_lADOABII586icM2GzwAAAAO9x3D1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16068866293",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "aa589c9fe1902fe33e703e80cbfebd2bc21ce9c8",
      "commit_url": "https://api.github.com/repos/sipa/bitcoin/commits/aa589c9fe1902fe33e703e80cbfebd2bc21ce9c8",
      "created_at": "2025-01-26T04:36:01Z"
    },
    {
      "event": "unlabeled",
      "id": 16070111616,
      "node_id": "UNLE_lADOABII586icM2GzwAAAAO92nGA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16070111616",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-01-26T13:43:01Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 16070940620,
      "node_id": "HRFPE_lADOABII586icM2GzwAAAAO95xfM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16070940620",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "a1cfac415195bc3404a83bc04e359e1797e9c8bb",
      "commit_url": "https://api.github.com/repos/sipa/bitcoin/commits/a1cfac415195bc3404a83bc04e359e1797e9c8bb",
      "created_at": "2025-01-26T19:56:54Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 16131778103,
      "node_id": "HRFPE_lADOABII586icM2GzwAAAAPBh2Y3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16131778103",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "21db9a5e7e3523bb17a9769f8df71090ff2b02e7",
      "commit_url": "https://api.github.com/repos/sipa/bitcoin/commits/21db9a5e7e3523bb17a9769f8df71090ff2b02e7",
      "created_at": "2025-01-30T23:46:08Z"
    },
    {
      "event": "labeled",
      "id": 16132543769,
      "node_id": "LE_lADOABII586icM2GzwAAAAPBkxUZ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16132543769",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-01-31T01:16:26Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2626072812,
      "node_id": "IC_kwDOABII586chrDs",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2626072812",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-01-31T01:16:27Z",
      "updated_at": "2025-01-31T01:16:27Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n🚧 At least one of the CI tasks failed.\n<sub>Debug: https://github.com/bitcoin/bitcoin/runs/36451236768</sub>\n\n<details><summary>Hints</summary>\n\nTry to run the tests locally, according to the documentation. However, a CI failure may still\nhappen due to a number of reasons, for example:\n\n* Possibly due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\n* A sanitizer issue, which can only be found by compiling with the sanitizer and running the\n  affected test.\n\n* An intermittent issue.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n</details>\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31444#issuecomment-2626072812",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31444"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 16134010729,
      "node_id": "HRFPE_lADOABII586icM2GzwAAAAPBqXdp",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16134010729",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "b066e386d134d781070ce11ce1b800e223f9516b",
      "commit_url": "https://api.github.com/repos/sipa/bitcoin/commits/b066e386d134d781070ce11ce1b800e223f9516b",
      "created_at": "2025-01-31T04:59:50Z"
    },
    {
      "event": "unlabeled",
      "id": 16134581117,
      "node_id": "UNLE_lADOABII586icM2GzwAAAAPBsit9",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16134581117",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-01-31T06:23:27Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 16146248002,
      "node_id": "HRFPE_lADOABII586icM2GzwAAAAPCZDFC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16146248002",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "ca5d3be1a2b9087a7a571c3f3203f80072cf632d",
      "commit_url": "https://api.github.com/repos/sipa/bitcoin/commits/ca5d3be1a2b9087a7a571c3f3203f80072cf632d",
      "created_at": "2025-01-31T22:01:42Z"
    },
    {
      "event": "labeled",
      "id": 16146910619,
      "node_id": "LE_lADOABII586icM2GzwAAAAPCbk2b",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16146910619",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-01-31T23:33:14Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2628567313,
      "node_id": "IC_kwDOABII586crMER",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2628567313",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-01-31T23:33:15Z",
      "updated_at": "2025-01-31T23:33:15Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n🚧 At least one of the CI tasks failed.\n<sub>Debug: https://github.com/bitcoin/bitcoin/runs/36505832220</sub>\n\n<details><summary>Hints</summary>\n\nTry to run the tests locally, according to the documentation. However, a CI failure may still\nhappen due to a number of reasons, for example:\n\n* Possibly due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\n* A sanitizer issue, which can only be found by compiling with the sanitizer and running the\n  affected test.\n\n* An intermittent issue.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n</details>\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31444#issuecomment-2628567313",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31444"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 16148264651,
      "node_id": "HRFPE_lADOABII586icM2GzwAAAAPCgvbL",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16148264651",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "0c52bc36a1a3e1903c57aafa454161065e085241",
      "commit_url": "https://api.github.com/repos/sipa/bitcoin/commits/0c52bc36a1a3e1903c57aafa454161065e085241",
      "created_at": "2025-02-01T03:43:50Z"
    },
    {
      "event": "unlabeled",
      "id": 16148867935,
      "node_id": "UNLE_lADOABII586icM2GzwAAAAPCjCtf",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16148867935",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-02-01T05:05:10Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 16181713203,
      "node_id": "HRFPE_lADOABII586icM2GzwAAAAPEgVkz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16181713203",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "4a1a1e5d6d6b51bc2df31b5e3c2f49f0dfe998f7",
      "commit_url": "https://api.github.com/repos/sipa/bitcoin/commits/4a1a1e5d6d6b51bc2df31b5e3c2f49f0dfe998f7",
      "created_at": "2025-02-04T16:18:19Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 16204092078,
      "node_id": "HRFPE_lADOABII586icM2GzwAAAAPF1tKu",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16204092078",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "386c74a03d02b46fa4a626f78fbce9bd0f4244f4",
      "commit_url": "https://api.github.com/repos/sipa/bitcoin/commits/386c74a03d02b46fa4a626f78fbce9bd0f4244f4",
      "created_at": "2025-02-06T04:28:24Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 16271007959,
      "node_id": "HRFPE_lADOABII586icM2GzwAAAAPJ0-DX",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16271007959",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "a9555273e0675ab2316ad0f098d0289fc4f4d665",
      "commit_url": "https://api.github.com/repos/sipa/bitcoin/commits/a9555273e0675ab2316ad0f098d0289fc4f4d665",
      "created_at": "2025-02-11T20:33:23Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 16287909845,
      "node_id": "HRFPE_lADOABII586icM2GzwAAAAPK1cfV",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16287909845",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "df77550e5e54625faa0c8ce33b4f28bb52480ea0",
      "commit_url": "https://api.github.com/repos/sipa/bitcoin/commits/df77550e5e54625faa0c8ce33b4f28bb52480ea0",
      "created_at": "2025-02-12T22:29:40Z"
    },
    {
      "event": "commented",
      "id": 2655103601,
      "node_id": "IC_kwDOABII586eQapx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2655103601",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-02-12T23:49:50Z",
      "updated_at": "2025-02-12T23:49:50Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n🚧 At least one of the CI tasks failed.\n<sub>Debug: https://github.com/bitcoin/bitcoin/runs/37128497464</sub>\n\n<details><summary>Hints</summary>\n\nTry to run the tests locally, according to the documentation. However, a CI failure may still\nhappen due to a number of reasons, for example:\n\n* Possibly due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\n* A sanitizer issue, which can only be found by compiling with the sanitizer and running the\n  affected test.\n\n* An intermittent issue.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n</details>\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31444#issuecomment-2655103601",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31444"
    },
    {
      "event": "labeled",
      "id": 16288509581,
      "node_id": "LE_lADOABII586icM2GzwAAAAPK3u6N",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16288509581",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-02-12T23:49:50Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 16290333913,
      "node_id": "HRFPE_lADOABII586icM2GzwAAAAPK-sTZ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16290333913",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "11300700e3681e93d97b1e808d7fb0246c7bf0e8",
      "commit_url": "https://api.github.com/repos/sipa/bitcoin/commits/11300700e3681e93d97b1e808d7fb0246c7bf0e8",
      "created_at": "2025-02-13T04:34:02Z"
    },
    {
      "event": "unlabeled",
      "id": 16290946615,
      "node_id": "UNLE_lADOABII586icM2GzwAAAAPLBB43",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16290946615",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-02-13T05:54:20Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 16318034143,
      "node_id": "HRFPE_lADOABII586icM2GzwAAAAPMoXDf",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16318034143",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "9f5ce1590ee7da379b0591e778216f57c7453150",
      "commit_url": "https://api.github.com/repos/sipa/bitcoin/commits/9f5ce1590ee7da379b0591e778216f57c7453150",
      "created_at": "2025-02-14T22:27:44Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 16386458199,
      "node_id": "HRFPE_lADOABII586icM2GzwAAAAPQtYJX",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16386458199",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "ecf5440b14ee64b310874380c0a6de5a234e0e39",
      "commit_url": "https://api.github.com/repos/sipa/bitcoin/commits/ecf5440b14ee64b310874380c0a6de5a234e0e39",
      "created_at": "2025-02-20T17:20:33Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 16407982036,
      "node_id": "HRFPE_lADOABII586icM2GzwAAAAPR_e_U",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16407982036",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "efad48b239e01d4abc2eea192eacc3b2a8b6e039",
      "commit_url": "https://api.github.com/repos/sipa/bitcoin/commits/efad48b239e01d4abc2eea192eacc3b2a8b6e039",
      "created_at": "2025-02-21T22:09:43Z"
    },
    {
      "event": "reviewed",
      "id": 2638800436,
      "node_id": "PRR_kwDOABII586dSOY0",
      "url": null,
      "actor": null,
      "commit_id": "efad48b239e01d4abc2eea192eacc3b2a8b6e039",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "yancyribbens",
        "id": 817736,
        "node_id": "MDQ6VXNlcjgxNzczNg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/817736?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/yancyribbens",
        "html_url": "https://github.com/yancyribbens",
        "followers_url": "https://api.github.com/users/yancyribbens/followers",
        "following_url": "https://api.github.com/users/yancyribbens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/yancyribbens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/yancyribbens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/yancyribbens/subscriptions",
        "organizations_url": "https://api.github.com/users/yancyribbens/orgs",
        "repos_url": "https://api.github.com/users/yancyribbens/repos",
        "events_url": "https://api.github.com/users/yancyribbens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/yancyribbens/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31444#pullrequestreview-2638800436",
      "submitted_at": "2025-02-25T00:36:05Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31444"
    },
    {
      "event": "comment_deleted",
      "id": 16461232043,
      "node_id": "CDE_lADOABII586icM2GzwAAAAPVKner",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16461232043",
      "actor": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-02-25T14:58:23Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 16541386789,
      "node_id": "HRFPE_lADOABII586icM2GzwAAAAPZ8Ygl",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16541386789",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "d3816606de5187e027252bad3c81a66bda6546ae",
      "commit_url": "https://api.github.com/repos/sipa/bitcoin/commits/d3816606de5187e027252bad3c81a66bda6546ae",
      "created_at": "2025-03-03T21:51:47Z"
    },
    {
      "event": "reviewed",
      "id": 2665561910,
      "node_id": "PRR_kwDOABII586e4T82",
      "url": null,
      "actor": null,
      "commit_id": "d3816606de5187e027252bad3c81a66bda6546ae",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Approach ACK will review in-depth soon",
      "user": {
        "login": "ismaelsadeeq",
        "id": 48946461,
        "node_id": "MDQ6VXNlcjQ4OTQ2NDYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/48946461?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ismaelsadeeq",
        "html_url": "https://github.com/ismaelsadeeq",
        "followers_url": "https://api.github.com/users/ismaelsadeeq/followers",
        "following_url": "https://api.github.com/users/ismaelsadeeq/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ismaelsadeeq/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ismaelsadeeq/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ismaelsadeeq/subscriptions",
        "organizations_url": "https://api.github.com/users/ismaelsadeeq/orgs",
        "repos_url": "https://api.github.com/users/ismaelsadeeq/repos",
        "events_url": "https://api.github.com/users/ismaelsadeeq/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ismaelsadeeq/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31444#pullrequestreview-2665561910",
      "submitted_at": "2025-03-06T20:31:09Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31444"
    },
    {
      "event": "reviewed",
      "id": 2681814013,
      "node_id": "PRR_kwDOABII586f2Tv9",
      "url": null,
      "actor": null,
      "commit_id": "d3816606de5187e027252bad3c81a66bda6546ae",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "ismaelsadeeq",
        "id": 48946461,
        "node_id": "MDQ6VXNlcjQ4OTQ2NDYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/48946461?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ismaelsadeeq",
        "html_url": "https://github.com/ismaelsadeeq",
        "followers_url": "https://api.github.com/users/ismaelsadeeq/followers",
        "following_url": "https://api.github.com/users/ismaelsadeeq/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ismaelsadeeq/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ismaelsadeeq/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ismaelsadeeq/subscriptions",
        "organizations_url": "https://api.github.com/users/ismaelsadeeq/orgs",
        "repos_url": "https://api.github.com/users/ismaelsadeeq/repos",
        "events_url": "https://api.github.com/users/ismaelsadeeq/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ismaelsadeeq/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31444#pullrequestreview-2681814013",
      "submitted_at": "2025-03-13T13:35:15Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31444"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 16878634550,
      "node_id": "HRFPE_lADOABII586icM2GzwAAAAPuC4Y2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16878634550",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "8adaeb57deadfca61bbe07f51e4505eb540fa48a",
      "commit_url": "https://api.github.com/repos/sipa/bitcoin/commits/8adaeb57deadfca61bbe07f51e4505eb540fa48a",
      "created_at": "2025-03-19T20:29:12Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 16879648197,
      "node_id": "HRFPE_lADOABII586icM2GzwAAAAPuGv3F",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16879648197",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "db3bbb4d5fc55511b588ed93f2d55384920a4b21",
      "commit_url": "https://api.github.com/repos/sipa/bitcoin/commits/db3bbb4d5fc55511b588ed93f2d55384920a4b21",
      "created_at": "2025-03-19T21:06:44Z"
    },
    {
      "event": "labeled",
      "id": 16879648937,
      "node_id": "LE_lADOABII586icM2GzwAAAAPuGwCp",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16879648937",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-19T21:06:48Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2738113983,
      "node_id": "IC_kwDOABII586jNE2_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2738113983",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-19T21:06:49Z",
      "updated_at": "2025-03-19T21:06:49Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n🚧 At least one of the CI tasks failed.\n<sub>Debug: https://github.com/bitcoin/bitcoin/runs/39067512256</sub>\n\n<details><summary>Hints</summary>\n\nTry to run the tests locally, according to the documentation. However, a CI failure may still\nhappen due to a number of reasons, for example:\n\n* Possibly due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\n* A sanitizer issue, which can only be found by compiling with the sanitizer and running the\n  affected test.\n\n* An intermittent issue.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n</details>\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31444#issuecomment-2738113983",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31444"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 16880116875,
      "node_id": "HRFPE_lADOABII586icM2GzwAAAAPuIiSL",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16880116875",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "7aef10d63865728fa21540ed188eb363fc9215e2",
      "commit_url": "https://api.github.com/repos/sipa/bitcoin/commits/7aef10d63865728fa21540ed188eb363fc9215e2",
      "created_at": "2025-03-19T21:23:47Z"
    },
    {
      "event": "unlabeled",
      "id": 16883618411,
      "node_id": "UNLE_lADOABII586icM2GzwAAAAPuV5Jr",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16883618411",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-20T00:13:29Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 16899718497,
      "node_id": "LE_lADOABII586icM2GzwAAAAPvTT1h",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16899718497",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-20T10:14:45Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 16909707200,
      "node_id": "HRFPE_lADOABII586icM2GzwAAAAPv5afA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16909707200",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "5ce4c67d408a92e6aed293543e8114b0d1d01ea3",
      "commit_url": "https://api.github.com/repos/sipa/bitcoin/commits/5ce4c67d408a92e6aed293543e8114b0d1d01ea3",
      "created_at": "2025-03-20T13:38:25Z"
    },
    {
      "event": "labeled",
      "id": 16909769174,
      "node_id": "LE_lADOABII586icM2GzwAAAAPv5pnW",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16909769174",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-20T13:41:48Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2740499761,
      "node_id": "IC_kwDOABII586jWLUx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2740499761",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-20T13:41:49Z",
      "updated_at": "2025-03-20T13:41:49Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n🚧 At least one of the CI tasks failed.\n<sub>Debug: https://github.com/bitcoin/bitcoin/runs/39111487630</sub>\n\n<details><summary>Hints</summary>\n\nTry to run the tests locally, according to the documentation. However, a CI failure may still\nhappen due to a number of reasons, for example:\n\n* Possibly due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\n* A sanitizer issue, which can only be found by compiling with the sanitizer and running the\n  affected test.\n\n* An intermittent issue.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n</details>\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31444#issuecomment-2740499761",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31444"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 16909802811,
      "node_id": "HRFPE_lADOABII586icM2GzwAAAAPv5x07",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16909802811",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "b1b2010eba64aaa848db3ef4f150332ddfff0b94",
      "commit_url": "https://api.github.com/repos/sipa/bitcoin/commits/b1b2010eba64aaa848db3ef4f150332ddfff0b94",
      "created_at": "2025-03-20T13:43:41Z"
    },
    {
      "event": "unlabeled",
      "id": 16912149881,
      "node_id": "UNLE_lADOABII586icM2GzwAAAAPwCu15",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16912149881",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-20T14:36:02Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "unlabeled",
      "id": 16914965805,
      "node_id": "UNLE_lADOABII586icM2GzwAAAAPwNeUt",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16914965805",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-20T17:13:53Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 16937114826,
      "node_id": "HRFPE_lADOABII586icM2GzwAAAAPxh9zK",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16937114826",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "ea9694eb498fb7eecf78040f8854f72423dd00c6",
      "commit_url": "https://api.github.com/repos/sipa/bitcoin/commits/ea9694eb498fb7eecf78040f8854f72423dd00c6",
      "created_at": "2025-03-22T00:06:51Z"
    },
    {
      "event": "commented",
      "id": 2744877002,
      "node_id": "IC_kwDOABII586jm3_K",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2744877002",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-22T01:37:09Z",
      "updated_at": "2025-03-22T01:37:09Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n🚧 At least one of the CI tasks failed.\n<sub>Debug: https://github.com/bitcoin/bitcoin/runs/39212805888</sub>\n\n<details><summary>Hints</summary>\n\nTry to run the tests locally, according to the documentation. However, a CI failure may still\nhappen due to a number of reasons, for example:\n\n* Possibly due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\n* A sanitizer issue, which can only be found by compiling with the sanitizer and running the\n  affected test.\n\n* An intermittent issue.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n</details>\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31444#issuecomment-2744877002",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31444"
    },
    {
      "event": "labeled",
      "id": 16937797868,
      "node_id": "LE_lADOABII586icM2GzwAAAAPxkkjs",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16937797868",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-22T01:37:09Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 16938298106,
      "node_id": "HRFPE_lADOABII586icM2GzwAAAAPxmer6",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16938298106",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "4147fdfe8c2089ce1e0b9b1f913698e885ce09e0",
      "commit_url": "https://api.github.com/repos/sipa/bitcoin/commits/4147fdfe8c2089ce1e0b9b1f913698e885ce09e0",
      "created_at": "2025-03-22T03:36:32Z"
    },
    {
      "event": "unlabeled",
      "id": 16938757020,
      "node_id": "UNLE_lADOABII586icM2GzwAAAAPxoOuc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16938757020",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-22T05:09:20Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 16945222201,
      "node_id": "HRFPE_lADOABII586icM2GzwAAAAPyA5I5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16945222201",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "819cc67ad2922c3f5c87b1d3dcad59f644757f81",
      "commit_url": "https://api.github.com/repos/sipa/bitcoin/commits/819cc67ad2922c3f5c87b1d3dcad59f644757f81",
      "created_at": "2025-03-23T17:53:52Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 16956609475,
      "node_id": "HRFPE_lADOABII586icM2GzwAAAAPysVPD",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16956609475",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "6ffb8b475d01ccf6445d7f50967a5b2e5d03cc35",
      "commit_url": "https://api.github.com/repos/sipa/bitcoin/commits/6ffb8b475d01ccf6445d7f50967a5b2e5d03cc35",
      "created_at": "2025-03-24T14:06:01Z"
    },
    {
      "event": "referenced",
      "id": 17000519287,
      "node_id": "REFE_lADOABII586icM2GzwAAAAP1T1Z3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17000519287",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "f1d129d96340503ec5f6b347c2fdf6a6901b1f7e",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f1d129d96340503ec5f6b347c2fdf6a6901b1f7e",
      "created_at": "2025-03-26T21:43:50Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 17004231618,
      "node_id": "HRFPE_lADOABII586icM2GzwAAAAP1h_vC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17004231618",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "ef68aea6fdb032f82a3291c027ffdae75185c08f",
      "commit_url": "https://api.github.com/repos/sipa/bitcoin/commits/ef68aea6fdb032f82a3291c027ffdae75185c08f",
      "created_at": "2025-03-27T03:46:20Z"
    },
    {
      "event": "commented",
      "id": 2756541543,
      "node_id": "IC_kwDOABII586kTXxn",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2756541543",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-27T03:49:38Z",
      "updated_at": "2025-03-27T03:49:38Z",
      "author_association": "MEMBER",
      "body": "Rebased after merge of #31363, and on top of #32151.",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31444#issuecomment-2756541543",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31444"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 17015939939,
      "node_id": "HRFPE_lADOABII586icM2GzwAAAAP2OqNj",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17015939939",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "554888cbb6ffdd4bb7e97956b01fe1dc70d664a3",
      "commit_url": "https://api.github.com/repos/sipa/bitcoin/commits/554888cbb6ffdd4bb7e97956b01fe1dc70d664a3",
      "created_at": "2025-03-27T15:15:38Z"
    },
    {
      "event": "reviewed",
      "id": 2713729194,
      "node_id": "PRR_kwDOABII586hwDiq",
      "url": null,
      "actor": null,
      "commit_id": "554888cbb6ffdd4bb7e97956b01fe1dc70d664a3",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "just a few comments after first read through",
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31444#pullrequestreview-2713729194",
      "submitted_at": "2025-03-27T16:31:48Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31444"
    },
    {
      "event": "reviewed",
      "id": 2721482897,
      "node_id": "PRR_kwDOABII586iNoiR",
      "url": null,
      "actor": null,
      "commit_id": "554888cbb6ffdd4bb7e97956b01fe1dc70d664a3",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Looks good",
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31444#pullrequestreview-2721482897",
      "submitted_at": "2025-03-27T16:46:53Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31444"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 17021104031,
      "node_id": "HRFPE_lADOABII586icM2GzwAAAAP2iW-f",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17021104031",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "dcaed10bb2b9c8db99f4988d51690a74bba28c28",
      "commit_url": "https://api.github.com/repos/sipa/bitcoin/commits/dcaed10bb2b9c8db99f4988d51690a74bba28c28",
      "created_at": "2025-03-27T19:49:43Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 17025229028,
      "node_id": "HRFPE_lADOABII586icM2GzwAAAAP2yGDk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17025229028",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "5d603144f7cdfe2af35dc9b705c40d75192591ba",
      "commit_url": "https://api.github.com/repos/sipa/bitcoin/commits/5d603144f7cdfe2af35dc9b705c40d75192591ba",
      "created_at": "2025-03-28T03:52:46Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 17033525964,
      "node_id": "HRFPE_lADOABII586icM2GzwAAAAP3RvrM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17033525964",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "0630995fee22990402771547be1480b8706c76ce",
      "commit_url": "https://api.github.com/repos/sipa/bitcoin/commits/0630995fee22990402771547be1480b8706c76ce",
      "created_at": "2025-03-28T14:23:21Z"
    },
    {
      "event": "reviewed",
      "id": 2725731979,
      "node_id": "PRR_kwDOABII586id16L",
      "url": null,
      "actor": null,
      "commit_id": "0630995fee22990402771547be1480b8706c76ce",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Changes:\r\n* `BlockBuilder` interface was changed, it now just has:\r\n  * `std::optional<std::pair<std::vector<Ref*, FeePerWeight>>> GetCurrentChunk()`\r\n  * `void Include()`\r\n  * `void Skip()`\r\n  Which avoids the need for it to store `Ref*` internally.\r\n* Improved `GetMainStagingDiagrams` testing, to verify that unmodified clusters are indeed not included in the diagrams.\r\n* Split off the introduction of the chunk index observers to a separate commit.\r\n* Split off the generalization of `GetClusterRefs` to support subsections of a Cluster to a separate commit.",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31444#pullrequestreview-2725731979",
      "submitted_at": "2025-03-28T14:35:13Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31444"
    },
    {
      "event": "reviewed",
      "id": 2725655591,
      "node_id": "PRR_kwDOABII586idjQn",
      "url": null,
      "actor": null,
      "commit_id": "0630995fee22990402771547be1480b8706c76ce",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Looking good 0630995fee22990402771547be1480b8706c76ce\r\n\r\nNo real show-stoppers except for the diagram check fuzz test conceptual issue I'm still having.",
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31444#pullrequestreview-2725655591",
      "submitted_at": "2025-03-28T18:31:51Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31444"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 17038793312,
      "node_id": "HRFPE_lADOABII586icM2GzwAAAAP3l1pg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17038793312",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "d8e4b92fb4aea16e18285d25c4d5bba3b3b51c98",
      "commit_url": "https://api.github.com/repos/sipa/bitcoin/commits/d8e4b92fb4aea16e18285d25c4d5bba3b3b51c98",
      "created_at": "2025-03-28T20:58:40Z"
    },
    {
      "event": "reviewed",
      "id": 2729193453,
      "node_id": "PRR_kwDOABII586irC_t",
      "url": null,
      "actor": null,
      "commit_id": "d8e4b92fb4aea16e18285d25c4d5bba3b3b51c98",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "ACK d8e4b92fb4aea16e18285d25c4d5bba3b3b51c98\r\n\r\nnon-blocking comments\r\n\r\n`git range-diff master 0630995fee22990402771547be1480b8706c76ce d8e4b92fb4aea16e18285d25c4d5bba3b3b51c98`",
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31444#pullrequestreview-2729193453",
      "submitted_at": "2025-03-31T17:24:47Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31444"
    },
    {
      "event": "review_requested",
      "id": 17061121656,
      "node_id": "RRE_lADOABII586icM2GzwAAAAP47A54",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17061121656",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-31T17:24:50Z",
      "requested_reviewer": {
        "login": "ismaelsadeeq",
        "id": 48946461,
        "node_id": "MDQ6VXNlcjQ4OTQ2NDYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/48946461?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ismaelsadeeq",
        "html_url": "https://github.com/ismaelsadeeq",
        "followers_url": "https://api.github.com/users/ismaelsadeeq/followers",
        "following_url": "https://api.github.com/users/ismaelsadeeq/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ismaelsadeeq/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ismaelsadeeq/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ismaelsadeeq/subscriptions",
        "organizations_url": "https://api.github.com/users/ismaelsadeeq/orgs",
        "repos_url": "https://api.github.com/users/ismaelsadeeq/repos",
        "events_url": "https://api.github.com/users/ismaelsadeeq/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ismaelsadeeq/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 17134229777,
      "node_id": "HRFPE_lADOABII586icM2GzwAAAAP9R5kR",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17134229777",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "6389ac15cf427f03bc03202878ced1a002a86aac",
      "commit_url": "https://api.github.com/repos/sipa/bitcoin/commits/6389ac15cf427f03bc03202878ced1a002a86aac",
      "created_at": "2025-04-04T18:16:32Z"
    },
    {
      "event": "reviewed",
      "id": 2743815395,
      "node_id": "PRR_kwDOABII586ji0zj",
      "url": null,
      "actor": null,
      "commit_id": "6389ac15cf427f03bc03202878ced1a002a86aac",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "body": "Rebased on top of #32177 and #32191.",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31444#pullrequestreview-2743815395",
      "submitted_at": "2025-04-04T18:30:40Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31444"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 17135881514,
      "node_id": "HRFPE_lADOABII586icM2GzwAAAAP9YM0q",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17135881514",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "3d40dfa8c6c1b806c013b2623912474c166b0332",
      "commit_url": "https://api.github.com/repos/sipa/bitcoin/commits/3d40dfa8c6c1b806c013b2623912474c166b0332",
      "created_at": "2025-04-04T21:09:32Z"
    },
    {
      "event": "commented",
      "id": 2779737089,
      "node_id": "IC_kwDOABII586lr2wB",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2779737089",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-04T21:10:29Z",
      "updated_at": "2025-04-04T21:10:29Z",
      "author_association": "MEMBER",
      "body": "Rebased on top of #32218 to fix CI issue.",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31444#issuecomment-2779737089",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31444"
    },
    {
      "event": "referenced",
      "id": 17142663095,
      "node_id": "REFE_lADOABII586icM2GzwAAAAP9yEe3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17142663095",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "d42e82d65069a8b5f58de354beab5249c7203542",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d42e82d65069a8b5f58de354beab5249c7203542",
      "created_at": "2025-04-06T09:25:31Z"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDQ4YTYzYzlmMzhiOTg3YjY1YmMwZjljZmNmOWQ0ZDdlNjY5ZGJkZGM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/48a63c9f38b987b65bc0f9cfcf9d4d7e669dbddc",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/48a63c9f38b987b65bc0f9cfcf9d4d7e669dbddc",
      "tree": {
        "sha": "1e6dfe3eb382e01e525b227f43d8d24a960a0435",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1e6dfe3eb382e01e525b227f43d8d24a960a0435"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0dc74c92c0650a171e1c6f5bea1c15e13584e799",
          "sha": "0dc74c92c0650a171e1c6f5bea1c15e13584e799",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/0dc74c92c0650a171e1c6f5bea1c15e13584e799"
        }
      ],
      "message": "txgraph: compare sequence numbers instead of Cluster* (bugfix)\n\nThis makes fuzz testing more deterministic, by avoiding the (arbitrary) pointer\nvalue ordering in comparing transactions.",
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2025-04-07T13:36:56Z"
      },
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2025-04-01T18:05:56Z"
      },
      "sha": "48a63c9f38b987b65bc0f9cfcf9d4d7e669dbddc"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGRmM2IyNmExMWFiOWViYWViMDk5ZjgxMzE4ZjkyYTAyOWMxYjUwNTE",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/df3b26a11ab9ebaeb099f81318f92a029c1b5051",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/df3b26a11ab9ebaeb099f81318f92a029c1b5051",
      "tree": {
        "sha": "a600be186819ee213db73609febfa46bd55212fa",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a600be186819ee213db73609febfa46bd55212fa"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/48a63c9f38b987b65bc0f9cfcf9d4d7e669dbddc",
          "sha": "48a63c9f38b987b65bc0f9cfcf9d4d7e669dbddc",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/48a63c9f38b987b65bc0f9cfcf9d4d7e669dbddc"
        }
      ],
      "message": "txgraph: make GroupClusters use partition numbers directly (optimization)",
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2025-04-07T13:36:56Z"
      },
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2025-04-01T20:33:14Z"
      },
      "sha": "df3b26a11ab9ebaeb099f81318f92a029c1b5051"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDU4ZWMyZTlhMThjOGY3MWJhNGYyNzY3YmVmMjY4MTY0NDY4MzJjZDg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/58ec2e9a18c8f71ba4f2767bef26816446832cd8",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/58ec2e9a18c8f71ba4f2767bef26816446832cd8",
      "tree": {
        "sha": "702b32a54fb8f14b33f27b84e00f7c4672b0c494",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/702b32a54fb8f14b33f27b84e00f7c4672b0c494"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/df3b26a11ab9ebaeb099f81318f92a029c1b5051",
          "sha": "df3b26a11ab9ebaeb099f81318f92a029c1b5051",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/df3b26a11ab9ebaeb099f81318f92a029c1b5051"
        }
      ],
      "message": "txgraph: Add GetMainStagingDiagrams function (feature)\n\nThis allows determining whether the changes in a staging diagram unambiguously improve\nthe graph, through CompareChunks().",
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2025-04-07T13:36:56Z"
      },
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2024-11-28T15:40:42Z"
      },
      "sha": "58ec2e9a18c8f71ba4f2767bef26816446832cd8"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDM0MjllOWQ3OWRmMTMzNmNmMWQwYTYxY2I1ZjliZjAyOGFhODYwYjI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3429e9d79df1336cf1d0a61cb5f9bf028aa860b2",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/3429e9d79df1336cf1d0a61cb5f9bf028aa860b2",
      "tree": {
        "sha": "27d12cf1d5c32052660f8d6c08daa1e04260741f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/27d12cf1d5c32052660f8d6c08daa1e04260741f"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/58ec2e9a18c8f71ba4f2767bef26816446832cd8",
          "sha": "58ec2e9a18c8f71ba4f2767bef26816446832cd8",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/58ec2e9a18c8f71ba4f2767bef26816446832cd8"
        }
      ],
      "message": "txgraph: Maintain chunk index (preparation)\n\nThis is preparation for exposing mining and eviction functionality in\nTxGraph.",
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2025-04-07T13:36:56Z"
      },
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2024-11-14T20:54:03Z"
      },
      "sha": "3429e9d79df1336cf1d0a61cb5f9bf028aa860b2"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDQ2MzkyYjY3MjhjYzJmNTM5NWE2MTYwZjA0NzlhZDlhZjg3NzMyM2U",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/46392b6728cc2f5395a6160f0479ad9af877323e",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/46392b6728cc2f5395a6160f0479ad9af877323e",
      "tree": {
        "sha": "8de6f8f6a8be67eafda185a2520d72e268b97352",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8de6f8f6a8be67eafda185a2520d72e268b97352"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3429e9d79df1336cf1d0a61cb5f9bf028aa860b2",
          "sha": "3429e9d79df1336cf1d0a61cb5f9bf028aa860b2",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/3429e9d79df1336cf1d0a61cb5f9bf028aa860b2"
        }
      ],
      "message": "txgraph: Introduce TxGraphImpl observer tracking (preparation)\n\nThis is preparation for a next commit which will introduce a class whose\nobjects hold references to internals in TxGraphImpl, which disallows\nmodifications to the graph while such objects exist.",
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2025-04-07T13:36:56Z"
      },
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2024-11-25T16:31:02Z"
      },
      "sha": "46392b6728cc2f5395a6160f0479ad9af877323e"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDY1ZWZmMGRhNDdjZjFkMTI5Mzc2Mzk4YzcwOWNkZTkxYTMxNWMzMjI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/65eff0da47cf1d129376398c709cde91a315c322",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/65eff0da47cf1d129376398c709cde91a315c322",
      "tree": {
        "sha": "8e63187c845054df8f00f2c99f67163fe55f0363",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8e63187c845054df8f00f2c99f67163fe55f0363"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/46392b6728cc2f5395a6160f0479ad9af877323e",
          "sha": "46392b6728cc2f5395a6160f0479ad9af877323e",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/46392b6728cc2f5395a6160f0479ad9af877323e"
        }
      ],
      "message": "txgraph: Generalize GetClusterRefs to support subsections (preparation)\n\nThis is preparation for a next commit which will need a way to extract Refs\nfor just individual chunks from a cluster.",
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2025-04-07T13:36:56Z"
      },
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2025-03-28T14:04:28Z"
      },
      "sha": "65eff0da47cf1d129376398c709cde91a315c322"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 17154025873,
      "node_id": "HRFPE_lADOABII586icM2GzwAAAAP-damR",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17154025873",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "06cc381936bda2ef1bf4b6a6aa5059440117a99a",
      "commit_url": "https://api.github.com/repos/sipa/bitcoin/commits/06cc381936bda2ef1bf4b6a6aa5059440117a99a",
      "created_at": "2025-04-07T13:39:43Z"
    },
    {
      "event": "commented",
      "id": 2783387132,
      "node_id": "IC_kwDOABII586l5x38",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2783387132",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-07T13:41:19Z",
      "updated_at": "2025-04-07T13:41:19Z",
      "author_association": "MEMBER",
      "body": "Rebased after merge of #32218. Still includes #32191.",
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31444#issuecomment-2783387132",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31444"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDBmMWNjZDQ3NGM4NTgwNmE3NmVmZWY4OTVlMWQxZmY4MmNmNjU0M2M",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0f1ccd474c85806a76efef895e1d1ff82cf6543c",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/0f1ccd474c85806a76efef895e1d1ff82cf6543c",
      "tree": {
        "sha": "3b0d74ad0dcbbedd7b1472a05795805bdd202a37",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3b0d74ad0dcbbedd7b1472a05795805bdd202a37"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/65eff0da47cf1d129376398c709cde91a315c322",
          "sha": "65eff0da47cf1d129376398c709cde91a315c322",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/65eff0da47cf1d129376398c709cde91a315c322"
        }
      ],
      "message": "txgraph: Introduce BlockBuilder interface (feature)\n\nThis interface lets one iterate efficiently over the chunks of the main\ngraph in a TxGraph, in the same order as CompareMainOrder. Each chunk\ncan be marked as \"included\" or \"skipped\" (and in the latter case,\ndependent chunks will be skipped).",
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2025-04-07T16:49:45Z"
      },
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2025-03-28T13:58:09Z"
      },
      "sha": "0f1ccd474c85806a76efef895e1d1ff82cf6543c"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGIzNjNmMjYxYjA5OWQ0NGIxZTE5ZDczZDk4M2Y0Zjg0ZTFlM2Q1Zjg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b363f261b099d44b1e19d73d983f4f84e1e3d5f8",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/b363f261b099d44b1e19d73d983f4f84e1e3d5f8",
      "tree": {
        "sha": "5526ad5335a2ff55804df3129805400da947042f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5526ad5335a2ff55804df3129805400da947042f"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0f1ccd474c85806a76efef895e1d1ff82cf6543c",
          "sha": "0f1ccd474c85806a76efef895e1d1ff82cf6543c",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/0f1ccd474c85806a76efef895e1d1ff82cf6543c"
        }
      ],
      "message": "txgraph: Introduce TxGraph::GetWorstMainChunk (feature)\n\nIt returns the last chunk that would be suggested for mining by BlockBuilder\nobjects. This is intended for eviction.",
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2025-04-07T16:49:49Z"
      },
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2025-01-08T22:18:12Z"
      },
      "sha": "b363f261b099d44b1e19d73d983f4f84e1e3d5f8"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDliNTNjNjdkZWVkMDBkYmQyZmU0MzFmZDc2YTkyZGQzZDhkZTFlZDc",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9b53c67deed00dbd2fe431fd76a92dd3d8de1ed7",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/9b53c67deed00dbd2fe431fd76a92dd3d8de1ed7",
      "tree": {
        "sha": "97d2a8b6834c770e4a527633e0c6e509930fc338",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/97d2a8b6834c770e4a527633e0c6e509930fc338"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b363f261b099d44b1e19d73d983f4f84e1e3d5f8",
          "sha": "b363f261b099d44b1e19d73d983f4f84e1e3d5f8",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/b363f261b099d44b1e19d73d983f4f84e1e3d5f8"
        }
      ],
      "message": "txgraph: Reuse discarded chunkindex entries (optimization)",
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2025-04-07T16:49:49Z"
      },
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2024-12-02T18:33:41Z"
      },
      "sha": "9b53c67deed00dbd2fe431fd76a92dd3d8de1ed7"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDI5OTQwYWRiMjhmMjg3ODI4M2JkOTA4NjBkYTgzODg4MGVhNWUxOWU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/29940adb28f2878283bd90860da838880ea5e19e",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/29940adb28f2878283bd90860da838880ea5e19e",
      "tree": {
        "sha": "2bfac5c5cccfa01ef44286945cc8461072f8b3ab",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2bfac5c5cccfa01ef44286945cc8461072f8b3ab"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9b53c67deed00dbd2fe431fd76a92dd3d8de1ed7",
          "sha": "9b53c67deed00dbd2fe431fd76a92dd3d8de1ed7",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/9b53c67deed00dbd2fe431fd76a92dd3d8de1ed7"
        }
      ],
      "message": "txgraph: Skipping end of cluster has no impact (optimization)",
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2025-04-07T16:49:49Z"
      },
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2024-11-27T21:12:10Z"
      },
      "sha": "29940adb28f2878283bd90860da838880ea5e19e"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDI3YTBjOTNhYmI3ZTcwYjkzMjE0ZWI4NTdlMjA0NmY4NDgxMzllNjg",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/27a0c93abb7e70b93214eb857e2046f848139e68",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/27a0c93abb7e70b93214eb857e2046f848139e68",
      "tree": {
        "sha": "170c960b58ba23bcbc0f46d6590b27c204953bb6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/170c960b58ba23bcbc0f46d6590b27c204953bb6"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/29940adb28f2878283bd90860da838880ea5e19e",
          "sha": "29940adb28f2878283bd90860da838880ea5e19e",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/29940adb28f2878283bd90860da838880ea5e19e"
        }
      ],
      "message": "txgraph: Special-case singletons in chunk index (optimization)",
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2025-04-07T16:49:49Z"
      },
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter@wuille.net",
        "date": "2024-11-27T20:29:40Z"
      },
      "sha": "27a0c93abb7e70b93214eb857e2046f848139e68"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 17157252745,
      "node_id": "HRFPE_lADOABII586icM2GzwAAAAP-puaJ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17157252745",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "27a0c93abb7e70b93214eb857e2046f848139e68",
      "commit_url": "https://api.github.com/repos/sipa/bitcoin/commits/27a0c93abb7e70b93214eb857e2046f848139e68",
      "created_at": "2025-04-07T16:50:26Z"
    },
    {
      "event": "commented",
      "id": 2784038326,
      "node_id": "IC_kwDOABII586l8Q22",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2784038326",
      "actor": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-07T17:10:59Z",
      "updated_at": "2025-04-07T17:10:59Z",
      "author_association": "MEMBER",
      "body": "reACK 27a0c93abb7e70b93214eb857e2046f848139e68\r\n\r\naddressed comments and put the choice to just get next chunk again under fuzzer input directly.",
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31444#issuecomment-2784038326",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31444"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1968625130",
      "pull_request_review_id": 2638800436,
      "id": 1968625130,
      "node_id": "PRRC_kwDOABII5851VtXq",
      "diff_hunk": "@@ -1336,6 +1347,38 @@ std::vector<ClusterIndex> MergeLinearizations(const DepGraph<SetType>& depgraph,\n     return ret;\n }\n \n+/** Make linearization topological, retaining its ordering where possible. */\n+template<typename SetType>\n+void FixLinearization(const DepGraph<SetType>& depgraph, Span<DepGraphIndex> linearization) noexcept\n+{\n+    // This algorithm can be summarized as moving every element in the linearization backwards\n+    // until it is placed after all its ancestors.\n+    SetType done;\n+    const auto len = linearization.size();\n+    // Iterate over the elements of linearization from back to front (i is distance from back).\n+    for (DepGraphIndex i = 0; i < len; ++i) {\n+        /** The element at that position. */\n+        DepGraphIndex elem = linearization[len - 1 - i];\n+        /** j represents how far from the back of the linearization elem should be placed. */\n+        DepGraphIndex j = i;\n+        // Figure out which elements need to be moved before elem.\n+        SetType place_before = done & depgraph.Ancestors(elem);\n+        // Find which position to place elem in (updating j), continuously moving the elements\n+        // in between forward.\n+        while (place_before.Any()) {\n+            // j cannot be 0 here; if it was, then there was necessarily nothing earlier which",
      "path": "src/cluster_linearize.h",
      "position": null,
      "original_position": 469,
      "commit_id": "27a0c93abb7e70b93214eb857e2046f848139e68",
      "original_commit_id": "efad48b239e01d4abc2eea192eacc3b2a8b6e039",
      "in_reply_to_id": null,
      "user": {
        "login": "yancyribbens",
        "id": 817736,
        "node_id": "MDQ6VXNlcjgxNzczNg==",
        "avatar_url": "https://avatars.githubusercontent.com/u/817736?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/yancyribbens",
        "html_url": "https://github.com/yancyribbens",
        "followers_url": "https://api.github.com/users/yancyribbens/followers",
        "following_url": "https://api.github.com/users/yancyribbens/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/yancyribbens/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/yancyribbens/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/yancyribbens/subscriptions",
        "organizations_url": "https://api.github.com/users/yancyribbens/orgs",
        "repos_url": "https://api.github.com/users/yancyribbens/repos",
        "events_url": "https://api.github.com/users/yancyribbens/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/yancyribbens/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "```suggestion\r\n            // j cannot be 0 or less; if it was, then there was necessarily nothing earlier which\r\n```",
      "created_at": "2025-02-25T00:36:04Z",
      "updated_at": "2025-02-25T00:36:05Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31444#discussion_r1968625130",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1968625130"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31444"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1381,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1993472154",
      "pull_request_review_id": 2681814013,
      "id": 1993472154,
      "node_id": "PRRC_kwDOABII58520fia",
      "diff_hunk": "@@ -644,6 +647,14 @@ void Cluster::LevelDown(TxGraphImpl& graph) noexcept\n     Updated(graph);\n }\n \n+void Cluster::AppendChunkFeerates(std::vector<FeeFrac>& ret) const noexcept\n+{\n+    auto chunk_feerates = ChunkLinearization(m_depgraph, m_linearization);\n+    for (const auto& feerate : chunk_feerates) {\n+        ret.push_back(feerate);\n+    }\n+}",
      "path": "src/txgraph.cpp",
      "position": null,
      "original_position": 27,
      "commit_id": "27a0c93abb7e70b93214eb857e2046f848139e68",
      "original_commit_id": "22821d0bd5acb523b83ff4b961838d4ded840e6a",
      "in_reply_to_id": null,
      "user": {
        "login": "ismaelsadeeq",
        "id": 48946461,
        "node_id": "MDQ6VXNlcjQ4OTQ2NDYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/48946461?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ismaelsadeeq",
        "html_url": "https://github.com/ismaelsadeeq",
        "followers_url": "https://api.github.com/users/ismaelsadeeq/followers",
        "following_url": "https://api.github.com/users/ismaelsadeeq/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ismaelsadeeq/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ismaelsadeeq/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ismaelsadeeq/subscriptions",
        "organizations_url": "https://api.github.com/users/ismaelsadeeq/orgs",
        "repos_url": "https://api.github.com/users/ismaelsadeeq/repos",
        "events_url": "https://api.github.com/users/ismaelsadeeq/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ismaelsadeeq/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "```suggestion\r\nvoid Cluster::AppendChunkFeerates(std::vector<FeeFrac>& ret) const noexcept\r\n{\r\n    auto chunk_feerates = ChunkLinearization(m_depgraph, m_linearization);\r\n    ret.reserve(ret.size() + chunk_feerates.size());\r\n    ret.insert(ret.end(), chunk_feerates.begin(), chunk_feerates.end());\r\n}\r\n```",
      "created_at": "2025-03-13T13:00:25Z",
      "updated_at": "2025-03-13T13:35:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31444#discussion_r1993472154",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1993472154"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31444"
        }
      },
      "start_line": null,
      "original_start_line": 650,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 843,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1993479930",
      "pull_request_review_id": 2681814013,
      "id": 1993479930,
      "node_id": "PRRC_kwDOABII58520hb6",
      "diff_hunk": "@@ -1854,6 +1865,33 @@ TxGraph::GraphIndex TxGraphImpl::CountDistinctClusters(std::span<const Ref* cons\n     return ret;\n }\n \n+std::pair<std::vector<FeeFrac>, std::vector<FeeFrac>> TxGraphImpl::GetMainStagingDiagrams() noexcept\n+{\n+    Assume(m_clustersets.size() >= 2);",
      "path": "src/txgraph.cpp",
      "position": null,
      "original_position": 38,
      "commit_id": "27a0c93abb7e70b93214eb857e2046f848139e68",
      "original_commit_id": "22821d0bd5acb523b83ff4b961838d4ded840e6a",
      "in_reply_to_id": null,
      "user": {
        "login": "ismaelsadeeq",
        "id": 48946461,
        "node_id": "MDQ6VXNlcjQ4OTQ2NDYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/48946461?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ismaelsadeeq",
        "html_url": "https://github.com/ismaelsadeeq",
        "followers_url": "https://api.github.com/users/ismaelsadeeq/followers",
        "following_url": "https://api.github.com/users/ismaelsadeeq/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ismaelsadeeq/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ismaelsadeeq/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ismaelsadeeq/subscriptions",
        "organizations_url": "https://api.github.com/users/ismaelsadeeq/orgs",
        "repos_url": "https://api.github.com/users/ismaelsadeeq/repos",
        "events_url": "https://api.github.com/users/ismaelsadeeq/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ismaelsadeeq/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Shouldn't this be <= instead.\r\n```suggestion\r\n    Assume(m_clustersets.size() <= 2);\r\n\r\n```",
      "created_at": "2025-03-13T13:04:51Z",
      "updated_at": "2025-03-13T13:35:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31444#discussion_r1993479930",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1993479930"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31444"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1870,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1993495206",
      "pull_request_review_id": 2681814013,
      "id": 1993495206,
      "node_id": "PRRC_kwDOABII58520lKm",
      "diff_hunk": "@@ -1854,6 +1865,33 @@ TxGraph::GraphIndex TxGraphImpl::CountDistinctClusters(std::span<const Ref* cons\n     return ret;\n }\n \n+std::pair<std::vector<FeeFrac>, std::vector<FeeFrac>> TxGraphImpl::GetMainStagingDiagrams() noexcept\n+{\n+    Assume(m_clustersets.size() >= 2);\n+    MakeAllAcceptable(m_clustersets.size() - 2);\n+    Assume(m_clustersets[m_clustersets.size() - 2].m_deps_to_add.empty());\n+    MakeAllAcceptable(m_clustersets.size() - 1);\n+    Assume(m_clustersets[m_clustersets.size() - 1].m_deps_to_add.empty());\n+    // For all Clusters in main which conflict with Clusters in staging (i.e., all that are removed\n+    // by, or replaced in, staging), gather their chunk feerates.\n+    auto main_clusters = GetConflicts();\n+    std::vector<FeeFrac> main_feerates, staging_feerates;\n+    for (Cluster* cluster : main_clusters) {\n+        cluster->AppendChunkFeerates(main_feerates);\n+    }\n+    // Do the same for the Clusters in staging themselves.\n+    const auto& staging = m_clustersets.back();\n+    for (int quality = 0; quality < int(QualityLevel::NONE); ++quality) {",
      "path": "src/txgraph.cpp",
      "position": 735,
      "original_position": 52,
      "commit_id": "27a0c93abb7e70b93214eb857e2046f848139e68",
      "original_commit_id": "22821d0bd5acb523b83ff4b961838d4ded840e6a",
      "in_reply_to_id": null,
      "user": {
        "login": "ismaelsadeeq",
        "id": 48946461,
        "node_id": "MDQ6VXNlcjQ4OTQ2NDYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/48946461?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ismaelsadeeq",
        "html_url": "https://github.com/ismaelsadeeq",
        "followers_url": "https://api.github.com/users/ismaelsadeeq/followers",
        "following_url": "https://api.github.com/users/ismaelsadeeq/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ismaelsadeeq/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ismaelsadeeq/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ismaelsadeeq/subscriptions",
        "organizations_url": "https://api.github.com/users/ismaelsadeeq/orgs",
        "repos_url": "https://api.github.com/users/ismaelsadeeq/repos",
        "events_url": "https://api.github.com/users/ismaelsadeeq/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ismaelsadeeq/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "why are we iterating the clusters for all quality levels for staging?",
      "created_at": "2025-03-13T13:13:22Z",
      "updated_at": "2025-03-13T13:35:15Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31444#discussion_r1993495206",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1993495206"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31444"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2103,
      "original_line": 2103,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2012087403",
      "pull_request_review_id": 2713729194,
      "id": 2012087403,
      "node_id": "PRRC_kwDOABII58537gRr",
      "diff_hunk": "@@ -1897,6 +1907,32 @@ TxGraph::GraphIndex TxGraphImpl::CountDistinctClusters(std::span<const Ref* cons\n     return ret;\n }\n \n+std::pair<std::vector<FeeFrac>, std::vector<FeeFrac>> TxGraphImpl::GetMainStagingDiagrams() noexcept\n+{\n+    Assume(m_staging_clusterset.has_value());\n+    MakeAllAcceptable(0);",
      "path": "src/txgraph.cpp",
      "position": 723,
      "original_position": 38,
      "commit_id": "27a0c93abb7e70b93214eb857e2046f848139e68",
      "original_commit_id": "7248d26bd09a156b9b3d6cda20949e88b9354e6e",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "`Assume` neither cluster set is oversized?",
      "created_at": "2025-03-25T13:21:35Z",
      "updated_at": "2025-03-27T16:31:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31444#discussion_r2012087403",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2012087403"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31444"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2091,
      "original_line": 2091,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2012192461",
      "pull_request_review_id": 2713729194,
      "id": 2012192461,
      "node_id": "PRRC_kwDOABII5853757N",
      "diff_hunk": "@@ -1897,6 +1907,32 @@ TxGraph::GraphIndex TxGraphImpl::CountDistinctClusters(std::span<const Ref* cons\n     return ret;\n }\n \n+std::pair<std::vector<FeeFrac>, std::vector<FeeFrac>> TxGraphImpl::GetMainStagingDiagrams() noexcept\n+{\n+    Assume(m_staging_clusterset.has_value());\n+    MakeAllAcceptable(0);\n+    Assume(m_main_clusterset.m_deps_to_add.empty());\n+    MakeAllAcceptable(1);\n+    Assume(m_staging_clusterset->m_deps_to_add.empty());\n+    // For all Clusters in main which conflict with Clusters in staging (i.e., all that are removed\n+    // by, or replaced in, staging), gather their chunk feerates.\n+    auto main_clusters = GetConflicts();\n+    std::vector<FeeFrac> main_feerates, staging_feerates;\n+    for (Cluster* cluster : main_clusters) {\n+        cluster->AppendChunkFeerates(main_feerates);\n+    }\n+    // Do the same for the Clusters in staging themselves.\n+    for (int quality = 0; quality < int(QualityLevel::NONE); ++quality) {\n+        for (const auto& cluster : m_staging_clusterset->m_clusters[quality]) {\n+            cluster->AppendChunkFeerates(staging_feerates);\n+        }\n+    }\n+    // Sort both by decreasing feerate to obtain diagrams, and return them.\n+    std::sort(main_feerates.begin(), main_feerates.end(), [](auto& a, auto& b) { return a >> b; });",
      "path": "src/txgraph.cpp",
      "position": null,
      "original_position": 56,
      "commit_id": "27a0c93abb7e70b93214eb857e2046f848139e68",
      "original_commit_id": "7248d26bd09a156b9b3d6cda20949e88b9354e6e",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "why not sort with size tiebreaks here? It isn't clear based on context.",
      "created_at": "2025-03-25T14:07:32Z",
      "updated_at": "2025-03-27T16:31:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31444#discussion_r2012192461",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2012192461"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31444"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2089,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2012199860",
      "pull_request_review_id": 2713729194,
      "id": 2012199860,
      "node_id": "PRRC_kwDOABII585377u0",
      "diff_hunk": "@@ -649,6 +714,50 @@ FUZZ_TARGET(txgraph)\n                 assert(FeeRateCompare(after_feerate, pos_feerate) <= 0);\n             }\n         }\n+\n+        // Check that the implied ordering gives rise to a combined diagram that matches the\n+        // diagram constructed from the individual cluster linearization chunkings.\n+        auto main_diagram = get_diagram_fn(true);\n+        auto expected_main_diagram = ChunkLinearization(sims[0].graph, vec1);\n+        assert(CompareChunks(main_diagram, expected_main_diagram) == 0);\n+\n+        if (sims.size() >= 2 && !sims[1].IsOversized()) {\n+            // When the staging graph is not oversized as well, call GetMainStagingDiagrams, and\n+            // fully verify the result.\n+            auto [main_cmp_diagram, stage_cmp_diagram] = real->GetMainStagingDiagrams();\n+            // Check that the feerates in each diagram are monotonically decreasing.\n+            for (size_t i = 1; i < main_cmp_diagram.size(); ++i) {\n+                assert(FeeRateCompare(main_cmp_diagram[i], main_cmp_diagram[i - 1]) <= 0);\n+            }\n+            for (size_t i = 1; i < stage_cmp_diagram.size(); ++i) {\n+                assert(FeeRateCompare(stage_cmp_diagram[i], stage_cmp_diagram[i - 1]) <= 0);\n+            }\n+            // Apply total ordering on the feerate diagrams to make them comparable (the exact",
      "path": "src/test/fuzz/txgraph.cpp",
      "position": null,
      "original_position": 122,
      "commit_id": "27a0c93abb7e70b93214eb857e2046f848139e68",
      "original_commit_id": "7248d26bd09a156b9b3d6cda20949e88b9354e6e",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "\"comparable\" through me off here since I was thinking about comparable diagrams. \r\n\r\nCan't immediately think of better wording.",
      "created_at": "2025-03-25T14:11:21Z",
      "updated_at": "2025-03-27T16:31:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31444#discussion_r2012199860",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2012199860"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31444"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 841,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2012233270",
      "pull_request_review_id": 2713729194,
      "id": 2012233270,
      "node_id": "PRRC_kwDOABII58538D42",
      "diff_hunk": "@@ -649,6 +714,50 @@ FUZZ_TARGET(txgraph)\n                 assert(FeeRateCompare(after_feerate, pos_feerate) <= 0);\n             }\n         }\n+\n+        // Check that the implied ordering gives rise to a combined diagram that matches the\n+        // diagram constructed from the individual cluster linearization chunkings.\n+        auto main_diagram = get_diagram_fn(true);\n+        auto expected_main_diagram = ChunkLinearization(sims[0].graph, vec1);\n+        assert(CompareChunks(main_diagram, expected_main_diagram) == 0);\n+\n+        if (sims.size() >= 2 && !sims[1].IsOversized()) {\n+            // When the staging graph is not oversized as well, call GetMainStagingDiagrams, and\n+            // fully verify the result.\n+            auto [main_cmp_diagram, stage_cmp_diagram] = real->GetMainStagingDiagrams();\n+            // Check that the feerates in each diagram are monotonically decreasing.\n+            for (size_t i = 1; i < main_cmp_diagram.size(); ++i) {\n+                assert(FeeRateCompare(main_cmp_diagram[i], main_cmp_diagram[i - 1]) <= 0);\n+            }\n+            for (size_t i = 1; i < stage_cmp_diagram.size(); ++i) {\n+                assert(FeeRateCompare(stage_cmp_diagram[i], stage_cmp_diagram[i - 1]) <= 0);\n+            }\n+            // Apply total ordering on the feerate diagrams to make them comparable (the exact\n+            // tie breaker among equal-feerate FeeFracs does not matter, but it has to be\n+            // consistent with the one used in main_diagram and stage_diagram).\n+            std::sort(main_cmp_diagram.begin(), main_cmp_diagram.end(), std::greater{});\n+            std::sort(stage_cmp_diagram.begin(), stage_cmp_diagram.end(), std::greater{});\n+            // Find the chunks that appear in main_diagram but are missing from main_cmp_diagram.\n+            // This is allowed, because GetMainStagingDiagrams omits clusters in main unaffected\n+            // by staging.\n+            std::vector<FeeFrac> missing_main_cmp;\n+            std::set_difference(main_diagram.begin(), main_diagram.end(),\n+                                main_cmp_diagram.begin(), main_cmp_diagram.end(),\n+                                std::inserter(missing_main_cmp, missing_main_cmp.end()),\n+                                std::greater{});\n+            assert(main_cmp_diagram.size() + missing_main_cmp.size() == main_diagram.size());\n+            // Do the same for chunks in stage_diagram missign from stage_cmp_diagram.\n+            auto stage_diagram = get_diagram_fn(false);\n+            std::vector<FeeFrac> missing_stage_cmp;\n+            std::set_difference(stage_diagram.begin(), stage_diagram.end(),\n+                                stage_cmp_diagram.begin(), stage_cmp_diagram.end(),\n+                                std::inserter(missing_stage_cmp, missing_stage_cmp.end()),\n+                                std::greater{});\n+            assert(stage_cmp_diagram.size() + missing_stage_cmp.size() == stage_diagram.size());\n+            // The missing chunks must be equal across main & staging (otherwise they couldn't have\n+            // been omitted).\n+            assert(missing_main_cmp == missing_stage_cmp);",
      "path": "src/test/fuzz/txgraph.cpp",
      "position": 420,
      "original_position": 146,
      "commit_id": "27a0c93abb7e70b93214eb857e2046f848139e68",
      "original_commit_id": "7248d26bd09a156b9b3d6cda20949e88b9354e6e",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I'm wondering what the best way of catching stuff that should be missing on both sides being added to both diagrams erroneously.\r\n\r\nYou could imagine a degenerate case where a bug turns this into a whole mempool check. (and implies we're doing a bunch of work maintaining these clusters for no reason)\r\n\r\nA rough suggestion to think about, perhaps you can tighten the bounds?\r\n\r\n```\r\ndiff --git a/src/test/fuzz/txgraph.cpp b/src/test/fuzz/txgraph.cpp\r\nindex 7249827103..f30b650313 100644\r\n--- a/src/test/fuzz/txgraph.cpp\r\n+++ b/src/test/fuzz/txgraph.cpp\r\n@@ -338,10 +338,17 @@ FUZZ_TARGET(txgraph)\r\n         // just feerates).\r\n         std::sort(ret.begin(), ret.end(), std::greater{});\r\n         return ret;\r\n     };\r\n \r\n+    // When entering staging reset to 0\r\n+    // This is used to upper-bound the possible diagram size in number of entries\r\n+    // to catch any regression where erroneous entries are on both sides of the\r\n+    // computed diagram when they shouldn't have been added at all.\r\n+    uint32_t num_possible_conflicted_entries_main{0};\r\n+    uint32_t num_possible_pulled_in_entries_staged{0};\r\n+\r\n     LIMITED_WHILE(provider.remaining_bytes() > 0, 200) {\r\n         // Read a one-byte command.\r\n         int command = provider.ConsumeIntegral<uint8_t>();\r\n \r\n         /** Use the bottom 2 bits of command to select an entry in the block_builders vector (if\r\n@@ -377,10 +384,11 @@ FUZZ_TARGET(txgraph)\r\n                     // Otherwise, use smaller range which consume fewer fuzz input bytes, as just\r\n                     // these are likely sufficient to trigger all interesting code paths already.\r\n                     fee = provider.ConsumeIntegral<uint8_t>();\r\n                     size = provider.ConsumeIntegral<uint8_t>() + 1;\r\n                 }\r\n+                num_possible_pulled_in_entries_staged++;\r\n                 FeePerWeight feerate{fee, size};\r\n                 // Create a real TxGraph::Ref.\r\n                 auto ref = real->AddTransaction(feerate);\r\n                 // Create a shared_ptr place in the simulation to put the Ref in.\r\n                 auto ref_loc = top_sim.AddTransaction(feerate);\r\n@@ -398,10 +406,22 @@ FUZZ_TARGET(txgraph)\r\n                     // and if so, skip.\r\n                     if (top_sim.graph.Ancestors(pos_par)[pos_chl]) break;\r\n                 }\r\n                 top_sim.AddDependency(par, chl);\r\n                 real->AddDependency(*par, *chl);\r\n+                if (pos_par != SimTxGraph::MISSING && pos_chl != SimTxGraph::MISSING) {\r\n+                    if (!top_sim.IsOversized() && !main_sim.IsOversized()) {\r\n+                        // If both are real, add resulting cluster count to num_possible_pulled_in_entries_*\r\n+                        const auto max_count{std::max(real->GetCluster(*par, false).size(), real->GetCluster(*par, true).size())};\r\n+                        num_possible_conflicted_entries_main += max_count;\r\n+                        num_possible_pulled_in_entries_staged += max_count;\r\n+                    } else {\r\n+                        // If ever oversized, add max count to \"turn it off\"\r\n+                        num_possible_conflicted_entries_main += SimTxGraph::MAX_TRANSACTIONS;\r\n+                        num_possible_pulled_in_entries_staged += SimTxGraph::MAX_TRANSACTIONS;\r\n+                    }\r\n+                }\r\n                 break;\r\n             } else if ((block_builders.empty() || sims.size() > 1)  && top_sim.removed.size() < 100 && command-- == 0) {\r\n                 // RemoveTransaction. Either all its ancestors or all its descendants are also\r\n                 // removed (if any), to make sure TxGraph's reordering of removals and dependencies\r\n                 // has no effect.\r\n@@ -410,10 +430,20 @@ FUZZ_TARGET(txgraph)\r\n                 top_sim.IncludeAncDesc(to_remove, alt);\r\n                 // The order in which these ancestors/descendants are removed should not matter;\r\n                 // randomly shuffle them.\r\n                 std::shuffle(to_remove.begin(), to_remove.end(), rng);\r\n                 for (TxGraph::Ref* ptr : to_remove) {\r\n+                    if (!top_sim.IsOversized() && !main_sim.IsOversized()) {\r\n+                        const auto max_count{std::max(real->GetCluster(*ptr, false).size(), real->GetCluster(*ptr, true).size())};\r\n+                        // Overestimate number of pulled in items\r\n+                        num_possible_conflicted_entries_main += max_count;\r\n+                        num_possible_pulled_in_entries_staged += max_count;\r\n+                    } else {\r\n+                        // If ever oversized, add max count to \"turn it off\"\r\n+                        num_possible_conflicted_entries_main += SimTxGraph::MAX_TRANSACTIONS;\r\n+                        num_possible_pulled_in_entries_staged += SimTxGraph::MAX_TRANSACTIONS;\r\n+                    }\r\n                     real->RemoveTransaction(*ptr);\r\n                     top_sim.RemoveTransaction(ptr);\r\n                 }\r\n                 break;\r\n             } else if (sel_sim.removed.size() > 0 && command-- == 0) {\r\n@@ -446,10 +476,20 @@ FUZZ_TARGET(txgraph)\r\n                 }\r\n                 // The order in which these ancestors/descendants are destroyed should not matter;\r\n                 // randomly shuffle them.\r\n                 std::shuffle(to_destroy.begin(), to_destroy.end(), rng);\r\n                 for (TxGraph::Ref* ptr : to_destroy) {\r\n+                    if (!top_sim.IsOversized() && !main_sim.IsOversized()) {\r\n+                        const auto max_count{std::max(real->GetCluster(*ptr, false).size(), real->GetCluster(*ptr, true).size())};\r\n+                        // Overestimate number of pulled in items\r\n+                        num_possible_conflicted_entries_main += max_count;\r\n+                        num_possible_pulled_in_entries_staged += max_count;\r\n+                    } else {\r\n+                        // If ever oversized, add max count to \"turn it off\"\r\n+                        num_possible_conflicted_entries_main += SimTxGraph::MAX_TRANSACTIONS;\r\n+                        num_possible_pulled_in_entries_staged += SimTxGraph::MAX_TRANSACTIONS;\r\n+                    }\r\n                     for (size_t level = 0; level < sims.size(); ++level) {\r\n                         sims[level].DestroyTransaction(ptr, level == sims.size() - 1);\r\n                     }\r\n                 }\r\n                 break;\r\n@@ -580,10 +620,14 @@ FUZZ_TARGET(txgraph)\r\n                 break;\r\n             } else if (sims.size() < 2 && command-- == 0) {\r\n                 // StartStaging.\r\n                 sims.emplace_back(sims.back());\r\n                 real->StartStaging();\r\n+\r\n+                // Start counting upper-bound on open of staging\r\n+                num_possible_conflicted_entries_main = 0;\r\n+                num_possible_pulled_in_entries_staged = 0;\r\n                 break;\r\n             } else if (block_builders.empty() && sims.size() > 1 && command-- == 0) {\r\n                 // CommitStaging.\r\n                 real->CommitStaging();\r\n                 sims.erase(sims.begin());\r\n@@ -668,10 +712,17 @@ FUZZ_TARGET(txgraph)\r\n                 auto [main_diagram, staged_diagram] = real->GetMainStagingDiagrams();\r\n                 auto sum_main = std::accumulate(main_diagram.begin(), main_diagram.end(), FeeFrac{});\r\n                 auto sum_staged = std::accumulate(staged_diagram.begin(), staged_diagram.end(), FeeFrac{});\r\n                 auto diagram_gain = sum_staged - sum_main;\r\n                 auto real_gain = sims[1].SumAll() - sims[0].SumAll();\r\n+\r\n+                // Sanity check sizes of diagrams\r\n+                assert(main_diagram.size() <= num_possible_conflicted_entries_main);\r\n+                assert(main_diagram.size() <= SimTxGraph::MAX_TRANSACTIONS);\r\n+                assert(staged_diagram.size() <= num_possible_pulled_in_entries_staged);\r\n+                assert(staged_diagram.size() <= SimTxGraph::MAX_TRANSACTIONS);\r\n+\r\n                 // Just check that the total fee gained/lost and size gained/lost according to the\r\n                 // diagram matches the difference in these values in the simulated graph. A more\r\n                 // complete check of the GetMainStagingDiagrams result is performed at the end.\r\n                 assert(diagram_gain == real_gain);\r\n                 // Check that the feerates in each diagram are monotonically decreasing.\r\n```",
      "created_at": "2025-03-25T14:27:21Z",
      "updated_at": "2025-03-27T16:31:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31444#discussion_r2012233270",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2012233270"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31444"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 902,
      "original_line": 902,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2012288718",
      "pull_request_review_id": 2713729194,
      "id": 2012288718,
      "node_id": "PRRC_kwDOABII58538RbO",
      "diff_hunk": "@@ -196,6 +196,10 @@ class TxGraph\n     /** Construct a block builder, drawing chunks in order, from the main graph, which cannot be\n      *  oversized. While the returned object exists, no mutators on the main graph are allowed. */\n     virtual std::unique_ptr<BlockBuilder> GetBlockBuilder() noexcept = 0;\n+    /** Get the last chunk in the main graph, i.e., the last chunk that would be returned by a",
      "path": "src/txgraph.h",
      "position": 45,
      "original_position": 4,
      "commit_id": "27a0c93abb7e70b93214eb857e2046f848139e68",
      "original_commit_id": "e37c5a6afe52fef31551c0ad2e4b6460448c1b63",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "should say that the FeePerWeight is the cfr, and that it cannot be called on an oversized graph",
      "created_at": "2025-03-25T14:52:22Z",
      "updated_at": "2025-03-27T16:31:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31444#discussion_r2012288718",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2012288718"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31444"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 195,
      "original_line": 195,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2012318226",
      "pull_request_review_id": 2713729194,
      "id": 2012318226,
      "node_id": "PRRC_kwDOABII58538YoS",
      "diff_hunk": "@@ -292,6 +293,8 @@ class TxGraphImpl final : public TxGraph\n     ChunkIndex m_chunkindex;\n     /** Number of index-observing objects in existence (BlockBuilderImpl). */\n     size_t m_chunkindex_observers{0};\n+    /** Cache of discarded ChunkIndex node handles. */",
      "path": "src/txgraph.cpp",
      "position": null,
      "original_position": 12,
      "commit_id": "27a0c93abb7e70b93214eb857e2046f848139e68",
      "original_commit_id": "35beed7245b17c21a5ba13f2dd3da0552408c8da",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "```Suggestion\r\n    /** Cache of discarded ChunkIndex node handles to re-use, avoiding additional allocations. */\r\n```",
      "created_at": "2025-03-25T15:04:59Z",
      "updated_at": "2025-03-27T16:31:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31444#discussion_r2012318226",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2012318226"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31444"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 297,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2016595434",
      "pull_request_review_id": 2721482897,
      "id": 2016595434,
      "node_id": "PRRC_kwDOABII5854Ms3q",
      "diff_hunk": "@@ -162,6 +162,10 @@ class TxGraph\n      *  main clusters are counted. Refs that do not exist in the queried graph are ignored. The\n      *  queried graph must not be oversized. */\n     virtual GraphIndex CountDistinctClusters(std::span<const Ref* const>, bool main_only = false) noexcept = 0;\n+    /** Get feerate diagrams for both main and staging (which must both exist and not be\n+     *  oversized), ignoring unmodified components in both. Use FeeFrac rather than FeePerWeight\n+     *  so CompareChunks is usable without type-conversion. */\n+    virtual std::pair<std::vector<FeeFrac>, std::vector<FeeFrac>> GetMainStagingDiagrams() noexcept = 0;",
      "path": "src/txgraph.h",
      "position": 21,
      "original_position": 7,
      "commit_id": "27a0c93abb7e70b93214eb857e2046f848139e68",
      "original_commit_id": "899ce12b59a3f503fa047e3e0125aacfa928a125",
      "in_reply_to_id": null,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Not sure if it's worth it, but I think you could return `vector<FeePerWeight>` if you also had:\r\n\r\n```c++\r\ntemplate <typename T>\r\nrequires std::is_base_of_v<FeeFrac, T> && (sizeof(FeeFrac) == sizeof(T))\r\nstd::partial_ordering CompareChunks(std::span<const T> chunks0, std::span<const T> chunks1)\r\n{\r\n    return CompareChunks(std::span<const FeeFrac>(reinterpret_cast<const FeeFrac*>(chunks0.data()), chunks0.size()), std::span<const FeeFrac>(reinterpret_cast<const FeeFrac*>(chunks1.data()), chunks1.size()));\r\n}\r\n```",
      "created_at": "2025-03-27T13:32:35Z",
      "updated_at": "2025-03-27T16:46:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31444#discussion_r2016595434",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2016595434"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31444"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 171,
      "original_line": 171,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2016650965",
      "pull_request_review_id": 2721482897,
      "id": 2016650965,
      "node_id": "PRRC_kwDOABII5854M6bV",
      "diff_hunk": "@@ -1901,6 +1911,32 @@ TxGraph::GraphIndex TxGraphImpl::CountDistinctClusters(std::span<const Ref* cons\n     return ret;\n }\n \n+std::pair<std::vector<FeeFrac>, std::vector<FeeFrac>> TxGraphImpl::GetMainStagingDiagrams() noexcept\n+{\n+    Assume(m_staging_clusterset.has_value());\n+    MakeAllAcceptable(MAIN_LEVEL);\n+    Assume(m_main_clusterset.m_deps_to_add.empty());\n+    MakeAllAcceptable(STAGING_LEVEL);\n+    Assume(m_staging_clusterset->m_deps_to_add.empty());\n+    // For all Clusters in main which conflict with Clusters in staging (i.e., all that are removed\n+    // by, or replaced in, staging), gather their chunk feerates.\n+    auto main_clusters = GetConflicts();\n+    std::vector<FeeFrac> main_feerates, staging_feerates;\n+    for (Cluster* cluster : main_clusters) {\n+        cluster->AppendChunkFeerates(main_feerates);\n+    }\n+    // Do the same for the Clusters in staging themselves.\n+    for (int quality = 0; quality < int(QualityLevel::NONE); ++quality) {\n+        for (const auto& cluster : m_staging_clusterset->m_clusters[quality]) {\n+            cluster->AppendChunkFeerates(staging_feerates);\n+        }\n+    }\n+    // Sort both by decreasing feerate to obtain diagrams, and return them.\n+    std::sort(main_feerates.begin(), main_feerates.end(), [](auto& a, auto& b) { return a >> b; });\n+    std::sort(staging_feerates.begin(), staging_feerates.end(), [](auto& a, auto& b) { return a >> b; });",
      "path": "src/txgraph.cpp",
      "position": null,
      "original_position": 57,
      "commit_id": "27a0c93abb7e70b93214eb857e2046f848139e68",
      "original_commit_id": "899ce12b59a3f503fa047e3e0125aacfa928a125",
      "in_reply_to_id": null,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I wonder if getting chunks in feerate order across multiple clusters might be something common/important enough to be worth doing more directly, rather than just getting them all then sorting them after the fact? I suppose I'd just be suggesting using a heap of affected clusters, which isn't that different to just sorting by chunk, so I guess it's fine.",
      "created_at": "2025-03-27T13:41:22Z",
      "updated_at": "2025-03-27T16:46:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31444#discussion_r2016650965",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2016650965"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31444"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2090,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2016663864",
      "pull_request_review_id": 2713729194,
      "id": 2016663864,
      "node_id": "PRRC_kwDOABII5854M9k4",
      "diff_hunk": "@@ -649,6 +801,82 @@ FUZZ_TARGET(txgraph)\n                 assert(FeeRateCompare(after_feerate, pos_feerate) <= 0);\n             }\n         }\n+\n+        // The same order should be obtained through a BlockBuilder, if nothing is skipped.\n+        auto builder = real->GetBlockBuilder();\n+        std::vector<SimTxGraph::Pos> vec_builder;\n+        std::vector<TxGraph::Ref*> chunk;\n+        FeePerWeight chunk_feerate;\n+        while (*builder) {\n+            FeePerWeight sum;\n+            auto chunk_span = builder->GetCurrentChunk();\n+            chunk.assign(chunk_span.begin(), chunk_span.end());\n+            for (TxGraph::Ref* ref : chunk_span) {\n+                // The reported chunk feerate must match the chunk feerate obtained by asking\n+                // it for each of the chunk's transactions individually.\n+                assert(real->GetMainChunkFeerate(*ref) == builder->GetCurrentChunkFeerate());\n+                // Verify the chunk feerate matches the sum of the reported individual feerates.\n+                sum += real->GetIndividualFeerate(*ref);\n+                // Chunks must contain transactions that exist in the graph.\n+                auto simpos = sims[0].Find(ref);\n+                assert(simpos != SimTxGraph::MISSING);\n+                vec_builder.push_back(simpos);\n+            }\n+            chunk_feerate = builder->GetCurrentChunkFeerate();\n+            assert(sum == chunk_feerate);\n+            builder->Include();\n+        }\n+        assert(vec_builder == vec1);\n+\n+        // The last chunk returned by the BlockBuilder must match GetWorstMainChunk, in reverse.\n+        std::reverse(chunk.begin(), chunk.end());\n+        auto [worst_chunk, worst_chunk_feerate] = real->GetWorstMainChunk();\n+        assert(chunk == worst_chunk);\n+        assert(chunk_feerate == worst_chunk_feerate);\n+\n+        // Check that the implied ordering gives rise to a combined diagram that matches the",
      "path": "src/test/fuzz/txgraph.cpp",
      "position": 378,
      "original_position": 288,
      "commit_id": "27a0c93abb7e70b93214eb857e2046f848139e68",
      "original_commit_id": "ef68aea6fdb032f82a3291c027ffdae75185c08f",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Took me a second to understand how get_diagram_fn related to the real world, is this correct? The ordering isn't implied, exactly.\r\n```suggestion\r\n        // Check that the real ordering gives rise to a combined diagram that matches the\r\n```",
      "created_at": "2025-03-27T13:43:25Z",
      "updated_at": "2025-03-27T16:31:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31444#discussion_r2016663864",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2016663864"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31444"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 860,
      "original_line": 860,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2016674189",
      "pull_request_review_id": 2713729194,
      "id": 2016674189,
      "node_id": "PRRC_kwDOABII5854NAGN",
      "diff_hunk": "@@ -649,6 +801,82 @@ FUZZ_TARGET(txgraph)\n                 assert(FeeRateCompare(after_feerate, pos_feerate) <= 0);\n             }\n         }\n+\n+        // The same order should be obtained through a BlockBuilder, if nothing is skipped.\n+        auto builder = real->GetBlockBuilder();\n+        std::vector<SimTxGraph::Pos> vec_builder;\n+        std::vector<TxGraph::Ref*> chunk;\n+        FeePerWeight chunk_feerate;\n+        while (*builder) {\n+            FeePerWeight sum;\n+            auto chunk_span = builder->GetCurrentChunk();\n+            chunk.assign(chunk_span.begin(), chunk_span.end());\n+            for (TxGraph::Ref* ref : chunk_span) {\n+                // The reported chunk feerate must match the chunk feerate obtained by asking\n+                // it for each of the chunk's transactions individually.\n+                assert(real->GetMainChunkFeerate(*ref) == builder->GetCurrentChunkFeerate());\n+                // Verify the chunk feerate matches the sum of the reported individual feerates.\n+                sum += real->GetIndividualFeerate(*ref);\n+                // Chunks must contain transactions that exist in the graph.\n+                auto simpos = sims[0].Find(ref);\n+                assert(simpos != SimTxGraph::MISSING);\n+                vec_builder.push_back(simpos);\n+            }\n+            chunk_feerate = builder->GetCurrentChunkFeerate();\n+            assert(sum == chunk_feerate);\n+            builder->Include();\n+        }\n+        assert(vec_builder == vec1);\n+\n+        // The last chunk returned by the BlockBuilder must match GetWorstMainChunk, in reverse.\n+        std::reverse(chunk.begin(), chunk.end());\n+        auto [worst_chunk, worst_chunk_feerate] = real->GetWorstMainChunk();\n+        assert(chunk == worst_chunk);\n+        assert(chunk_feerate == worst_chunk_feerate);\n+\n+        // Check that the implied ordering gives rise to a combined diagram that matches the\n+        // diagram constructed from the individual cluster linearization chunkings.\n+        auto main_diagram = get_diagram_fn(true);",
      "path": "src/test/fuzz/txgraph.cpp",
      "position": null,
      "original_position": 290,
      "commit_id": "27a0c93abb7e70b93214eb857e2046f848139e68",
      "original_commit_id": "ef68aea6fdb032f82a3291c027ffdae75185c08f",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "```suggestion\r\n        auto main_full_diagram = get_diagram_fn(/*main_only=*/true);\r\n```",
      "created_at": "2025-03-27T13:45:12Z",
      "updated_at": "2025-03-27T16:31:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31444#discussion_r2016674189",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2016674189"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31444"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 826,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2016679161",
      "pull_request_review_id": 2713729194,
      "id": 2016679161,
      "node_id": "PRRC_kwDOABII5854NBT5",
      "diff_hunk": "@@ -649,6 +801,82 @@ FUZZ_TARGET(txgraph)\n                 assert(FeeRateCompare(after_feerate, pos_feerate) <= 0);\n             }\n         }\n+\n+        // The same order should be obtained through a BlockBuilder, if nothing is skipped.\n+        auto builder = real->GetBlockBuilder();\n+        std::vector<SimTxGraph::Pos> vec_builder;\n+        std::vector<TxGraph::Ref*> chunk;\n+        FeePerWeight chunk_feerate;\n+        while (*builder) {\n+            FeePerWeight sum;\n+            auto chunk_span = builder->GetCurrentChunk();\n+            chunk.assign(chunk_span.begin(), chunk_span.end());\n+            for (TxGraph::Ref* ref : chunk_span) {\n+                // The reported chunk feerate must match the chunk feerate obtained by asking\n+                // it for each of the chunk's transactions individually.\n+                assert(real->GetMainChunkFeerate(*ref) == builder->GetCurrentChunkFeerate());\n+                // Verify the chunk feerate matches the sum of the reported individual feerates.\n+                sum += real->GetIndividualFeerate(*ref);\n+                // Chunks must contain transactions that exist in the graph.\n+                auto simpos = sims[0].Find(ref);\n+                assert(simpos != SimTxGraph::MISSING);\n+                vec_builder.push_back(simpos);\n+            }\n+            chunk_feerate = builder->GetCurrentChunkFeerate();\n+            assert(sum == chunk_feerate);\n+            builder->Include();\n+        }\n+        assert(vec_builder == vec1);\n+\n+        // The last chunk returned by the BlockBuilder must match GetWorstMainChunk, in reverse.\n+        std::reverse(chunk.begin(), chunk.end());\n+        auto [worst_chunk, worst_chunk_feerate] = real->GetWorstMainChunk();\n+        assert(chunk == worst_chunk);\n+        assert(chunk_feerate == worst_chunk_feerate);\n+\n+        // Check that the implied ordering gives rise to a combined diagram that matches the\n+        // diagram constructed from the individual cluster linearization chunkings.\n+        auto main_diagram = get_diagram_fn(true);\n+        auto expected_main_diagram = ChunkLinearization(sims[0].graph, vec1);\n+        assert(CompareChunks(main_diagram, expected_main_diagram) == 0);\n+\n+        if (sims.size() >= 2 && !sims[1].IsOversized()) {\n+            // When the staging graph is not oversized as well, call GetMainStagingDiagrams, and\n+            // fully verify the result.\n+            auto [main_cmp_diagram, stage_cmp_diagram] = real->GetMainStagingDiagrams();\n+            // Check that the feerates in each diagram are monotonically decreasing.\n+            for (size_t i = 1; i < main_cmp_diagram.size(); ++i) {\n+                assert(FeeRateCompare(main_cmp_diagram[i], main_cmp_diagram[i - 1]) <= 0);\n+            }\n+            for (size_t i = 1; i < stage_cmp_diagram.size(); ++i) {\n+                assert(FeeRateCompare(stage_cmp_diagram[i], stage_cmp_diagram[i - 1]) <= 0);\n+            }\n+            // Apply total ordering on the feerate diagrams to make them comparable (the exact\n+            // tie breaker among equal-feerate FeeFracs does not matter, but it has to be\n+            // consistent with the one used in main_diagram and stage_diagram).\n+            std::sort(main_cmp_diagram.begin(), main_cmp_diagram.end(), std::greater{});\n+            std::sort(stage_cmp_diagram.begin(), stage_cmp_diagram.end(), std::greater{});\n+            // Find the chunks that appear in main_diagram but are missing from main_cmp_diagram.\n+            // This is allowed, because GetMainStagingDiagrams omits clusters in main unaffected\n+            // by staging.\n+            std::vector<FeeFrac> missing_main_cmp;\n+            std::set_difference(main_diagram.begin(), main_diagram.end(),\n+                                main_cmp_diagram.begin(), main_cmp_diagram.end(),\n+                                std::inserter(missing_main_cmp, missing_main_cmp.end()),\n+                                std::greater{});\n+            assert(main_cmp_diagram.size() + missing_main_cmp.size() == main_diagram.size());\n+            // Do the same for chunks in stage_diagram missign from stage_cmp_diagram.\n+            auto stage_diagram = get_diagram_fn(false);",
      "path": "src/test/fuzz/txgraph.cpp",
      "position": null,
      "original_position": 320,
      "commit_id": "27a0c93abb7e70b93214eb857e2046f848139e68",
      "original_commit_id": "ef68aea6fdb032f82a3291c027ffdae75185c08f",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "```suggestion\r\n            auto stage_full_diagram = get_diagram_fn(/*main_only=*/false);\r\n```\r\nthe argument could also just take an explicit level/staging arg since they're fully determined at each call site for now",
      "created_at": "2025-03-27T13:45:57Z",
      "updated_at": "2025-03-27T16:31:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31444#discussion_r2016679161",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2016679161"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31444"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 856,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2016719978",
      "pull_request_review_id": 2721482897,
      "id": 2016719978,
      "node_id": "PRRC_kwDOABII5854NLRq",
      "diff_hunk": "@@ -251,6 +251,49 @@ class TxGraphImpl final : public TxGraph\n     /** The staging ClusterSet, if any. */\n     std::optional<ClusterSet> m_staging_clusterset;\n \n+    /** Information about a chunk in the main graph. */\n+    struct ChunkData\n+    {\n+        /** The Entry which is the last transaction of the chunk. */\n+        mutable GraphIndex m_graph_index;\n+        /** How many transactions the chunk contains. */\n+        LinearizationIndex m_chunk_count;\n+\n+        ChunkData(GraphIndex graph_index, LinearizationIndex chunk_count) noexcept :\n+            m_graph_index{graph_index}, m_chunk_count{chunk_count} {}\n+    };\n+\n+    /** Comparator for ChunkData objects in mining order. */\n+    class ChunkOrder\n+    {\n+        const TxGraphImpl* const m_graph;\n+    public:\n+        explicit ChunkOrder(const TxGraphImpl* graph) : m_graph(graph) {}",
      "path": "src/txgraph.cpp",
      "position": 101,
      "original_position": 21,
      "commit_id": "27a0c93abb7e70b93214eb857e2046f848139e68",
      "original_commit_id": "3b5e027585e782c5f728359a341a7a393adec9c0",
      "in_reply_to_id": null,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Would it make sense to have `, int level=MAIN_LEVEL` as a default argument so this could be used for (items changed in) staging as well? Otherwise, should the class name or docstring reflect it's for main only?",
      "created_at": "2025-03-27T13:52:43Z",
      "updated_at": "2025-03-27T16:46:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31444#discussion_r2016719978",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2016719978"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31444"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 290,
      "original_line": 290,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2016730122",
      "pull_request_review_id": 2713729194,
      "id": 2016730122,
      "node_id": "PRRC_kwDOABII5854NNwK",
      "diff_hunk": "@@ -649,6 +801,82 @@ FUZZ_TARGET(txgraph)\n                 assert(FeeRateCompare(after_feerate, pos_feerate) <= 0);\n             }\n         }\n+\n+        // The same order should be obtained through a BlockBuilder, if nothing is skipped.\n+        auto builder = real->GetBlockBuilder();\n+        std::vector<SimTxGraph::Pos> vec_builder;\n+        std::vector<TxGraph::Ref*> chunk;\n+        FeePerWeight chunk_feerate;\n+        while (*builder) {\n+            FeePerWeight sum;\n+            auto chunk_span = builder->GetCurrentChunk();\n+            chunk.assign(chunk_span.begin(), chunk_span.end());\n+            for (TxGraph::Ref* ref : chunk_span) {\n+                // The reported chunk feerate must match the chunk feerate obtained by asking\n+                // it for each of the chunk's transactions individually.\n+                assert(real->GetMainChunkFeerate(*ref) == builder->GetCurrentChunkFeerate());\n+                // Verify the chunk feerate matches the sum of the reported individual feerates.\n+                sum += real->GetIndividualFeerate(*ref);\n+                // Chunks must contain transactions that exist in the graph.\n+                auto simpos = sims[0].Find(ref);\n+                assert(simpos != SimTxGraph::MISSING);\n+                vec_builder.push_back(simpos);\n+            }\n+            chunk_feerate = builder->GetCurrentChunkFeerate();\n+            assert(sum == chunk_feerate);\n+            builder->Include();\n+        }\n+        assert(vec_builder == vec1);\n+\n+        // The last chunk returned by the BlockBuilder must match GetWorstMainChunk, in reverse.\n+        std::reverse(chunk.begin(), chunk.end());\n+        auto [worst_chunk, worst_chunk_feerate] = real->GetWorstMainChunk();\n+        assert(chunk == worst_chunk);\n+        assert(chunk_feerate == worst_chunk_feerate);\n+\n+        // Check that the implied ordering gives rise to a combined diagram that matches the\n+        // diagram constructed from the individual cluster linearization chunkings.\n+        auto main_diagram = get_diagram_fn(true);\n+        auto expected_main_diagram = ChunkLinearization(sims[0].graph, vec1);\n+        assert(CompareChunks(main_diagram, expected_main_diagram) == 0);\n+\n+        if (sims.size() >= 2 && !sims[1].IsOversized()) {\n+            // When the staging graph is not oversized as well, call GetMainStagingDiagrams, and\n+            // fully verify the result.\n+            auto [main_cmp_diagram, stage_cmp_diagram] = real->GetMainStagingDiagrams();\n+            // Check that the feerates in each diagram are monotonically decreasing.\n+            for (size_t i = 1; i < main_cmp_diagram.size(); ++i) {\n+                assert(FeeRateCompare(main_cmp_diagram[i], main_cmp_diagram[i - 1]) <= 0);\n+            }\n+            for (size_t i = 1; i < stage_cmp_diagram.size(); ++i) {\n+                assert(FeeRateCompare(stage_cmp_diagram[i], stage_cmp_diagram[i - 1]) <= 0);\n+            }\n+            // Apply total ordering on the feerate diagrams to make them comparable (the exact\n+            // tie breaker among equal-feerate FeeFracs does not matter, but it has to be\n+            // consistent with the one used in main_diagram and stage_diagram).\n+            std::sort(main_cmp_diagram.begin(), main_cmp_diagram.end(), std::greater{});\n+            std::sort(stage_cmp_diagram.begin(), stage_cmp_diagram.end(), std::greater{});\n+            // Find the chunks that appear in main_diagram but are missing from main_cmp_diagram.\n+            // This is allowed, because GetMainStagingDiagrams omits clusters in main unaffected\n+            // by staging.\n+            std::vector<FeeFrac> missing_main_cmp;\n+            std::set_difference(main_diagram.begin(), main_diagram.end(),\n+                                main_cmp_diagram.begin(), main_cmp_diagram.end(),\n+                                std::inserter(missing_main_cmp, missing_main_cmp.end()),\n+                                std::greater{});\n+            assert(main_cmp_diagram.size() + missing_main_cmp.size() == main_diagram.size());\n+            // Do the same for chunks in stage_diagram missign from stage_cmp_diagram.",
      "path": "src/test/fuzz/txgraph.cpp",
      "position": null,
      "original_position": 319,
      "commit_id": "27a0c93abb7e70b93214eb857e2046f848139e68",
      "original_commit_id": "ef68aea6fdb032f82a3291c027ffdae75185c08f",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "```suggestion\r\n            // Do the same for chunks in stage_diagram missing from stage_cmp_diagram.\r\n```",
      "created_at": "2025-03-27T13:56:23Z",
      "updated_at": "2025-03-27T16:31:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31444#discussion_r2016730122",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2016730122"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31444"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 855,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2017013375",
      "pull_request_review_id": 2721482897,
      "id": 2017013375,
      "node_id": "PRRC_kwDOABII5854OS5_",
      "diff_hunk": "@@ -167,6 +169,34 @@ class TxGraph\n      *  so CompareChunks is usable without type-conversion. */\n     virtual std::pair<std::vector<FeeFrac>, std::vector<FeeFrac>> GetMainStagingDiagrams() noexcept = 0;\n \n+    /** Interface returned by GetBlockBuilder. */\n+    class BlockBuilder\n+    {\n+    protected:\n+        /** The next chunk, in topological order plus feerate, or std::nullopt if done. */\n+        std::optional<std::pair<std::span<Ref*>, FeePerWeight>> m_current_chunk;\n+        /** Make constructor non-public (use TxGraph::GetBlockBuilder()). */\n+        BlockBuilder() noexcept = default;\n+    public:\n+        /** Support safe inheritance. */\n+        virtual ~BlockBuilder() = default;\n+        /** Determine whether there are more transactions to be included. */\n+        explicit operator bool() noexcept { return m_current_chunk.has_value(); }\n+        /** Get the chunk that is currently suggested to be included. */\n+        const std::span<Ref*>& GetCurrentChunk() noexcept { return m_current_chunk->first; }\n+        /** Get the feerate of the currently suggested chunk. */\n+        const FeePerWeight& GetCurrentChunkFeerate() noexcept { return m_current_chunk->second; }",
      "path": "src/txgraph.h",
      "position": null,
      "original_position": 33,
      "commit_id": "27a0c93abb7e70b93214eb857e2046f848139e68",
      "original_commit_id": "bf7b901627ff1b34a85d09c1be557ea898df9b43",
      "in_reply_to_id": null,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I'm a bit surprised to see `m_current_chunk` as a persistent-ish variable that includes `Ref*` -- that makes it a bug to move `Ref`s around while you have a `BlockBuilder` in existence. I would have thought something more like:\r\n\r\n```c++\r\n    struct NextChunk { std::vector<Ref*> refs; FeePerWeight feerate; }\r\n    optional<NextChunk> GetNextChunk();\r\n    void Include(); void Skip();\r\n    \r\n    ...\r\n\r\n    while (auto x = bb.GetNextChunk(); x) {\r\n        if (x->feerate.size > remaining) { bb.Skip(); continue; }\r\n        bb.Include();\r\n        mine(x->refs);\r\n    }\r\n```\r\n\r\nIt's still a bug to move Refs around while you have a `NextChunk`, but at least that's kind-of shorter-lived than a BlockBuilder. I think that would mostly just mean moving the Next() calls into NextChunk().",
      "created_at": "2025-03-27T16:00:38Z",
      "updated_at": "2025-03-27T16:46:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31444#discussion_r2017013375",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2017013375"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31444"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 188,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2017036847",
      "pull_request_review_id": 2721482897,
      "id": 2017036847,
      "node_id": "PRRC_kwDOABII5854OYov",
      "diff_hunk": "@@ -289,6 +290,8 @@ class TxGraphImpl final : public TxGraph\n \n     /** Index of ChunkData objects. */\n     ChunkIndex m_chunkindex;\n+    /** Number of index-observing objects in existence (BlockBuilderImpl). */\n+    size_t m_chunkindex_observers{0};",
      "path": "src/txgraph.cpp",
      "position": null,
      "original_position": 22,
      "commit_id": "27a0c93abb7e70b93214eb857e2046f848139e68",
      "original_commit_id": "bf7b901627ff1b34a85d09c1be557ea898df9b43",
      "in_reply_to_id": null,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Perhaps this stuff could be a little bit more RAII-ish? Something like:\r\n\r\n```c++\r\nclass RefsVector : public std::vector<Ref*>\r\n{\r\n    TxGraph& m_graph;\r\npublic:\r\n    template<typename... T>\r\n    RefsView(TxGraph& graph, T&&... args) : std::vector<Ref*>{args...}, m_graph{graph} { ++m_graph.m_chunkindex_observers; }\r\n    ~RefsView() { --m_graph.m_chunkindex_observers; }\r\n};\r\n```\r\n\r\nMight be good to introduce `m_chunkindex_observers` in its own commit? Arguably having a vector of Ref's (making it invalid to do `Ref b = std::move(a);`) is a different constraint from being unable to change the linearisation at the main level (which would mess up BlockBuilder); could potentially have distinct \"observer\" values for each, which would allow fees to be bumped, when you just have a Ref vec, eg.",
      "created_at": "2025-03-27T16:13:41Z",
      "updated_at": "2025-03-27T16:46:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31444#discussion_r2017036847",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2017036847"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31444"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 296,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2017115908",
      "pull_request_review_id": 2721482897,
      "id": 2017115908,
      "node_id": "PRRC_kwDOABII5854Or8E",
      "diff_hunk": "@@ -375,6 +434,7 @@ class TxGraphImpl final : public TxGraph\n     {\n         auto& entry = m_entries[idx];\n         Assume(entry.m_ref != nullptr);\n+        Assume(m_chunkindex_observers == 0 || !entry.m_locator[0].IsPresent());",
      "path": "src/txgraph.cpp",
      "position": null,
      "original_position": 134,
      "commit_id": "27a0c93abb7e70b93214eb857e2046f848139e68",
      "original_commit_id": "554888cbb6ffdd4bb7e97956b01fe1dc70d664a3",
      "in_reply_to_id": null,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Should check `observers==0` in `UpdateRef` too?",
      "created_at": "2025-03-27T16:45:17Z",
      "updated_at": "2025-03-27T16:46:53Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31444#discussion_r2017115908",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2017115908"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31444"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 437,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2017515353",
      "pull_request_review_id": 2723237795,
      "id": 2017515353,
      "node_id": "PRRC_kwDOABII5854QNdZ",
      "diff_hunk": "@@ -649,6 +801,82 @@ FUZZ_TARGET(txgraph)\n                 assert(FeeRateCompare(after_feerate, pos_feerate) <= 0);\n             }\n         }\n+\n+        // The same order should be obtained through a BlockBuilder, if nothing is skipped.\n+        auto builder = real->GetBlockBuilder();\n+        std::vector<SimTxGraph::Pos> vec_builder;\n+        std::vector<TxGraph::Ref*> chunk;\n+        FeePerWeight chunk_feerate;\n+        while (*builder) {\n+            FeePerWeight sum;\n+            auto chunk_span = builder->GetCurrentChunk();\n+            chunk.assign(chunk_span.begin(), chunk_span.end());\n+            for (TxGraph::Ref* ref : chunk_span) {\n+                // The reported chunk feerate must match the chunk feerate obtained by asking\n+                // it for each of the chunk's transactions individually.\n+                assert(real->GetMainChunkFeerate(*ref) == builder->GetCurrentChunkFeerate());\n+                // Verify the chunk feerate matches the sum of the reported individual feerates.\n+                sum += real->GetIndividualFeerate(*ref);\n+                // Chunks must contain transactions that exist in the graph.\n+                auto simpos = sims[0].Find(ref);\n+                assert(simpos != SimTxGraph::MISSING);\n+                vec_builder.push_back(simpos);\n+            }\n+            chunk_feerate = builder->GetCurrentChunkFeerate();\n+            assert(sum == chunk_feerate);\n+            builder->Include();\n+        }\n+        assert(vec_builder == vec1);\n+\n+        // The last chunk returned by the BlockBuilder must match GetWorstMainChunk, in reverse.\n+        std::reverse(chunk.begin(), chunk.end());\n+        auto [worst_chunk, worst_chunk_feerate] = real->GetWorstMainChunk();\n+        assert(chunk == worst_chunk);\n+        assert(chunk_feerate == worst_chunk_feerate);\n+\n+        // Check that the implied ordering gives rise to a combined diagram that matches the",
      "path": "src/test/fuzz/txgraph.cpp",
      "position": 378,
      "original_position": 288,
      "commit_id": "27a0c93abb7e70b93214eb857e2046f848139e68",
      "original_commit_id": "ef68aea6fdb032f82a3291c027ffdae75185c08f",
      "in_reply_to_id": 2016663864,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "The implied ordering is the one that was reconstructed above, through `CompareMainOrder`. I've changed the variable names to make this hopefully clearer.",
      "created_at": "2025-03-27T19:52:00Z",
      "updated_at": "2025-03-27T20:02:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31444#discussion_r2017515353",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2017515353"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31444"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 860,
      "original_line": 860,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2017515844",
      "pull_request_review_id": 2723237795,
      "id": 2017515844,
      "node_id": "PRRC_kwDOABII5854QNlE",
      "diff_hunk": "@@ -649,6 +714,50 @@ FUZZ_TARGET(txgraph)\n                 assert(FeeRateCompare(after_feerate, pos_feerate) <= 0);\n             }\n         }\n+\n+        // Check that the implied ordering gives rise to a combined diagram that matches the\n+        // diagram constructed from the individual cluster linearization chunkings.\n+        auto main_diagram = get_diagram_fn(true);\n+        auto expected_main_diagram = ChunkLinearization(sims[0].graph, vec1);\n+        assert(CompareChunks(main_diagram, expected_main_diagram) == 0);\n+\n+        if (sims.size() >= 2 && !sims[1].IsOversized()) {\n+            // When the staging graph is not oversized as well, call GetMainStagingDiagrams, and\n+            // fully verify the result.\n+            auto [main_cmp_diagram, stage_cmp_diagram] = real->GetMainStagingDiagrams();\n+            // Check that the feerates in each diagram are monotonically decreasing.\n+            for (size_t i = 1; i < main_cmp_diagram.size(); ++i) {\n+                assert(FeeRateCompare(main_cmp_diagram[i], main_cmp_diagram[i - 1]) <= 0);\n+            }\n+            for (size_t i = 1; i < stage_cmp_diagram.size(); ++i) {\n+                assert(FeeRateCompare(stage_cmp_diagram[i], stage_cmp_diagram[i - 1]) <= 0);\n+            }\n+            // Apply total ordering on the feerate diagrams to make them comparable (the exact\n+            // tie breaker among equal-feerate FeeFracs does not matter, but it has to be\n+            // consistent with the one used in main_diagram and stage_diagram).\n+            std::sort(main_cmp_diagram.begin(), main_cmp_diagram.end(), std::greater{});\n+            std::sort(stage_cmp_diagram.begin(), stage_cmp_diagram.end(), std::greater{});\n+            // Find the chunks that appear in main_diagram but are missing from main_cmp_diagram.\n+            // This is allowed, because GetMainStagingDiagrams omits clusters in main unaffected\n+            // by staging.\n+            std::vector<FeeFrac> missing_main_cmp;\n+            std::set_difference(main_diagram.begin(), main_diagram.end(),\n+                                main_cmp_diagram.begin(), main_cmp_diagram.end(),\n+                                std::inserter(missing_main_cmp, missing_main_cmp.end()),\n+                                std::greater{});\n+            assert(main_cmp_diagram.size() + missing_main_cmp.size() == main_diagram.size());\n+            // Do the same for chunks in stage_diagram missign from stage_cmp_diagram.\n+            auto stage_diagram = get_diagram_fn(false);\n+            std::vector<FeeFrac> missing_stage_cmp;\n+            std::set_difference(stage_diagram.begin(), stage_diagram.end(),\n+                                stage_cmp_diagram.begin(), stage_cmp_diagram.end(),\n+                                std::inserter(missing_stage_cmp, missing_stage_cmp.end()),\n+                                std::greater{});\n+            assert(stage_cmp_diagram.size() + missing_stage_cmp.size() == stage_diagram.size());\n+            // The missing chunks must be equal across main & staging (otherwise they couldn't have\n+            // been omitted).\n+            assert(missing_main_cmp == missing_stage_cmp);",
      "path": "src/test/fuzz/txgraph.cpp",
      "position": 420,
      "original_position": 146,
      "commit_id": "27a0c93abb7e70b93214eb857e2046f848139e68",
      "original_commit_id": "7248d26bd09a156b9b3d6cda20949e88b9354e6e",
      "in_reply_to_id": 2012233270,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I will think about this. I think there may be a better way to track what we expect to be missing in the diagram.",
      "created_at": "2025-03-27T19:52:26Z",
      "updated_at": "2025-03-27T20:02:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31444#discussion_r2017515844",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2017515844"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31444"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 902,
      "original_line": 902,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2017516819",
      "pull_request_review_id": 2723237795,
      "id": 2017516819,
      "node_id": "PRRC_kwDOABII5854QN0T",
      "diff_hunk": "@@ -251,6 +251,49 @@ class TxGraphImpl final : public TxGraph\n     /** The staging ClusterSet, if any. */\n     std::optional<ClusterSet> m_staging_clusterset;\n \n+    /** Information about a chunk in the main graph. */\n+    struct ChunkData\n+    {\n+        /** The Entry which is the last transaction of the chunk. */\n+        mutable GraphIndex m_graph_index;\n+        /** How many transactions the chunk contains. */\n+        LinearizationIndex m_chunk_count;\n+\n+        ChunkData(GraphIndex graph_index, LinearizationIndex chunk_count) noexcept :\n+            m_graph_index{graph_index}, m_chunk_count{chunk_count} {}\n+    };\n+\n+    /** Comparator for ChunkData objects in mining order. */\n+    class ChunkOrder\n+    {\n+        const TxGraphImpl* const m_graph;\n+    public:\n+        explicit ChunkOrder(const TxGraphImpl* graph) : m_graph(graph) {}",
      "path": "src/txgraph.cpp",
      "position": 101,
      "original_position": 21,
      "commit_id": "27a0c93abb7e70b93214eb857e2046f848139e68",
      "original_commit_id": "3b5e027585e782c5f728359a341a7a393adec9c0",
      "in_reply_to_id": 2016719978,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Given that there is only an `m_main_lin_order` (for now, and no prospective reason why we'd need one in staging), that does not work.",
      "created_at": "2025-03-27T19:53:15Z",
      "updated_at": "2025-03-27T20:02:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31444#discussion_r2017516819",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2017516819"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31444"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 290,
      "original_line": 290,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2017517912",
      "pull_request_review_id": 2723237795,
      "id": 2017517912,
      "node_id": "PRRC_kwDOABII5854QOFY",
      "diff_hunk": "@@ -289,6 +290,8 @@ class TxGraphImpl final : public TxGraph\n \n     /** Index of ChunkData objects. */\n     ChunkIndex m_chunkindex;\n+    /** Number of index-observing objects in existence (BlockBuilderImpl). */\n+    size_t m_chunkindex_observers{0};",
      "path": "src/txgraph.cpp",
      "position": null,
      "original_position": 22,
      "commit_id": "27a0c93abb7e70b93214eb857e2046f848139e68",
      "original_commit_id": "bf7b901627ff1b34a85d09c1be557ea898df9b43",
      "in_reply_to_id": 2017036847,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "It's a possibility, but you mean this in addition to `BlockBuildImpl` itself also incrementing the observers count, right? Because it holds an iterator to the chunk index in GraphImpl too.",
      "created_at": "2025-03-27T19:54:09Z",
      "updated_at": "2025-03-27T20:02:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31444#discussion_r2017517912",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2017517912"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31444"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 296,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2017518589",
      "pull_request_review_id": 2723237795,
      "id": 2017518589,
      "node_id": "PRRC_kwDOABII5854QOP9",
      "diff_hunk": "@@ -1897,6 +1907,32 @@ TxGraph::GraphIndex TxGraphImpl::CountDistinctClusters(std::span<const Ref* cons\n     return ret;\n }\n \n+std::pair<std::vector<FeeFrac>, std::vector<FeeFrac>> TxGraphImpl::GetMainStagingDiagrams() noexcept\n+{\n+    Assume(m_staging_clusterset.has_value());\n+    MakeAllAcceptable(0);",
      "path": "src/txgraph.cpp",
      "position": 723,
      "original_position": 38,
      "commit_id": "27a0c93abb7e70b93214eb857e2046f848139e68",
      "original_commit_id": "7248d26bd09a156b9b3d6cda20949e88b9354e6e",
      "in_reply_to_id": 2012087403,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "That's actually implied by `Assume(m_main_clusterset.m_deps_to_add.empty());` below (but added a comment to clarify).",
      "created_at": "2025-03-27T19:54:42Z",
      "updated_at": "2025-03-27T20:02:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31444#discussion_r2017518589",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2017518589"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31444"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2091,
      "original_line": 2091,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2017518773",
      "pull_request_review_id": 2723237795,
      "id": 2017518773,
      "node_id": "PRRC_kwDOABII5854QOS1",
      "diff_hunk": "@@ -1854,6 +1865,33 @@ TxGraph::GraphIndex TxGraphImpl::CountDistinctClusters(std::span<const Ref* cons\n     return ret;\n }\n \n+std::pair<std::vector<FeeFrac>, std::vector<FeeFrac>> TxGraphImpl::GetMainStagingDiagrams() noexcept\n+{\n+    Assume(m_clustersets.size() >= 2);\n+    MakeAllAcceptable(m_clustersets.size() - 2);\n+    Assume(m_clustersets[m_clustersets.size() - 2].m_deps_to_add.empty());\n+    MakeAllAcceptable(m_clustersets.size() - 1);\n+    Assume(m_clustersets[m_clustersets.size() - 1].m_deps_to_add.empty());\n+    // For all Clusters in main which conflict with Clusters in staging (i.e., all that are removed\n+    // by, or replaced in, staging), gather their chunk feerates.\n+    auto main_clusters = GetConflicts();\n+    std::vector<FeeFrac> main_feerates, staging_feerates;\n+    for (Cluster* cluster : main_clusters) {\n+        cluster->AppendChunkFeerates(main_feerates);\n+    }\n+    // Do the same for the Clusters in staging themselves.\n+    const auto& staging = m_clustersets.back();\n+    for (int quality = 0; quality < int(QualityLevel::NONE); ++quality) {",
      "path": "src/txgraph.cpp",
      "position": 735,
      "original_position": 52,
      "commit_id": "27a0c93abb7e70b93214eb857e2046f848139e68",
      "original_commit_id": "22821d0bd5acb523b83ff4b961838d4ded840e6a",
      "in_reply_to_id": 1993495206,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I think it's more obviously correct. We should only have `ACCEPTABLE` and `OPTIMAL` ones, but going through all of them shouldn't hurt here.",
      "created_at": "2025-03-27T19:54:53Z",
      "updated_at": "2025-03-27T20:02:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31444#discussion_r2017518773",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2017518773"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31444"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2103,
      "original_line": 2103,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2017520354",
      "pull_request_review_id": 2723237795,
      "id": 2017520354,
      "node_id": "PRRC_kwDOABII5854QOri",
      "diff_hunk": "@@ -162,6 +162,10 @@ class TxGraph\n      *  main clusters are counted. Refs that do not exist in the queried graph are ignored. The\n      *  queried graph must not be oversized. */\n     virtual GraphIndex CountDistinctClusters(std::span<const Ref* const>, bool main_only = false) noexcept = 0;\n+    /** Get feerate diagrams for both main and staging (which must both exist and not be\n+     *  oversized), ignoring unmodified components in both. Use FeeFrac rather than FeePerWeight\n+     *  so CompareChunks is usable without type-conversion. */\n+    virtual std::pair<std::vector<FeeFrac>, std::vector<FeeFrac>> GetMainStagingDiagrams() noexcept = 0;",
      "path": "src/txgraph.h",
      "position": 21,
      "original_position": 7,
      "commit_id": "27a0c93abb7e70b93214eb857e2046f848139e68",
      "original_commit_id": "899ce12b59a3f503fa047e3e0125aacfa928a125",
      "in_reply_to_id": 2016595434,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I considered something like this, but it complicates matters for the fuzz test, which reconstructs diagram directly using `DepGraph` code, which produces `FeeFrac` ones.",
      "created_at": "2025-03-27T19:56:16Z",
      "updated_at": "2025-03-27T20:02:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31444#discussion_r2017520354",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2017520354"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31444"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 171,
      "original_line": 171,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2017520489",
      "pull_request_review_id": 2723237795,
      "id": 2017520489,
      "node_id": "PRRC_kwDOABII5854QOtp",
      "diff_hunk": "@@ -196,6 +196,10 @@ class TxGraph\n     /** Construct a block builder, drawing chunks in order, from the main graph, which cannot be\n      *  oversized. While the returned object exists, no mutators on the main graph are allowed. */\n     virtual std::unique_ptr<BlockBuilder> GetBlockBuilder() noexcept = 0;\n+    /** Get the last chunk in the main graph, i.e., the last chunk that would be returned by a",
      "path": "src/txgraph.h",
      "position": 45,
      "original_position": 4,
      "commit_id": "27a0c93abb7e70b93214eb857e2046f848139e68",
      "original_commit_id": "e37c5a6afe52fef31551c0ad2e4b6460448c1b63",
      "in_reply_to_id": 2012288718,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done.",
      "created_at": "2025-03-27T19:56:22Z",
      "updated_at": "2025-03-27T20:02:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31444#discussion_r2017520489",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2017520489"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31444"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 195,
      "original_line": 195,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2017523103",
      "pull_request_review_id": 2723237795,
      "id": 2017523103,
      "node_id": "PRRC_kwDOABII5854QPWf",
      "diff_hunk": "@@ -167,6 +169,34 @@ class TxGraph\n      *  so CompareChunks is usable without type-conversion. */\n     virtual std::pair<std::vector<FeeFrac>, std::vector<FeeFrac>> GetMainStagingDiagrams() noexcept = 0;\n \n+    /** Interface returned by GetBlockBuilder. */\n+    class BlockBuilder\n+    {\n+    protected:\n+        /** The next chunk, in topological order plus feerate, or std::nullopt if done. */\n+        std::optional<std::pair<std::span<Ref*>, FeePerWeight>> m_current_chunk;\n+        /** Make constructor non-public (use TxGraph::GetBlockBuilder()). */\n+        BlockBuilder() noexcept = default;\n+    public:\n+        /** Support safe inheritance. */\n+        virtual ~BlockBuilder() = default;\n+        /** Determine whether there are more transactions to be included. */\n+        explicit operator bool() noexcept { return m_current_chunk.has_value(); }\n+        /** Get the chunk that is currently suggested to be included. */\n+        const std::span<Ref*>& GetCurrentChunk() noexcept { return m_current_chunk->first; }\n+        /** Get the feerate of the currently suggested chunk. */\n+        const FeePerWeight& GetCurrentChunkFeerate() noexcept { return m_current_chunk->second; }",
      "path": "src/txgraph.h",
      "position": null,
      "original_position": 33,
      "commit_id": "27a0c93abb7e70b93214eb857e2046f848139e68",
      "original_commit_id": "bf7b901627ff1b34a85d09c1be557ea898df9b43",
      "in_reply_to_id": 2017013375,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I've done something like this, but a bit different, as I felt it'd be ugly for the semantics of repeated `GetNextChunk` calls without `Skip`/`Include` in between.\r\n\r\nThe interface is now:\r\n\r\n```c++\r\n        /** Get the chunk that is currently suggested to be included, plus its feerate, if any. */\r\n        virtual std::optional<std::pair<std::vector<Ref*>, FeePerWeight>> GetCurrentChunk() noexcept = 0;\r\n        /** Mark the current chunk as included, and progress to the next one. */\r\n        virtual void Include() noexcept = 0;\r\n        /** Mark the current chunk as skipped, and progress to the next one. Further chunks from\r\n         *  the same cluster as the current one will not be reported anymore. */\r\n        virtual void Skip() noexcept = 0;\r\n```\r\n\r\nWhere `GetCurrentChunk` may be called multiple times, without (observable) effect on the builder.",
      "created_at": "2025-03-27T19:58:32Z",
      "updated_at": "2025-03-27T20:02:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31444#discussion_r2017523103",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2017523103"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31444"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 188,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2017524476",
      "pull_request_review_id": 2723237795,
      "id": 2017524476,
      "node_id": "PRRC_kwDOABII5854QPr8",
      "diff_hunk": "@@ -1901,6 +1911,32 @@ TxGraph::GraphIndex TxGraphImpl::CountDistinctClusters(std::span<const Ref* cons\n     return ret;\n }\n \n+std::pair<std::vector<FeeFrac>, std::vector<FeeFrac>> TxGraphImpl::GetMainStagingDiagrams() noexcept\n+{\n+    Assume(m_staging_clusterset.has_value());\n+    MakeAllAcceptable(MAIN_LEVEL);\n+    Assume(m_main_clusterset.m_deps_to_add.empty());\n+    MakeAllAcceptable(STAGING_LEVEL);\n+    Assume(m_staging_clusterset->m_deps_to_add.empty());\n+    // For all Clusters in main which conflict with Clusters in staging (i.e., all that are removed\n+    // by, or replaced in, staging), gather their chunk feerates.\n+    auto main_clusters = GetConflicts();\n+    std::vector<FeeFrac> main_feerates, staging_feerates;\n+    for (Cluster* cluster : main_clusters) {\n+        cluster->AppendChunkFeerates(main_feerates);\n+    }\n+    // Do the same for the Clusters in staging themselves.\n+    for (int quality = 0; quality < int(QualityLevel::NONE); ++quality) {\n+        for (const auto& cluster : m_staging_clusterset->m_clusters[quality]) {\n+            cluster->AppendChunkFeerates(staging_feerates);\n+        }\n+    }\n+    // Sort both by decreasing feerate to obtain diagrams, and return them.\n+    std::sort(main_feerates.begin(), main_feerates.end(), [](auto& a, auto& b) { return a >> b; });\n+    std::sort(staging_feerates.begin(), staging_feerates.end(), [](auto& a, auto& b) { return a >> b; });",
      "path": "src/txgraph.cpp",
      "position": null,
      "original_position": 57,
      "commit_id": "27a0c93abb7e70b93214eb857e2046f848139e68",
      "original_commit_id": "899ce12b59a3f503fa047e3e0125aacfa928a125",
      "in_reply_to_id": 2016650965,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "That's exactly what `BlockBuilder` does? This is test code that simulates the behavior of that (and, also works for staging, which has no index).",
      "created_at": "2025-03-27T19:59:41Z",
      "updated_at": "2025-03-27T20:02:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31444#discussion_r2017524476",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2017524476"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31444"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2090,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2017524621",
      "pull_request_review_id": 2723237795,
      "id": 2017524621,
      "node_id": "PRRC_kwDOABII5854QPuN",
      "diff_hunk": "@@ -649,6 +801,82 @@ FUZZ_TARGET(txgraph)\n                 assert(FeeRateCompare(after_feerate, pos_feerate) <= 0);\n             }\n         }\n+\n+        // The same order should be obtained through a BlockBuilder, if nothing is skipped.\n+        auto builder = real->GetBlockBuilder();\n+        std::vector<SimTxGraph::Pos> vec_builder;\n+        std::vector<TxGraph::Ref*> chunk;\n+        FeePerWeight chunk_feerate;\n+        while (*builder) {\n+            FeePerWeight sum;\n+            auto chunk_span = builder->GetCurrentChunk();\n+            chunk.assign(chunk_span.begin(), chunk_span.end());\n+            for (TxGraph::Ref* ref : chunk_span) {\n+                // The reported chunk feerate must match the chunk feerate obtained by asking\n+                // it for each of the chunk's transactions individually.\n+                assert(real->GetMainChunkFeerate(*ref) == builder->GetCurrentChunkFeerate());\n+                // Verify the chunk feerate matches the sum of the reported individual feerates.\n+                sum += real->GetIndividualFeerate(*ref);\n+                // Chunks must contain transactions that exist in the graph.\n+                auto simpos = sims[0].Find(ref);\n+                assert(simpos != SimTxGraph::MISSING);\n+                vec_builder.push_back(simpos);\n+            }\n+            chunk_feerate = builder->GetCurrentChunkFeerate();\n+            assert(sum == chunk_feerate);\n+            builder->Include();\n+        }\n+        assert(vec_builder == vec1);\n+\n+        // The last chunk returned by the BlockBuilder must match GetWorstMainChunk, in reverse.\n+        std::reverse(chunk.begin(), chunk.end());\n+        auto [worst_chunk, worst_chunk_feerate] = real->GetWorstMainChunk();\n+        assert(chunk == worst_chunk);\n+        assert(chunk_feerate == worst_chunk_feerate);\n+\n+        // Check that the implied ordering gives rise to a combined diagram that matches the\n+        // diagram constructed from the individual cluster linearization chunkings.\n+        auto main_diagram = get_diagram_fn(true);\n+        auto expected_main_diagram = ChunkLinearization(sims[0].graph, vec1);\n+        assert(CompareChunks(main_diagram, expected_main_diagram) == 0);\n+\n+        if (sims.size() >= 2 && !sims[1].IsOversized()) {\n+            // When the staging graph is not oversized as well, call GetMainStagingDiagrams, and\n+            // fully verify the result.\n+            auto [main_cmp_diagram, stage_cmp_diagram] = real->GetMainStagingDiagrams();\n+            // Check that the feerates in each diagram are monotonically decreasing.\n+            for (size_t i = 1; i < main_cmp_diagram.size(); ++i) {\n+                assert(FeeRateCompare(main_cmp_diagram[i], main_cmp_diagram[i - 1]) <= 0);\n+            }\n+            for (size_t i = 1; i < stage_cmp_diagram.size(); ++i) {\n+                assert(FeeRateCompare(stage_cmp_diagram[i], stage_cmp_diagram[i - 1]) <= 0);\n+            }\n+            // Apply total ordering on the feerate diagrams to make them comparable (the exact\n+            // tie breaker among equal-feerate FeeFracs does not matter, but it has to be\n+            // consistent with the one used in main_diagram and stage_diagram).\n+            std::sort(main_cmp_diagram.begin(), main_cmp_diagram.end(), std::greater{});\n+            std::sort(stage_cmp_diagram.begin(), stage_cmp_diagram.end(), std::greater{});\n+            // Find the chunks that appear in main_diagram but are missing from main_cmp_diagram.\n+            // This is allowed, because GetMainStagingDiagrams omits clusters in main unaffected\n+            // by staging.\n+            std::vector<FeeFrac> missing_main_cmp;\n+            std::set_difference(main_diagram.begin(), main_diagram.end(),\n+                                main_cmp_diagram.begin(), main_cmp_diagram.end(),\n+                                std::inserter(missing_main_cmp, missing_main_cmp.end()),\n+                                std::greater{});\n+            assert(main_cmp_diagram.size() + missing_main_cmp.size() == main_diagram.size());\n+            // Do the same for chunks in stage_diagram missign from stage_cmp_diagram.",
      "path": "src/test/fuzz/txgraph.cpp",
      "position": null,
      "original_position": 319,
      "commit_id": "27a0c93abb7e70b93214eb857e2046f848139e68",
      "original_commit_id": "ef68aea6fdb032f82a3291c027ffdae75185c08f",
      "in_reply_to_id": 2016730122,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Fixed.",
      "created_at": "2025-03-27T19:59:47Z",
      "updated_at": "2025-03-27T20:02:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31444#discussion_r2017524621",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2017524621"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31444"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 855,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2017525281",
      "pull_request_review_id": 2723237795,
      "id": 2017525281,
      "node_id": "PRRC_kwDOABII5854QP4h",
      "diff_hunk": "@@ -649,6 +801,82 @@ FUZZ_TARGET(txgraph)\n                 assert(FeeRateCompare(after_feerate, pos_feerate) <= 0);\n             }\n         }\n+\n+        // The same order should be obtained through a BlockBuilder, if nothing is skipped.\n+        auto builder = real->GetBlockBuilder();\n+        std::vector<SimTxGraph::Pos> vec_builder;\n+        std::vector<TxGraph::Ref*> chunk;\n+        FeePerWeight chunk_feerate;\n+        while (*builder) {\n+            FeePerWeight sum;\n+            auto chunk_span = builder->GetCurrentChunk();\n+            chunk.assign(chunk_span.begin(), chunk_span.end());\n+            for (TxGraph::Ref* ref : chunk_span) {\n+                // The reported chunk feerate must match the chunk feerate obtained by asking\n+                // it for each of the chunk's transactions individually.\n+                assert(real->GetMainChunkFeerate(*ref) == builder->GetCurrentChunkFeerate());\n+                // Verify the chunk feerate matches the sum of the reported individual feerates.\n+                sum += real->GetIndividualFeerate(*ref);\n+                // Chunks must contain transactions that exist in the graph.\n+                auto simpos = sims[0].Find(ref);\n+                assert(simpos != SimTxGraph::MISSING);\n+                vec_builder.push_back(simpos);\n+            }\n+            chunk_feerate = builder->GetCurrentChunkFeerate();\n+            assert(sum == chunk_feerate);\n+            builder->Include();\n+        }\n+        assert(vec_builder == vec1);\n+\n+        // The last chunk returned by the BlockBuilder must match GetWorstMainChunk, in reverse.\n+        std::reverse(chunk.begin(), chunk.end());\n+        auto [worst_chunk, worst_chunk_feerate] = real->GetWorstMainChunk();\n+        assert(chunk == worst_chunk);\n+        assert(chunk_feerate == worst_chunk_feerate);\n+\n+        // Check that the implied ordering gives rise to a combined diagram that matches the\n+        // diagram constructed from the individual cluster linearization chunkings.\n+        auto main_diagram = get_diagram_fn(true);\n+        auto expected_main_diagram = ChunkLinearization(sims[0].graph, vec1);\n+        assert(CompareChunks(main_diagram, expected_main_diagram) == 0);\n+\n+        if (sims.size() >= 2 && !sims[1].IsOversized()) {\n+            // When the staging graph is not oversized as well, call GetMainStagingDiagrams, and\n+            // fully verify the result.\n+            auto [main_cmp_diagram, stage_cmp_diagram] = real->GetMainStagingDiagrams();\n+            // Check that the feerates in each diagram are monotonically decreasing.\n+            for (size_t i = 1; i < main_cmp_diagram.size(); ++i) {\n+                assert(FeeRateCompare(main_cmp_diagram[i], main_cmp_diagram[i - 1]) <= 0);\n+            }\n+            for (size_t i = 1; i < stage_cmp_diagram.size(); ++i) {\n+                assert(FeeRateCompare(stage_cmp_diagram[i], stage_cmp_diagram[i - 1]) <= 0);\n+            }\n+            // Apply total ordering on the feerate diagrams to make them comparable (the exact\n+            // tie breaker among equal-feerate FeeFracs does not matter, but it has to be\n+            // consistent with the one used in main_diagram and stage_diagram).\n+            std::sort(main_cmp_diagram.begin(), main_cmp_diagram.end(), std::greater{});\n+            std::sort(stage_cmp_diagram.begin(), stage_cmp_diagram.end(), std::greater{});\n+            // Find the chunks that appear in main_diagram but are missing from main_cmp_diagram.\n+            // This is allowed, because GetMainStagingDiagrams omits clusters in main unaffected\n+            // by staging.\n+            std::vector<FeeFrac> missing_main_cmp;\n+            std::set_difference(main_diagram.begin(), main_diagram.end(),\n+                                main_cmp_diagram.begin(), main_cmp_diagram.end(),\n+                                std::inserter(missing_main_cmp, missing_main_cmp.end()),\n+                                std::greater{});\n+            assert(main_cmp_diagram.size() + missing_main_cmp.size() == main_diagram.size());\n+            // Do the same for chunks in stage_diagram missign from stage_cmp_diagram.\n+            auto stage_diagram = get_diagram_fn(false);",
      "path": "src/test/fuzz/txgraph.cpp",
      "position": null,
      "original_position": 320,
      "commit_id": "27a0c93abb7e70b93214eb857e2046f848139e68",
      "original_commit_id": "ef68aea6fdb032f82a3291c027ffdae75185c08f",
      "in_reply_to_id": 2016679161,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I've renamed all the variables to be of the form `{main,staging}_{real,implied,cmp}_diagram`.",
      "created_at": "2025-03-27T20:00:20Z",
      "updated_at": "2025-03-27T20:02:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31444#discussion_r2017525281",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2017525281"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31444"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 856,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2017525530",
      "pull_request_review_id": 2723237795,
      "id": 2017525530,
      "node_id": "PRRC_kwDOABII5854QP8a",
      "diff_hunk": "@@ -649,6 +801,82 @@ FUZZ_TARGET(txgraph)\n                 assert(FeeRateCompare(after_feerate, pos_feerate) <= 0);\n             }\n         }\n+\n+        // The same order should be obtained through a BlockBuilder, if nothing is skipped.\n+        auto builder = real->GetBlockBuilder();\n+        std::vector<SimTxGraph::Pos> vec_builder;\n+        std::vector<TxGraph::Ref*> chunk;\n+        FeePerWeight chunk_feerate;\n+        while (*builder) {\n+            FeePerWeight sum;\n+            auto chunk_span = builder->GetCurrentChunk();\n+            chunk.assign(chunk_span.begin(), chunk_span.end());\n+            for (TxGraph::Ref* ref : chunk_span) {\n+                // The reported chunk feerate must match the chunk feerate obtained by asking\n+                // it for each of the chunk's transactions individually.\n+                assert(real->GetMainChunkFeerate(*ref) == builder->GetCurrentChunkFeerate());\n+                // Verify the chunk feerate matches the sum of the reported individual feerates.\n+                sum += real->GetIndividualFeerate(*ref);\n+                // Chunks must contain transactions that exist in the graph.\n+                auto simpos = sims[0].Find(ref);\n+                assert(simpos != SimTxGraph::MISSING);\n+                vec_builder.push_back(simpos);\n+            }\n+            chunk_feerate = builder->GetCurrentChunkFeerate();\n+            assert(sum == chunk_feerate);\n+            builder->Include();\n+        }\n+        assert(vec_builder == vec1);\n+\n+        // The last chunk returned by the BlockBuilder must match GetWorstMainChunk, in reverse.\n+        std::reverse(chunk.begin(), chunk.end());\n+        auto [worst_chunk, worst_chunk_feerate] = real->GetWorstMainChunk();\n+        assert(chunk == worst_chunk);\n+        assert(chunk_feerate == worst_chunk_feerate);\n+\n+        // Check that the implied ordering gives rise to a combined diagram that matches the\n+        // diagram constructed from the individual cluster linearization chunkings.\n+        auto main_diagram = get_diagram_fn(true);",
      "path": "src/test/fuzz/txgraph.cpp",
      "position": null,
      "original_position": 290,
      "commit_id": "27a0c93abb7e70b93214eb857e2046f848139e68",
      "original_commit_id": "ef68aea6fdb032f82a3291c027ffdae75185c08f",
      "in_reply_to_id": 2016674189,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I've renamed all the variables to be of the form {main,staging}_{real,implied,cmp}_diagram.",
      "created_at": "2025-03-27T20:00:34Z",
      "updated_at": "2025-03-27T20:02:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31444#discussion_r2017525530",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2017525530"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31444"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 826,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2017525668",
      "pull_request_review_id": 2723237795,
      "id": 2017525668,
      "node_id": "PRRC_kwDOABII5854QP-k",
      "diff_hunk": "@@ -292,6 +293,8 @@ class TxGraphImpl final : public TxGraph\n     ChunkIndex m_chunkindex;\n     /** Number of index-observing objects in existence (BlockBuilderImpl). */\n     size_t m_chunkindex_observers{0};\n+    /** Cache of discarded ChunkIndex node handles. */",
      "path": "src/txgraph.cpp",
      "position": null,
      "original_position": 12,
      "commit_id": "27a0c93abb7e70b93214eb857e2046f848139e68",
      "original_commit_id": "35beed7245b17c21a5ba13f2dd3da0552408c8da",
      "in_reply_to_id": 2012318226,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done.",
      "created_at": "2025-03-27T20:00:41Z",
      "updated_at": "2025-03-27T20:02:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31444#discussion_r2017525668",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2017525668"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31444"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 297,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2017525940",
      "pull_request_review_id": 2723237795,
      "id": 2017525940,
      "node_id": "PRRC_kwDOABII5854QQC0",
      "diff_hunk": "@@ -649,6 +714,50 @@ FUZZ_TARGET(txgraph)\n                 assert(FeeRateCompare(after_feerate, pos_feerate) <= 0);\n             }\n         }\n+\n+        // Check that the implied ordering gives rise to a combined diagram that matches the\n+        // diagram constructed from the individual cluster linearization chunkings.\n+        auto main_diagram = get_diagram_fn(true);\n+        auto expected_main_diagram = ChunkLinearization(sims[0].graph, vec1);\n+        assert(CompareChunks(main_diagram, expected_main_diagram) == 0);\n+\n+        if (sims.size() >= 2 && !sims[1].IsOversized()) {\n+            // When the staging graph is not oversized as well, call GetMainStagingDiagrams, and\n+            // fully verify the result.\n+            auto [main_cmp_diagram, stage_cmp_diagram] = real->GetMainStagingDiagrams();\n+            // Check that the feerates in each diagram are monotonically decreasing.\n+            for (size_t i = 1; i < main_cmp_diagram.size(); ++i) {\n+                assert(FeeRateCompare(main_cmp_diagram[i], main_cmp_diagram[i - 1]) <= 0);\n+            }\n+            for (size_t i = 1; i < stage_cmp_diagram.size(); ++i) {\n+                assert(FeeRateCompare(stage_cmp_diagram[i], stage_cmp_diagram[i - 1]) <= 0);\n+            }\n+            // Apply total ordering on the feerate diagrams to make them comparable (the exact",
      "path": "src/test/fuzz/txgraph.cpp",
      "position": null,
      "original_position": 122,
      "commit_id": "27a0c93abb7e70b93214eb857e2046f848139e68",
      "original_commit_id": "7248d26bd09a156b9b3d6cda20949e88b9354e6e",
      "in_reply_to_id": 2012199860,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I have reworded this. Please have a look.",
      "created_at": "2025-03-27T20:00:56Z",
      "updated_at": "2025-03-27T20:02:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31444#discussion_r2017525940",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2017525940"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31444"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 841,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2017527166",
      "pull_request_review_id": 2723237795,
      "id": 2017527166,
      "node_id": "PRRC_kwDOABII5854QQV-",
      "diff_hunk": "@@ -1897,6 +1907,32 @@ TxGraph::GraphIndex TxGraphImpl::CountDistinctClusters(std::span<const Ref* cons\n     return ret;\n }\n \n+std::pair<std::vector<FeeFrac>, std::vector<FeeFrac>> TxGraphImpl::GetMainStagingDiagrams() noexcept\n+{\n+    Assume(m_staging_clusterset.has_value());\n+    MakeAllAcceptable(0);\n+    Assume(m_main_clusterset.m_deps_to_add.empty());\n+    MakeAllAcceptable(1);\n+    Assume(m_staging_clusterset->m_deps_to_add.empty());\n+    // For all Clusters in main which conflict with Clusters in staging (i.e., all that are removed\n+    // by, or replaced in, staging), gather their chunk feerates.\n+    auto main_clusters = GetConflicts();\n+    std::vector<FeeFrac> main_feerates, staging_feerates;\n+    for (Cluster* cluster : main_clusters) {\n+        cluster->AppendChunkFeerates(main_feerates);\n+    }\n+    // Do the same for the Clusters in staging themselves.\n+    for (int quality = 0; quality < int(QualityLevel::NONE); ++quality) {\n+        for (const auto& cluster : m_staging_clusterset->m_clusters[quality]) {\n+            cluster->AppendChunkFeerates(staging_feerates);\n+        }\n+    }\n+    // Sort both by decreasing feerate to obtain diagrams, and return them.\n+    std::sort(main_feerates.begin(), main_feerates.end(), [](auto& a, auto& b) { return a >> b; });",
      "path": "src/txgraph.cpp",
      "position": null,
      "original_position": 56,
      "commit_id": "27a0c93abb7e70b93214eb857e2046f848139e68",
      "original_commit_id": "7248d26bd09a156b9b3d6cda20949e88b9354e6e",
      "in_reply_to_id": 2012192461,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "The within-same-feerate ordering is actually irrelevant as far as the diagram is concerned, it's just a sequence of equal-slope sections in the graph; they could arguably be merged into a single one even.\r\n\r\nStill, for consistently/repeatability, I've made it use the size-tiebreaking comparison.",
      "created_at": "2025-03-27T20:02:00Z",
      "updated_at": "2025-03-27T20:02:10Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31444#discussion_r2017527166",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2017527166"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31444"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2089,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2018742079",
      "pull_request_review_id": 2725655591,
      "id": 2018742079,
      "node_id": "PRRC_kwDOABII5854U48_",
      "diff_hunk": "@@ -279,6 +290,39 @@ FUZZ_TARGET(txgraph)\n         return &empty_ref;\n     };\n \n+    /** Function to construct the correct fee-size diagram a real graph has based on its graph\n+     *  order (as reported by GetCluster(), so it works for both main and staging). */\n+    auto get_diagram_fn = [&](bool main_only) -> std::vector<FeeFrac> {\n+        int level = main_only ? 0 : sims.size() - 1;\n+        auto& sim = sims[level];\n+        // For every transaction in the graph, request its cluster, and throw them into a set.\n+        std::set<std::vector<TxGraph::Ref*>> clusters;\n+        for (auto i : sim.graph.Positions()) {\n+            auto ref = sim.GetRef(i);\n+            clusters.insert(real->GetCluster(*ref, main_only));\n+        }\n+        // Compute the chunkings of each (deduplicated) cluster.\n+        size_t num_tx{0};\n+        std::vector<FeeFrac> ret;",
      "path": "src/test/fuzz/txgraph.cpp",
      "position": null,
      "original_position": 42,
      "commit_id": "27a0c93abb7e70b93214eb857e2046f848139e68",
      "original_commit_id": "f4c8848c7ca87a463d4d0841d354a59f64c2d20c",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "micro-nit\r\n```Suggestion\r\n        std::vector<FeeFrac> chunk_feerates;\r\n```",
      "created_at": "2025-03-28T14:00:52Z",
      "updated_at": "2025-03-28T18:31:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31444#discussion_r2018742079",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2018742079"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31444"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 337,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2018744853",
      "pull_request_review_id": 2725655591,
      "id": 2018744853,
      "node_id": "PRRC_kwDOABII5854U5oV",
      "diff_hunk": "@@ -279,6 +290,39 @@ FUZZ_TARGET(txgraph)\n         return &empty_ref;\n     };\n \n+    /** Function to construct the correct fee-size diagram a real graph has based on its graph\n+     *  order (as reported by GetCluster(), so it works for both main and staging). */\n+    auto get_diagram_fn = [&](bool main_only) -> std::vector<FeeFrac> {\n+        int level = main_only ? 0 : sims.size() - 1;\n+        auto& sim = sims[level];\n+        // For every transaction in the graph, request its cluster, and throw them into a set.\n+        std::set<std::vector<TxGraph::Ref*>> clusters;\n+        for (auto i : sim.graph.Positions()) {\n+            auto ref = sim.GetRef(i);\n+            clusters.insert(real->GetCluster(*ref, main_only));\n+        }\n+        // Compute the chunkings of each (deduplicated) cluster.\n+        size_t num_tx{0};\n+        std::vector<FeeFrac> ret;\n+        for (const auto& cluster : clusters) {\n+            num_tx += cluster.size();\n+            std::vector<SimTxGraph::Pos> linearization;\n+            linearization.reserve(cluster.size());\n+            for (auto refptr : cluster) linearization.push_back(sim.Find(refptr));\n+            for (const FeeFrac& chunk_feerate : ChunkLinearization(sim.graph, linearization)) {\n+                ret.push_back(chunk_feerate);\n+            }\n+        }\n+        // Verify the number of transactions after deduplicating clusters. This implicitly verifies\n+        // that GetCluster on each element of a cluster reports the cluster transactions in the same\n+        // order.\n+        assert(num_tx == sim.GetTransactionCount());\n+        // Sort by feerate (we don't care about respecting ordering within clusters, as these are",
      "path": "src/test/fuzz/txgraph.cpp",
      "position": null,
      "original_position": 56,
      "commit_id": "27a0c93abb7e70b93214eb857e2046f848139e68",
      "original_commit_id": "f4c8848c7ca87a463d4d0841d354a59f64c2d20c",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "We don't care or it will be respected within clusters due to CFR?",
      "created_at": "2025-03-28T14:02:38Z",
      "updated_at": "2025-03-28T18:31:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31444#discussion_r2018744853",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2018744853"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31444"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 351,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2018784874",
      "pull_request_review_id": 2725731979,
      "id": 2018784874,
      "node_id": "PRRC_kwDOABII5854VDZq",
      "diff_hunk": "@@ -649,6 +714,50 @@ FUZZ_TARGET(txgraph)\n                 assert(FeeRateCompare(after_feerate, pos_feerate) <= 0);\n             }\n         }\n+\n+        // Check that the implied ordering gives rise to a combined diagram that matches the\n+        // diagram constructed from the individual cluster linearization chunkings.\n+        auto main_diagram = get_diagram_fn(true);\n+        auto expected_main_diagram = ChunkLinearization(sims[0].graph, vec1);\n+        assert(CompareChunks(main_diagram, expected_main_diagram) == 0);\n+\n+        if (sims.size() >= 2 && !sims[1].IsOversized()) {\n+            // When the staging graph is not oversized as well, call GetMainStagingDiagrams, and\n+            // fully verify the result.\n+            auto [main_cmp_diagram, stage_cmp_diagram] = real->GetMainStagingDiagrams();\n+            // Check that the feerates in each diagram are monotonically decreasing.\n+            for (size_t i = 1; i < main_cmp_diagram.size(); ++i) {\n+                assert(FeeRateCompare(main_cmp_diagram[i], main_cmp_diagram[i - 1]) <= 0);\n+            }\n+            for (size_t i = 1; i < stage_cmp_diagram.size(); ++i) {\n+                assert(FeeRateCompare(stage_cmp_diagram[i], stage_cmp_diagram[i - 1]) <= 0);\n+            }\n+            // Apply total ordering on the feerate diagrams to make them comparable (the exact\n+            // tie breaker among equal-feerate FeeFracs does not matter, but it has to be\n+            // consistent with the one used in main_diagram and stage_diagram).\n+            std::sort(main_cmp_diagram.begin(), main_cmp_diagram.end(), std::greater{});\n+            std::sort(stage_cmp_diagram.begin(), stage_cmp_diagram.end(), std::greater{});\n+            // Find the chunks that appear in main_diagram but are missing from main_cmp_diagram.\n+            // This is allowed, because GetMainStagingDiagrams omits clusters in main unaffected\n+            // by staging.\n+            std::vector<FeeFrac> missing_main_cmp;\n+            std::set_difference(main_diagram.begin(), main_diagram.end(),\n+                                main_cmp_diagram.begin(), main_cmp_diagram.end(),\n+                                std::inserter(missing_main_cmp, missing_main_cmp.end()),\n+                                std::greater{});\n+            assert(main_cmp_diagram.size() + missing_main_cmp.size() == main_diagram.size());\n+            // Do the same for chunks in stage_diagram missign from stage_cmp_diagram.\n+            auto stage_diagram = get_diagram_fn(false);\n+            std::vector<FeeFrac> missing_stage_cmp;\n+            std::set_difference(stage_diagram.begin(), stage_diagram.end(),\n+                                stage_cmp_diagram.begin(), stage_cmp_diagram.end(),\n+                                std::inserter(missing_stage_cmp, missing_stage_cmp.end()),\n+                                std::greater{});\n+            assert(stage_cmp_diagram.size() + missing_stage_cmp.size() == stage_diagram.size());\n+            // The missing chunks must be equal across main & staging (otherwise they couldn't have\n+            // been omitted).\n+            assert(missing_main_cmp == missing_stage_cmp);",
      "path": "src/test/fuzz/txgraph.cpp",
      "position": 420,
      "original_position": 146,
      "commit_id": "27a0c93abb7e70b93214eb857e2046f848139e68",
      "original_commit_id": "7248d26bd09a156b9b3d6cda20949e88b9354e6e",
      "in_reply_to_id": 2012233270,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I have added a more accurate approach, I think: the staging trim graph now keeps track of which transactions have been potentially modified since being copied from main. The final comparison checks that the sections of the diagram missing from both `GetMainStagingDiagrams` results includes at least all those that have definitely not been modified.",
      "created_at": "2025-03-28T14:26:12Z",
      "updated_at": "2025-03-28T14:35:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31444#discussion_r2018784874",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2018784874"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31444"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 902,
      "original_line": 902,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2018785993",
      "pull_request_review_id": 2725731979,
      "id": 2018785993,
      "node_id": "PRRC_kwDOABII5854VDrJ",
      "diff_hunk": "@@ -375,6 +434,7 @@ class TxGraphImpl final : public TxGraph\n     {\n         auto& entry = m_entries[idx];\n         Assume(entry.m_ref != nullptr);\n+        Assume(m_chunkindex_observers == 0 || !entry.m_locator[0].IsPresent());",
      "path": "src/txgraph.cpp",
      "position": null,
      "original_position": 134,
      "commit_id": "27a0c93abb7e70b93214eb857e2046f848139e68",
      "original_commit_id": "554888cbb6ffdd4bb7e97956b01fe1dc70d664a3",
      "in_reply_to_id": 2017115908,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "This is no longer needed now that `BlockBuilderImpl` no longer holds on to a vector of `Ref*`, I think.",
      "created_at": "2025-03-28T14:26:52Z",
      "updated_at": "2025-03-28T14:35:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31444#discussion_r2018785993",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2018785993"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31444"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 437,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2018792381",
      "pull_request_review_id": 2725731979,
      "id": 2018792381,
      "node_id": "PRRC_kwDOABII5854VFO9",
      "diff_hunk": "@@ -644,6 +647,14 @@ void Cluster::LevelDown(TxGraphImpl& graph) noexcept\n     Updated(graph);\n }\n \n+void Cluster::AppendChunkFeerates(std::vector<FeeFrac>& ret) const noexcept\n+{\n+    auto chunk_feerates = ChunkLinearization(m_depgraph, m_linearization);\n+    for (const auto& feerate : chunk_feerates) {\n+        ret.push_back(feerate);\n+    }\n+}",
      "path": "src/txgraph.cpp",
      "position": null,
      "original_position": 27,
      "commit_id": "27a0c93abb7e70b93214eb857e2046f848139e68",
      "original_commit_id": "22821d0bd5acb523b83ff4b961838d4ded840e6a",
      "in_reply_to_id": 1993472154,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done (a while ago, forgot to respond).",
      "created_at": "2025-03-28T14:30:31Z",
      "updated_at": "2025-03-28T14:35:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31444#discussion_r2018792381",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2018792381"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31444"
        }
      },
      "start_line": null,
      "original_start_line": 650,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 843,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2018792783",
      "pull_request_review_id": 2725731979,
      "id": 2018792783,
      "node_id": "PRRC_kwDOABII5854VFVP",
      "diff_hunk": "@@ -1854,6 +1865,33 @@ TxGraph::GraphIndex TxGraphImpl::CountDistinctClusters(std::span<const Ref* cons\n     return ret;\n }\n \n+std::pair<std::vector<FeeFrac>, std::vector<FeeFrac>> TxGraphImpl::GetMainStagingDiagrams() noexcept\n+{\n+    Assume(m_clustersets.size() >= 2);",
      "path": "src/txgraph.cpp",
      "position": null,
      "original_position": 38,
      "commit_id": "27a0c93abb7e70b93214eb857e2046f848139e68",
      "original_commit_id": "22821d0bd5acb523b83ff4b961838d4ded840e6a",
      "in_reply_to_id": 1993479930,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "This code is gone, but no, I did mean `>= 2` here (you cannot call GetMainStagingDiagrams unless you have at least 2 diagrams).",
      "created_at": "2025-03-28T14:30:44Z",
      "updated_at": "2025-03-28T14:35:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31444#discussion_r2018792783",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2018792783"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31444"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 1870,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2018797415",
      "pull_request_review_id": 2725731979,
      "id": 2018797415,
      "node_id": "PRRC_kwDOABII5854VGdn",
      "diff_hunk": "@@ -289,6 +290,8 @@ class TxGraphImpl final : public TxGraph\n \n     /** Index of ChunkData objects. */\n     ChunkIndex m_chunkindex;\n+    /** Number of index-observing objects in existence (BlockBuilderImpl). */\n+    size_t m_chunkindex_observers{0};",
      "path": "src/txgraph.cpp",
      "position": null,
      "original_position": 22,
      "commit_id": "27a0c93abb7e70b93214eb857e2046f848139e68",
      "original_commit_id": "bf7b901627ff1b34a85d09c1be557ea898df9b43",
      "in_reply_to_id": 2017036847,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I have moved the introduction of `m_chunkindex_observers` to its own commit.",
      "created_at": "2025-03-28T14:33:21Z",
      "updated_at": "2025-03-28T14:35:13Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31444#discussion_r2018797415",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2018797415"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31444"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 296,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2018825870",
      "pull_request_review_id": 2725655591,
      "id": 2018825870,
      "node_id": "PRRC_kwDOABII5854VNaO",
      "diff_hunk": "@@ -649,6 +714,50 @@ FUZZ_TARGET(txgraph)\n                 assert(FeeRateCompare(after_feerate, pos_feerate) <= 0);\n             }\n         }\n+\n+        // Check that the implied ordering gives rise to a combined diagram that matches the\n+        // diagram constructed from the individual cluster linearization chunkings.\n+        auto main_diagram = get_diagram_fn(true);\n+        auto expected_main_diagram = ChunkLinearization(sims[0].graph, vec1);\n+        assert(CompareChunks(main_diagram, expected_main_diagram) == 0);\n+\n+        if (sims.size() >= 2 && !sims[1].IsOversized()) {\n+            // When the staging graph is not oversized as well, call GetMainStagingDiagrams, and\n+            // fully verify the result.\n+            auto [main_cmp_diagram, stage_cmp_diagram] = real->GetMainStagingDiagrams();\n+            // Check that the feerates in each diagram are monotonically decreasing.\n+            for (size_t i = 1; i < main_cmp_diagram.size(); ++i) {\n+                assert(FeeRateCompare(main_cmp_diagram[i], main_cmp_diagram[i - 1]) <= 0);\n+            }\n+            for (size_t i = 1; i < stage_cmp_diagram.size(); ++i) {\n+                assert(FeeRateCompare(stage_cmp_diagram[i], stage_cmp_diagram[i - 1]) <= 0);\n+            }\n+            // Apply total ordering on the feerate diagrams to make them comparable (the exact\n+            // tie breaker among equal-feerate FeeFracs does not matter, but it has to be\n+            // consistent with the one used in main_diagram and stage_diagram).\n+            std::sort(main_cmp_diagram.begin(), main_cmp_diagram.end(), std::greater{});\n+            std::sort(stage_cmp_diagram.begin(), stage_cmp_diagram.end(), std::greater{});\n+            // Find the chunks that appear in main_diagram but are missing from main_cmp_diagram.\n+            // This is allowed, because GetMainStagingDiagrams omits clusters in main unaffected\n+            // by staging.\n+            std::vector<FeeFrac> missing_main_cmp;\n+            std::set_difference(main_diagram.begin(), main_diagram.end(),\n+                                main_cmp_diagram.begin(), main_cmp_diagram.end(),\n+                                std::inserter(missing_main_cmp, missing_main_cmp.end()),\n+                                std::greater{});\n+            assert(main_cmp_diagram.size() + missing_main_cmp.size() == main_diagram.size());\n+            // Do the same for chunks in stage_diagram missign from stage_cmp_diagram.\n+            auto stage_diagram = get_diagram_fn(false);\n+            std::vector<FeeFrac> missing_stage_cmp;\n+            std::set_difference(stage_diagram.begin(), stage_diagram.end(),\n+                                stage_cmp_diagram.begin(), stage_cmp_diagram.end(),\n+                                std::inserter(missing_stage_cmp, missing_stage_cmp.end()),\n+                                std::greater{});\n+            assert(stage_cmp_diagram.size() + missing_stage_cmp.size() == stage_diagram.size());\n+            // The missing chunks must be equal across main & staging (otherwise they couldn't have\n+            // been omitted).\n+            assert(missing_main_cmp == missing_stage_cmp);",
      "path": "src/test/fuzz/txgraph.cpp",
      "position": 420,
      "original_position": 146,
      "commit_id": "27a0c93abb7e70b93214eb857e2046f848139e68",
      "original_commit_id": "7248d26bd09a156b9b3d6cda20949e88b9354e6e",
      "in_reply_to_id": 2012233270,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "After a quick read this looks great! Simple and makes sense. Since the missing is equal on each side, the accounting only needs to be done on one side.\r\n\r\nI'm a bit confused still how this isn't true:\r\n```\r\nassert(missing_real.fee >= missing_expected.fee);\r\n```\r\n\r\nIt quickly fails, and I haven't dove into the examples. If we're conservatively counting the un-affected clusters, why would this fail?",
      "created_at": "2025-03-28T14:49:21Z",
      "updated_at": "2025-03-28T18:31:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31444#discussion_r2018825870",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2018825870"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31444"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 902,
      "original_line": 902,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2018829062",
      "pull_request_review_id": 2725655591,
      "id": 2018829062,
      "node_id": "PRRC_kwDOABII5854VOMG",
      "diff_hunk": "@@ -636,6 +714,59 @@ FUZZ_TARGET(txgraph)\n                 assert(FeeRateCompare(after_feerate, pos_feerate) <= 0);\n             }\n         }\n+\n+        // Check that the implied ordering gives rise to a combined diagram that matches the\n+        // diagram constructed from the individual cluster linearization chunkings.\n+        auto main_real_diagram = get_diagram_fn(/*main_only=*/true);\n+        auto main_implied_diagram = ChunkLinearization(sims[0].graph, vec1);\n+        assert(CompareChunks(main_real_diagram, main_implied_diagram) == 0);\n+\n+        if (sims.size() >= 2 && !sims[1].IsOversized()) {\n+            // When the staging graph is not oversized as well, call GetMainStagingDiagrams, and\n+            // fully verify the result.\n+            auto [main_cmp_diagram, stage_cmp_diagram] = real->GetMainStagingDiagrams();\n+            // Check that the feerates in each diagram are monotonically decreasing.\n+            for (size_t i = 1; i < main_cmp_diagram.size(); ++i) {\n+                assert(FeeRateCompare(main_cmp_diagram[i], main_cmp_diagram[i - 1]) <= 0);\n+            }\n+            for (size_t i = 1; i < stage_cmp_diagram.size(); ++i) {\n+                assert(FeeRateCompare(stage_cmp_diagram[i], stage_cmp_diagram[i - 1]) <= 0);\n+            }\n+            // Treat the diagrams as sets of chunk feerates, and sort them in the same way so that\n+            // std::set_difference can be used on them below. The exact ordering does not matter\n+            // here, but it has to be consistent with the one used in main_diagram and\n+            // stage_diagram).\n+            std::sort(main_cmp_diagram.begin(), main_cmp_diagram.end(), std::greater{});\n+            std::sort(stage_cmp_diagram.begin(), stage_cmp_diagram.end(), std::greater{});\n+            // Find the chunks that appear in main_diagram but are missing from main_cmp_diagram.\n+            // This is allowed, because GetMainStagingDiagrams omits clusters in main unaffected\n+            // by staging.\n+            std::vector<FeeFrac> missing_main_cmp;\n+            std::set_difference(main_real_diagram.begin(), main_real_diagram.end(),\n+                                main_cmp_diagram.begin(), main_cmp_diagram.end(),\n+                                std::inserter(missing_main_cmp, missing_main_cmp.end()),\n+                                std::greater{});\n+            assert(main_cmp_diagram.size() + missing_main_cmp.size() == main_real_diagram.size());\n+            // Do the same for chunks in stage_diagram missing from stage_cmp_diagram.\n+            auto stage_real_diagram = get_diagram_fn(false);\n+            std::vector<FeeFrac> missing_stage_cmp;\n+            std::set_difference(stage_real_diagram.begin(), stage_real_diagram.end(),\n+                                stage_cmp_diagram.begin(), stage_cmp_diagram.end(),\n+                                std::inserter(missing_stage_cmp, missing_stage_cmp.end()),\n+                                std::greater{});\n+            assert(stage_cmp_diagram.size() + missing_stage_cmp.size() == stage_real_diagram.size());\n+            // The missing chunks must be equal across main & staging (otherwise they couldn't have\n+            // been omitted).\n+            assert(missing_main_cmp == missing_stage_cmp);\n+            // The missing part must include at least all transactions in staging which have not been\n+            // modified, or been in a cluster together with modified transactions, since they were\n+            // copied from main. Note that due to the reordering of removals w.r.t. dependency\n+            // additions, it is possible that the real implementation found more unaffected things.\n+            FeeFrac missing_real;\n+            for (const auto& feerate : missing_main_cmp) missing_real += feerate;",
      "path": "src/test/fuzz/txgraph.cpp",
      "position": 427,
      "original_position": 218,
      "commit_id": "27a0c93abb7e70b93214eb857e2046f848139e68",
      "original_commit_id": "50f173e0b3182f6e84be41afc9a68d7943d47394",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "micro-nit: I know they're identical, but having the list being built via `stage_real_diagram` seems easier to digest what's being computed",
      "created_at": "2025-03-28T14:51:18Z",
      "updated_at": "2025-03-28T18:31:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31444#discussion_r2018829062",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2018829062"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31444"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 909,
      "original_line": 909,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2018886603",
      "pull_request_review_id": 2725655591,
      "id": 2018886603,
      "node_id": "PRRC_kwDOABII5854VcPL",
      "diff_hunk": "@@ -247,6 +247,49 @@ class TxGraphImpl final : public TxGraph\n     /** The staging ClusterSet, if any. */\n     std::optional<ClusterSet> m_staging_clusterset;\n \n+    /** Information about a chunk in the main graph. */\n+    struct ChunkData\n+    {\n+        /** The Entry which is the last transaction of the chunk. */\n+        mutable GraphIndex m_graph_index;\n+        /** How many transactions the chunk contains. */\n+        LinearizationIndex m_chunk_count;",
      "path": "src/txgraph.cpp",
      "position": 78,
      "original_position": 10,
      "commit_id": "27a0c93abb7e70b93214eb857e2046f848139e68",
      "original_commit_id": "1d500a50b698a638c840ca79504c2a9a421e8756",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "1d500a50b698a638c840ca79504c2a9a421e8756 stretch goal, have SanityCheck check m_chunk_count directly?",
      "created_at": "2025-03-28T15:26:22Z",
      "updated_at": "2025-03-28T18:31:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31444#discussion_r2018886603",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2018886603"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31444"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 267,
      "original_line": 267,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2018906562",
      "pull_request_review_id": 2725655591,
      "id": 2018906562,
      "node_id": "PRRC_kwDOABII5854VhHC",
      "diff_hunk": "@@ -303,6 +346,8 @@ class TxGraphImpl final : public TxGraph\n     {\n         /** Pointer to the corresponding Ref object if any, or nullptr if unlinked. */\n         Ref* m_ref{nullptr};\n+        /** Iterator to the corresponding ChunkData, if any. */",
      "path": "src/txgraph.cpp",
      "position": null,
      "original_position": 54,
      "commit_id": "27a0c93abb7e70b93214eb857e2046f848139e68",
      "original_commit_id": "1d500a50b698a638c840ca79504c2a9a421e8756",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: Could we note that this is initialized first in `AddTransaction`?",
      "created_at": "2025-03-28T15:39:37Z",
      "updated_at": "2025-03-28T18:31:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31444#discussion_r2018906562",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2018906562"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31444"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 349,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2018913351",
      "pull_request_review_id": 2725655591,
      "id": 2018913351,
      "node_id": "PRRC_kwDOABII5854VixH",
      "diff_hunk": "@@ -247,6 +247,49 @@ class TxGraphImpl final : public TxGraph\n     /** The staging ClusterSet, if any. */\n     std::optional<ClusterSet> m_staging_clusterset;\n \n+    /** Information about a chunk in the main graph. */\n+    struct ChunkData\n+    {\n+        /** The Entry which is the last transaction of the chunk. */\n+        mutable GraphIndex m_graph_index;\n+        /** How many transactions the chunk contains. */\n+        LinearizationIndex m_chunk_count;\n+\n+        ChunkData(GraphIndex graph_index, LinearizationIndex chunk_count) noexcept :\n+            m_graph_index{graph_index}, m_chunk_count{chunk_count} {}\n+    };\n+\n+    /** Comparator for ChunkData objects in mining order. */\n+    class ChunkOrder\n+    {\n+        const TxGraphImpl* const m_graph;\n+    public:\n+        explicit ChunkOrder(const TxGraphImpl* graph) : m_graph(graph) {}\n+\n+        bool operator()(const ChunkData& a, const ChunkData& b) const noexcept\n+        {\n+            const auto& a_entry = m_graph->m_entries[a.m_graph_index];\n+            const auto& b_entry = m_graph->m_entries[b.m_graph_index];\n+            // First sort from high feerate to low feerate.\n+            auto cmp_feerate = FeeRateCompare(a_entry.m_main_chunk_feerate, b_entry.m_main_chunk_feerate);\n+            if (cmp_feerate != 0) return cmp_feerate > 0;\n+            // Then sort by increasing Cluster pointer.\n+            Assume(a_entry.m_locator[0].IsPresent());\n+            Assume(b_entry.m_locator[0].IsPresent());\n+            if (a_entry.m_locator[0].cluster != b_entry.m_locator[0].cluster) {\n+                return std::less{}(a_entry.m_locator[0].cluster, b_entry.m_locator[0].cluster);\n+            }\n+            // Finally sort by position within the Cluster.\n+            return a_entry.m_main_lin_index < b_entry.m_main_lin_index;\n+        }\n+    };\n+\n+    /** Definition for the mining index type. */\n+    using ChunkIndex = std::set<ChunkData, ChunkOrder>;\n+\n+    /** Index of ChunkData objects. */\n+    ChunkIndex m_chunkindex;",
      "path": "src/txgraph.cpp",
      "position": null,
      "original_position": 45,
      "commit_id": "27a0c93abb7e70b93214eb857e2046f848139e68",
      "original_commit_id": "1d500a50b698a638c840ca79504c2a9a421e8756",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "maybe overkill but `m_main_chunkindex` since there's a lot of level==0 checks everywhere gating access/modification",
      "created_at": "2025-03-28T15:43:59Z",
      "updated_at": "2025-03-28T18:31:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31444#discussion_r2018913351",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2018913351"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31444"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 291,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2018933019",
      "pull_request_review_id": 2725655591,
      "id": 2018933019,
      "node_id": "PRRC_kwDOABII5854Vnkb",
      "diff_hunk": "@@ -524,17 +580,25 @@ void Cluster::Updated(TxGraphImpl& graph) noexcept\n         // Iterate over the chunks.\n         for (unsigned chunk_idx = 0; chunk_idx < chunking.NumChunksLeft(); ++chunk_idx) {\n             auto chunk = chunking.GetChunk(chunk_idx);\n-            Assume(chunk.transactions.Any());\n+            auto chunk_count = chunk.transactions.Count();",
      "path": "src/txgraph.cpp",
      "position": 280,
      "original_position": 98,
      "commit_id": "27a0c93abb7e70b93214eb857e2046f848139e68",
      "original_commit_id": "1d500a50b698a638c840ca79504c2a9a421e8756",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: const chunk_count",
      "created_at": "2025-03-28T15:56:23Z",
      "updated_at": "2025-03-28T18:31:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31444#discussion_r2018933019",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2018933019"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31444"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 674,
      "original_line": 674,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2018984013",
      "pull_request_review_id": 2725655591,
      "id": 2018984013,
      "node_id": "PRRC_kwDOABII5854V0BN",
      "diff_hunk": "@@ -148,7 +148,7 @@ class Cluster\n      *  union of their descendants to output. */\n     void GetDescendantRefs(const TxGraphImpl& graph, std::span<std::pair<Cluster*, DepGraphIndex>>& args, std::vector<TxGraph::Ref*>& output) noexcept;\n     /** Get a vector of Refs for all elements of this Cluster, in linearization order. */\n-    std::vector<TxGraph::Ref*> GetClusterRefs(const TxGraphImpl& graph) noexcept;\n+    void GetClusterRefs(TxGraphImpl& graph, std::span<TxGraph::Ref*> range, LinearizationIndex start_pos) noexcept;",
      "path": "src/txgraph.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "27a0c93abb7e70b93214eb857e2046f848139e68",
      "original_commit_id": "b130e185f54c7f762da6ef435882335e4f0b98ff",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "b130e185f54c7f762da6ef435882335e4f0b98ff\r\n\r\nCould the documentation get beefed up a bit for this? What the shape that range should look like, etc. Was only clear later when seeing usages.",
      "created_at": "2025-03-28T16:28:31Z",
      "updated_at": "2025-03-28T18:31:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31444#discussion_r2018984013",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2018984013"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31444"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 151,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2019028001",
      "pull_request_review_id": 2725655591,
      "id": 2019028001,
      "node_id": "PRRC_kwDOABII5854V-wh",
      "diff_hunk": "@@ -167,6 +169,28 @@ class TxGraph\n      *  so CompareChunks is usable without type-conversion. */\n     virtual std::pair<std::vector<FeeFrac>, std::vector<FeeFrac>> GetMainStagingDiagrams() noexcept = 0;\n \n+    /** Interface returned by GetBlockBuilder. */\n+    class BlockBuilder\n+    {\n+    protected:\n+        /** Make constructor non-public (use TxGraph::GetBlockBuilder()). */\n+        BlockBuilder() noexcept = default;\n+    public:\n+        /** Support safe inheritance. */\n+        virtual ~BlockBuilder() = default;\n+        /** Get the chunk that is currently suggested to be included, plus its feerate, if any. */\n+        virtual std::optional<std::pair<std::vector<Ref*>, FeePerWeight>> GetCurrentChunk() noexcept = 0;\n+        /** Mark the current chunk as included, and progress to the next one. */\n+        virtual void Include() noexcept = 0;\n+        /** Mark the current chunk as skipped, and progress to the next one. Further chunks from\n+         *  the same cluster as the current one will not be reported anymore. */\n+        virtual void Skip() noexcept = 0;\n+    };\n+\n+    /** Construct a block builder, drawing chunks in order, from the main graph, which cannot be\n+     *  oversized. While the returned object exists, no mutators on the main graph are allowed. */",
      "path": "src/txgraph.h",
      "position": null,
      "original_position": 36,
      "commit_id": "27a0c93abb7e70b93214eb857e2046f848139e68",
      "original_commit_id": "545812c3a32717d895710cf266ed30325f888246",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Should we make sure that the builder outlives the graph? Currently it's allowed, or at least doesn't fail if destructors are swapped in the fuzz target.",
      "created_at": "2025-03-28T16:57:55Z",
      "updated_at": "2025-03-28T18:31:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31444#discussion_r2019028001",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2019028001"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31444"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 191,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2019037611",
      "pull_request_review_id": 2725655591,
      "id": 2019037611,
      "node_id": "PRRC_kwDOABII5854WBGr",
      "diff_hunk": "@@ -715,6 +798,27 @@ FUZZ_TARGET(txgraph)\n             }\n         }\n \n+        // The same order should be obtained through a BlockBuilder, if nothing is skipped.",
      "path": "src/test/fuzz/txgraph.cpp",
      "position": null,
      "original_position": 162,
      "commit_id": "27a0c93abb7e70b93214eb857e2046f848139e68",
      "original_commit_id": "545812c3a32717d895710cf266ed30325f888246",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "```Suggestion\r\n        // The same order should be obtained through a BlockBuilder as implied by CompareMainOrder, if nothing is skipped.\r\n```",
      "created_at": "2025-03-28T17:05:05Z",
      "updated_at": "2025-03-28T18:31:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31444#discussion_r2019037611",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2019037611"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31444"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 801,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2019040161",
      "pull_request_review_id": 2725655591,
      "id": 2019040161,
      "node_id": "PRRC_kwDOABII5854WBuh",
      "diff_hunk": "@@ -531,6 +534,35 @@ const TxGraphImpl::ClusterSet& TxGraphImpl::GetClusterSet(int level) const noexc\n     return *m_staging_clusterset;\n }\n \n+/** Implementation of the TxGraph::BlockBuilder interface. */\n+class BlockBuilderImpl final : public TxGraph::BlockBuilder\n+{\n+    /** Which TxGraphImpl this object is doing block building for. It will have its\n+     *  m_chunkindex_observers incremented as long as this BlockBuilderImpl exists. */\n+    TxGraphImpl* const m_graph;\n+    /** Clusters which we're not including further transactions from. */\n+    std::set<Cluster*> m_excluded_clusters;\n+    /** Iterator to the current chunk (after the current one) in the chunk index. end() if nothing",
      "path": "src/txgraph.cpp",
      "position": 195,
      "original_position": 38,
      "commit_id": "27a0c93abb7e70b93214eb857e2046f848139e68",
      "original_commit_id": "545812c3a32717d895710cf266ed30325f888246",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "```Suggestion\r\n    /** Iterator to the current chunk (after the current one) in the chunk index. m_chunkindex.end() if nothing\r\n```",
      "created_at": "2025-03-28T17:07:09Z",
      "updated_at": "2025-03-28T18:31:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31444#discussion_r2019040161",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2019040161"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31444"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 575,
      "original_line": 575,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2019046931",
      "pull_request_review_id": 2725655591,
      "id": 2019046931,
      "node_id": "PRRC_kwDOABII5854WDYT",
      "diff_hunk": "@@ -167,6 +169,28 @@ class TxGraph\n      *  so CompareChunks is usable without type-conversion. */\n     virtual std::pair<std::vector<FeeFrac>, std::vector<FeeFrac>> GetMainStagingDiagrams() noexcept = 0;\n \n+    /** Interface returned by GetBlockBuilder. */\n+    class BlockBuilder\n+    {\n+    protected:\n+        /** Make constructor non-public (use TxGraph::GetBlockBuilder()). */\n+        BlockBuilder() noexcept = default;\n+    public:\n+        /** Support safe inheritance. */\n+        virtual ~BlockBuilder() = default;\n+        /** Get the chunk that is currently suggested to be included, plus its feerate, if any. */\n+        virtual std::optional<std::pair<std::vector<Ref*>, FeePerWeight>> GetCurrentChunk() noexcept = 0;\n+        /** Mark the current chunk as included, and progress to the next one. */\n+        virtual void Include() noexcept = 0;\n+        /** Mark the current chunk as skipped, and progress to the next one. Further chunks from\n+         *  the same cluster as the current one will not be reported anymore. */",
      "path": "src/txgraph.h",
      "position": 37,
      "original_position": 31,
      "commit_id": "27a0c93abb7e70b93214eb857e2046f848139e68",
      "original_commit_id": "545812c3a32717d895710cf266ed30325f888246",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Note that this only should be called if `GetCurrentChunk()` would return something non-nullopt",
      "created_at": "2025-03-28T17:12:32Z",
      "updated_at": "2025-03-28T18:31:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31444#discussion_r2019046931",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2019046931"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31444"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 187,
      "original_line": 187,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2019048020",
      "pull_request_review_id": 2725655591,
      "id": 2019048020,
      "node_id": "PRRC_kwDOABII5854WDpU",
      "diff_hunk": "@@ -167,6 +169,28 @@ class TxGraph\n      *  so CompareChunks is usable without type-conversion. */\n     virtual std::pair<std::vector<FeeFrac>, std::vector<FeeFrac>> GetMainStagingDiagrams() noexcept = 0;\n \n+    /** Interface returned by GetBlockBuilder. */\n+    class BlockBuilder\n+    {\n+    protected:\n+        /** Make constructor non-public (use TxGraph::GetBlockBuilder()). */\n+        BlockBuilder() noexcept = default;\n+    public:\n+        /** Support safe inheritance. */\n+        virtual ~BlockBuilder() = default;\n+        /** Get the chunk that is currently suggested to be included, plus its feerate, if any. */\n+        virtual std::optional<std::pair<std::vector<Ref*>, FeePerWeight>> GetCurrentChunk() noexcept = 0;\n+        /** Mark the current chunk as included, and progress to the next one. */",
      "path": "src/txgraph.h",
      "position": 34,
      "original_position": 28,
      "commit_id": "27a0c93abb7e70b93214eb857e2046f848139e68",
      "original_commit_id": "545812c3a32717d895710cf266ed30325f888246",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Note that this only should be called if `GetCurrentChunk()` would return something non-nullopt",
      "created_at": "2025-03-28T17:13:22Z",
      "updated_at": "2025-03-28T18:31:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31444#discussion_r2019048020",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2019048020"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31444"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 184,
      "original_line": 184,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2019056039",
      "pull_request_review_id": 2725655591,
      "id": 2019056039,
      "node_id": "PRRC_kwDOABII5854WFmn",
      "diff_hunk": "@@ -190,6 +190,11 @@ class TxGraph\n     /** Construct a block builder, drawing chunks in order, from the main graph, which cannot be\n      *  oversized. While the returned object exists, no mutators on the main graph are allowed. */\n     virtual std::unique_ptr<BlockBuilder> GetBlockBuilder() noexcept = 0;\n+    /** Get the last chunk in the main graph, i.e., the last chunk that would be returned by a\n+     *  BlockBuilder created now, together with its feerate. The chunk is returned in\n+     *  reverse-topological order, so every element is preceded by all its descendants. The main\n+     *  graph must not be oversized. If the graph is empty, {} is returned. */",
      "path": "src/txgraph.h",
      "position": null,
      "original_position": 7,
      "commit_id": "27a0c93abb7e70b93214eb857e2046f848139e68",
      "original_commit_id": "d8483d8290692d6708b046034e2ebb9977588782",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "a {} and empty FeePerWeight pair?",
      "created_at": "2025-03-28T17:19:21Z",
      "updated_at": "2025-03-28T18:31:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31444#discussion_r2019056039",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2019056039"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31444"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 196,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2019056596",
      "pull_request_review_id": 2725655591,
      "id": 2019056596,
      "node_id": "PRRC_kwDOABII5854WFvU",
      "diff_hunk": "@@ -744,6 +744,31 @@ FUZZ_TARGET(txgraph)\n                     builder_data.done = new_done;\n                 }\n                 break;\n+            } else if (!main_sim.IsOversized() && command-- == 0) {\n+                // GetWorstMainChunk.\n+                auto [worst_chunk, worst_chunk_feerate] = real->GetWorstMainChunk();\n+                // Just do some sanity checks here. Consistency with GetBlockBuilder is checked\n+                // below.\n+                if (main_sim.GetTransactionCount() == 0) {\n+                    assert(worst_chunk.empty());",
      "path": "src/test/fuzz/txgraph.cpp",
      "position": 318,
      "original_position": 10,
      "commit_id": "27a0c93abb7e70b93214eb857e2046f848139e68",
      "original_commit_id": "d8483d8290692d6708b046034e2ebb9977588782",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "check `worst_chunk_feerate` too?",
      "created_at": "2025-03-28T17:19:49Z",
      "updated_at": "2025-03-28T18:31:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31444#discussion_r2019056596",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2019056596"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31444"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 754,
      "original_line": 754,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2019073719",
      "pull_request_review_id": 2725655591,
      "id": 2019073719,
      "node_id": "PRRC_kwDOABII5854WJ63",
      "diff_hunk": "@@ -815,10 +842,18 @@ FUZZ_TARGET(txgraph)\n                 vec_builder.push_back(simpos);\n             }\n             assert(sum == chunk->second);\n+            last_chunk = std::move(chunk->first);\n+            last_chunk_feerate = chunk->second;\n             builder->Include();\n         }\n         assert(vec_builder == vec1);\n \n+        // The last chunk returned by the BlockBuilder must match GetWorstMainChunk, in reverse.",
      "path": "src/test/fuzz/txgraph.cpp",
      "position": 372,
      "original_position": 51,
      "commit_id": "27a0c93abb7e70b93214eb857e2046f848139e68",
      "original_commit_id": "d8483d8290692d6708b046034e2ebb9977588782",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Love to see it",
      "created_at": "2025-03-28T17:32:27Z",
      "updated_at": "2025-03-28T18:31:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31444#discussion_r2019073719",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2019073719"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31444"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 854,
      "original_line": 854,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2019104328",
      "pull_request_review_id": 2725655591,
      "id": 2019104328,
      "node_id": "PRRC_kwDOABII5854WRZI",
      "diff_hunk": "@@ -148,8 +148,9 @@ class Cluster\n     /** Process elements from the front of args that apply to this cluster, and append Refs for the\n      *  union of their descendants to output. */\n     void GetDescendantRefs(const TxGraphImpl& graph, std::span<std::pair<Cluster*, DepGraphIndex>>& args, std::vector<TxGraph::Ref*>& output) noexcept;\n-    /** Get a vector of Refs for all elements of this Cluster, in linearization order. */\n-    void GetClusterRefs(TxGraphImpl& graph, std::span<TxGraph::Ref*> range, LinearizationIndex start_pos) noexcept;\n+    /** Get a vector of Refs for all elements of this Cluster, in linearization order. Returns\n+     *  the range ends at the end of the cluster. */",
      "path": "src/txgraph.cpp",
      "position": null,
      "original_position": 7,
      "commit_id": "27a0c93abb7e70b93214eb857e2046f848139e68",
      "original_commit_id": "a0e19959e85b2ce1a90902ab1e3fe274f9d63a1d",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "```Suggestion\r\n    * true if the range ends at the end of the cluster. */\r\n```",
      "created_at": "2025-03-28T17:55:58Z",
      "updated_at": "2025-03-28T18:31:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31444#discussion_r2019104328",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2019104328"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31444"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 152,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2019118491",
      "pull_request_review_id": 2725655591,
      "id": 2019118491,
      "node_id": "PRRC_kwDOABII5854WU2b",
      "diff_hunk": "@@ -1675,6 +1677,8 @@ void Cluster::GetClusterRefs(TxGraphImpl& graph, std::span<TxGraph::Ref*> range,\n         Assume(entry.m_ref != nullptr);\n         ref = entry.m_ref;\n     }\n+    // Return whether this was the end of the Cluster.\n+    return start_pos == m_linearization.size();",
      "path": "src/txgraph.cpp",
      "position": 647,
      "original_position": 36,
      "commit_id": "27a0c93abb7e70b93214eb857e2046f848139e68",
      "original_commit_id": "a0e19959e85b2ce1a90902ab1e3fe274f9d63a1d",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "nit: fwiw forgot start_pos was actually end_pos by this point, maybe this function should have cur_pos?",
      "created_at": "2025-03-28T18:07:00Z",
      "updated_at": "2025-03-28T18:31:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31444#discussion_r2019118491",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2019118491"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31444"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1704,
      "original_line": 1704,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2019132820",
      "pull_request_review_id": 2725655591,
      "id": 2019132820,
      "node_id": "PRRC_kwDOABII5854WYWU",
      "diff_hunk": "@@ -148,8 +148,9 @@ class Cluster\n     /** Process elements from the front of args that apply to this cluster, and append Refs for the\n      *  union of their descendants to output. */\n     void GetDescendantRefs(const TxGraphImpl& graph, std::span<std::pair<Cluster*, DepGraphIndex>>& args, std::vector<TxGraph::Ref*>& output) noexcept;\n-    /** Get a vector of Refs for all elements of this Cluster, in linearization order. */\n-    void GetClusterRefs(TxGraphImpl& graph, std::span<TxGraph::Ref*> range, LinearizationIndex start_pos) noexcept;\n+    /** Get a vector of Refs for all elements of this Cluster, in linearization order. Returns",
      "path": "src/txgraph.cpp",
      "position": null,
      "original_position": 6,
      "commit_id": "27a0c93abb7e70b93214eb857e2046f848139e68",
      "original_commit_id": "a0e19959e85b2ce1a90902ab1e3fe274f9d63a1d",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: commit message for a0e19959e85b2ce1a90902ab1e3fe274f9d63a1d\r\n\r\nMight just stress that this makes `m_excluded_cluster` a lot smaller since this takes the size from O(number cluster) to O(number non-singleton clusters).",
      "created_at": "2025-03-28T18:18:03Z",
      "updated_at": "2025-03-28T18:31:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31444#discussion_r2019132820",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2019132820"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31444"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 151,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2019140250",
      "pull_request_review_id": 2725655591,
      "id": 2019140250,
      "node_id": "PRRC_kwDOABII5854WaKa",
      "diff_hunk": "@@ -2322,13 +2328,22 @@ std::optional<std::pair<std::vector<TxGraph::Ref*>, FeePerWeight>> BlockBuilderI\n         const auto& chunk_data = *m_cur_iter;\n         const auto& chunk_end_entry = m_graph->m_entries[chunk_data.m_graph_index];\n         auto cluster = chunk_end_entry.m_locator[0].cluster;\n-        ret->first.resize(chunk_data.m_chunk_count);\n-        auto start_pos = chunk_end_entry.m_main_lin_index + 1 - chunk_data.m_chunk_count;\n-        bool is_end = cluster->GetClusterRefs(*m_graph, ret->first, start_pos);\n-        if (is_end) {\n+        if (chunk_data.m_chunk_count == LinearizationIndex(-1)) {\n+            // Special case in case just a single transaction remains, avoiding the need to\n+            // dispatch to and dereference Cluster.\n+            ret->first.resize(1);\n+            Assume(chunk_end_entry.m_ref != nullptr);\n+            ret->first[0] = chunk_end_entry.m_ref;\n             m_cur_cluster = nullptr;\n         } else {\n-            Assume(cluster == m_cur_cluster);\n+            ret->first.resize(chunk_data.m_chunk_count);\n+            auto start_pos = chunk_end_entry.m_main_lin_index + 1 - chunk_data.m_chunk_count;\n+            bool is_end = cluster->GetClusterRefs(*m_graph, ret->first, start_pos);\n+            if (is_end) {\n+                m_cur_cluster = nullptr;",
      "path": "src/txgraph.cpp",
      "position": 882,
      "original_position": 43,
      "commit_id": "27a0c93abb7e70b93214eb857e2046f848139e68",
      "original_commit_id": "0630995fee22990402771547be1480b8706c76ce",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "could `Assume()` here that `chunk_data.m_chunk_count > 1`, since it would have been given the special value otherwise?",
      "created_at": "2025-03-28T18:23:54Z",
      "updated_at": "2025-03-28T18:31:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31444#discussion_r2019140250",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2019140250"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31444"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2379,
      "original_line": 2379,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2019170353",
      "pull_request_review_id": 2726414087,
      "id": 2019170353,
      "node_id": "PRRC_kwDOABII5854Whgx",
      "diff_hunk": "@@ -279,6 +290,39 @@ FUZZ_TARGET(txgraph)\n         return &empty_ref;\n     };\n \n+    /** Function to construct the correct fee-size diagram a real graph has based on its graph\n+     *  order (as reported by GetCluster(), so it works for both main and staging). */\n+    auto get_diagram_fn = [&](bool main_only) -> std::vector<FeeFrac> {\n+        int level = main_only ? 0 : sims.size() - 1;\n+        auto& sim = sims[level];\n+        // For every transaction in the graph, request its cluster, and throw them into a set.\n+        std::set<std::vector<TxGraph::Ref*>> clusters;\n+        for (auto i : sim.graph.Positions()) {\n+            auto ref = sim.GetRef(i);\n+            clusters.insert(real->GetCluster(*ref, main_only));\n+        }\n+        // Compute the chunkings of each (deduplicated) cluster.\n+        size_t num_tx{0};\n+        std::vector<FeeFrac> ret;\n+        for (const auto& cluster : clusters) {\n+            num_tx += cluster.size();\n+            std::vector<SimTxGraph::Pos> linearization;\n+            linearization.reserve(cluster.size());\n+            for (auto refptr : cluster) linearization.push_back(sim.Find(refptr));\n+            for (const FeeFrac& chunk_feerate : ChunkLinearization(sim.graph, linearization)) {\n+                ret.push_back(chunk_feerate);\n+            }\n+        }\n+        // Verify the number of transactions after deduplicating clusters. This implicitly verifies\n+        // that GetCluster on each element of a cluster reports the cluster transactions in the same\n+        // order.\n+        assert(num_tx == sim.GetTransactionCount());\n+        // Sort by feerate (we don't care about respecting ordering within clusters, as these are",
      "path": "src/test/fuzz/txgraph.cpp",
      "position": null,
      "original_position": 56,
      "commit_id": "27a0c93abb7e70b93214eb857e2046f848139e68",
      "original_commit_id": "f4c8848c7ca87a463d4d0841d354a59f64c2d20c",
      "in_reply_to_id": 2018744853,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "As far as diagram is concerned (incl. for `FeeRateCompare`), the order of equal-feerate element is irrelevant, as they just represent different sections of an overall line segment with a fixed slope. As far as `FeeRateCompare` is concerned, they could even be merged into a single line segment with the combined fee and size.",
      "created_at": "2025-03-28T18:48:23Z",
      "updated_at": "2025-03-28T18:48:24Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31444#discussion_r2019170353",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2019170353"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31444"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 351,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2019171810",
      "pull_request_review_id": 2726416394,
      "id": 2019171810,
      "node_id": "PRRC_kwDOABII5854Wh3i",
      "diff_hunk": "@@ -649,6 +714,50 @@ FUZZ_TARGET(txgraph)\n                 assert(FeeRateCompare(after_feerate, pos_feerate) <= 0);\n             }\n         }\n+\n+        // Check that the implied ordering gives rise to a combined diagram that matches the\n+        // diagram constructed from the individual cluster linearization chunkings.\n+        auto main_diagram = get_diagram_fn(true);\n+        auto expected_main_diagram = ChunkLinearization(sims[0].graph, vec1);\n+        assert(CompareChunks(main_diagram, expected_main_diagram) == 0);\n+\n+        if (sims.size() >= 2 && !sims[1].IsOversized()) {\n+            // When the staging graph is not oversized as well, call GetMainStagingDiagrams, and\n+            // fully verify the result.\n+            auto [main_cmp_diagram, stage_cmp_diagram] = real->GetMainStagingDiagrams();\n+            // Check that the feerates in each diagram are monotonically decreasing.\n+            for (size_t i = 1; i < main_cmp_diagram.size(); ++i) {\n+                assert(FeeRateCompare(main_cmp_diagram[i], main_cmp_diagram[i - 1]) <= 0);\n+            }\n+            for (size_t i = 1; i < stage_cmp_diagram.size(); ++i) {\n+                assert(FeeRateCompare(stage_cmp_diagram[i], stage_cmp_diagram[i - 1]) <= 0);\n+            }\n+            // Apply total ordering on the feerate diagrams to make them comparable (the exact\n+            // tie breaker among equal-feerate FeeFracs does not matter, but it has to be\n+            // consistent with the one used in main_diagram and stage_diagram).\n+            std::sort(main_cmp_diagram.begin(), main_cmp_diagram.end(), std::greater{});\n+            std::sort(stage_cmp_diagram.begin(), stage_cmp_diagram.end(), std::greater{});\n+            // Find the chunks that appear in main_diagram but are missing from main_cmp_diagram.\n+            // This is allowed, because GetMainStagingDiagrams omits clusters in main unaffected\n+            // by staging.\n+            std::vector<FeeFrac> missing_main_cmp;\n+            std::set_difference(main_diagram.begin(), main_diagram.end(),\n+                                main_cmp_diagram.begin(), main_cmp_diagram.end(),\n+                                std::inserter(missing_main_cmp, missing_main_cmp.end()),\n+                                std::greater{});\n+            assert(main_cmp_diagram.size() + missing_main_cmp.size() == main_diagram.size());\n+            // Do the same for chunks in stage_diagram missign from stage_cmp_diagram.\n+            auto stage_diagram = get_diagram_fn(false);\n+            std::vector<FeeFrac> missing_stage_cmp;\n+            std::set_difference(stage_diagram.begin(), stage_diagram.end(),\n+                                stage_cmp_diagram.begin(), stage_cmp_diagram.end(),\n+                                std::inserter(missing_stage_cmp, missing_stage_cmp.end()),\n+                                std::greater{});\n+            assert(stage_cmp_diagram.size() + missing_stage_cmp.size() == stage_diagram.size());\n+            // The missing chunks must be equal across main & staging (otherwise they couldn't have\n+            // been omitted).\n+            assert(missing_main_cmp == missing_stage_cmp);",
      "path": "src/test/fuzz/txgraph.cpp",
      "position": 420,
      "original_position": 146,
      "commit_id": "27a0c93abb7e70b93214eb857e2046f848139e68",
      "original_commit_id": "7248d26bd09a156b9b3d6cda20949e88b9354e6e",
      "in_reply_to_id": 2012233270,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Because fees can be negative in the fuzz test. If they were all non-negative, then I think this suggested assertion should hold.",
      "created_at": "2025-03-28T18:49:35Z",
      "updated_at": "2025-03-28T18:49:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31444#discussion_r2019171810",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2019171810"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31444"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 902,
      "original_line": 902,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2019173335",
      "pull_request_review_id": 2726419211,
      "id": 2019173335,
      "node_id": "PRRC_kwDOABII5854WiPX",
      "diff_hunk": "@@ -649,6 +714,50 @@ FUZZ_TARGET(txgraph)\n                 assert(FeeRateCompare(after_feerate, pos_feerate) <= 0);\n             }\n         }\n+\n+        // Check that the implied ordering gives rise to a combined diagram that matches the\n+        // diagram constructed from the individual cluster linearization chunkings.\n+        auto main_diagram = get_diagram_fn(true);\n+        auto expected_main_diagram = ChunkLinearization(sims[0].graph, vec1);\n+        assert(CompareChunks(main_diagram, expected_main_diagram) == 0);\n+\n+        if (sims.size() >= 2 && !sims[1].IsOversized()) {\n+            // When the staging graph is not oversized as well, call GetMainStagingDiagrams, and\n+            // fully verify the result.\n+            auto [main_cmp_diagram, stage_cmp_diagram] = real->GetMainStagingDiagrams();\n+            // Check that the feerates in each diagram are monotonically decreasing.\n+            for (size_t i = 1; i < main_cmp_diagram.size(); ++i) {\n+                assert(FeeRateCompare(main_cmp_diagram[i], main_cmp_diagram[i - 1]) <= 0);\n+            }\n+            for (size_t i = 1; i < stage_cmp_diagram.size(); ++i) {\n+                assert(FeeRateCompare(stage_cmp_diagram[i], stage_cmp_diagram[i - 1]) <= 0);\n+            }\n+            // Apply total ordering on the feerate diagrams to make them comparable (the exact\n+            // tie breaker among equal-feerate FeeFracs does not matter, but it has to be\n+            // consistent with the one used in main_diagram and stage_diagram).\n+            std::sort(main_cmp_diagram.begin(), main_cmp_diagram.end(), std::greater{});\n+            std::sort(stage_cmp_diagram.begin(), stage_cmp_diagram.end(), std::greater{});\n+            // Find the chunks that appear in main_diagram but are missing from main_cmp_diagram.\n+            // This is allowed, because GetMainStagingDiagrams omits clusters in main unaffected\n+            // by staging.\n+            std::vector<FeeFrac> missing_main_cmp;\n+            std::set_difference(main_diagram.begin(), main_diagram.end(),\n+                                main_cmp_diagram.begin(), main_cmp_diagram.end(),\n+                                std::inserter(missing_main_cmp, missing_main_cmp.end()),\n+                                std::greater{});\n+            assert(main_cmp_diagram.size() + missing_main_cmp.size() == main_diagram.size());\n+            // Do the same for chunks in stage_diagram missign from stage_cmp_diagram.\n+            auto stage_diagram = get_diagram_fn(false);\n+            std::vector<FeeFrac> missing_stage_cmp;\n+            std::set_difference(stage_diagram.begin(), stage_diagram.end(),\n+                                stage_cmp_diagram.begin(), stage_cmp_diagram.end(),\n+                                std::inserter(missing_stage_cmp, missing_stage_cmp.end()),\n+                                std::greater{});\n+            assert(stage_cmp_diagram.size() + missing_stage_cmp.size() == stage_diagram.size());\n+            // The missing chunks must be equal across main & staging (otherwise they couldn't have\n+            // been omitted).\n+            assert(missing_main_cmp == missing_stage_cmp);",
      "path": "src/test/fuzz/txgraph.cpp",
      "position": 420,
      "original_position": 146,
      "commit_id": "27a0c93abb7e70b93214eb857e2046f848139e68",
      "original_commit_id": "7248d26bd09a156b9b3d6cda20949e88b9354e6e",
      "in_reply_to_id": 2012233270,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "ah! please leave a note as to that, I always forget that's possible",
      "created_at": "2025-03-28T18:50:36Z",
      "updated_at": "2025-03-28T18:50:37Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31444#discussion_r2019173335",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2019173335"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31444"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 902,
      "original_line": 902,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2019177841",
      "pull_request_review_id": 2726427359,
      "id": 2019177841,
      "node_id": "PRRC_kwDOABII5854WjVx",
      "diff_hunk": "@@ -279,6 +290,39 @@ FUZZ_TARGET(txgraph)\n         return &empty_ref;\n     };\n \n+    /** Function to construct the correct fee-size diagram a real graph has based on its graph\n+     *  order (as reported by GetCluster(), so it works for both main and staging). */\n+    auto get_diagram_fn = [&](bool main_only) -> std::vector<FeeFrac> {\n+        int level = main_only ? 0 : sims.size() - 1;\n+        auto& sim = sims[level];\n+        // For every transaction in the graph, request its cluster, and throw them into a set.\n+        std::set<std::vector<TxGraph::Ref*>> clusters;\n+        for (auto i : sim.graph.Positions()) {\n+            auto ref = sim.GetRef(i);\n+            clusters.insert(real->GetCluster(*ref, main_only));\n+        }\n+        // Compute the chunkings of each (deduplicated) cluster.\n+        size_t num_tx{0};\n+        std::vector<FeeFrac> ret;\n+        for (const auto& cluster : clusters) {\n+            num_tx += cluster.size();\n+            std::vector<SimTxGraph::Pos> linearization;\n+            linearization.reserve(cluster.size());\n+            for (auto refptr : cluster) linearization.push_back(sim.Find(refptr));\n+            for (const FeeFrac& chunk_feerate : ChunkLinearization(sim.graph, linearization)) {\n+                ret.push_back(chunk_feerate);\n+            }\n+        }\n+        // Verify the number of transactions after deduplicating clusters. This implicitly verifies\n+        // that GetCluster on each element of a cluster reports the cluster transactions in the same\n+        // order.\n+        assert(num_tx == sim.GetTransactionCount());\n+        // Sort by feerate (we don't care about respecting ordering within clusters, as these are",
      "path": "src/test/fuzz/txgraph.cpp",
      "position": null,
      "original_position": 56,
      "commit_id": "27a0c93abb7e70b93214eb857e2046f848139e68",
      "original_commit_id": "f4c8848c7ca87a463d4d0841d354a59f64c2d20c",
      "in_reply_to_id": 2018744853,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Oh, I misread this, but I'm still having trouble understanding what is intended. \"Sort by feerate\" ... \"as these are just feerates\".",
      "created_at": "2025-03-28T18:54:47Z",
      "updated_at": "2025-03-28T18:54:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31444#discussion_r2019177841",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2019177841"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31444"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 351,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2019183993",
      "pull_request_review_id": 2726438249,
      "id": 2019183993,
      "node_id": "PRRC_kwDOABII5854Wk15",
      "diff_hunk": "@@ -279,6 +290,39 @@ FUZZ_TARGET(txgraph)\n         return &empty_ref;\n     };\n \n+    /** Function to construct the correct fee-size diagram a real graph has based on its graph\n+     *  order (as reported by GetCluster(), so it works for both main and staging). */\n+    auto get_diagram_fn = [&](bool main_only) -> std::vector<FeeFrac> {\n+        int level = main_only ? 0 : sims.size() - 1;\n+        auto& sim = sims[level];\n+        // For every transaction in the graph, request its cluster, and throw them into a set.\n+        std::set<std::vector<TxGraph::Ref*>> clusters;\n+        for (auto i : sim.graph.Positions()) {\n+            auto ref = sim.GetRef(i);\n+            clusters.insert(real->GetCluster(*ref, main_only));\n+        }\n+        // Compute the chunkings of each (deduplicated) cluster.\n+        size_t num_tx{0};\n+        std::vector<FeeFrac> ret;\n+        for (const auto& cluster : clusters) {\n+            num_tx += cluster.size();\n+            std::vector<SimTxGraph::Pos> linearization;\n+            linearization.reserve(cluster.size());\n+            for (auto refptr : cluster) linearization.push_back(sim.Find(refptr));\n+            for (const FeeFrac& chunk_feerate : ChunkLinearization(sim.graph, linearization)) {\n+                ret.push_back(chunk_feerate);\n+            }\n+        }\n+        // Verify the number of transactions after deduplicating clusters. This implicitly verifies\n+        // that GetCluster on each element of a cluster reports the cluster transactions in the same\n+        // order.\n+        assert(num_tx == sim.GetTransactionCount());\n+        // Sort by feerate (we don't care about respecting ordering within clusters, as these are",
      "path": "src/test/fuzz/txgraph.cpp",
      "position": null,
      "original_position": 56,
      "commit_id": "27a0c93abb7e70b93214eb857e2046f848139e68",
      "original_commit_id": "f4c8848c7ca87a463d4d0841d354a59f64c2d20c",
      "in_reply_to_id": 2018744853,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Maybe I'm making things more confusing by mentioning it at all?\r\n\r\nMy thinking is this: in general, to construct the full-graph chunk ordering, you *cannot* just sort by feerate, because you may sort two equal-feerate chunks within the same cluster incorrectly w.r.t. each other, breaking topology. However, here we are just construct a diagram, and don't care about what chunks they correspond to, so as far as the feerates of line segments in the diagram is concerned, we can just ignore this problem.",
      "created_at": "2025-03-28T18:59:41Z",
      "updated_at": "2025-03-28T18:59:41Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31444#discussion_r2019183993",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2019183993"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31444"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 351,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2019188834",
      "pull_request_review_id": 2726446247,
      "id": 2019188834,
      "node_id": "PRRC_kwDOABII5854WmBi",
      "diff_hunk": "@@ -636,6 +714,59 @@ FUZZ_TARGET(txgraph)\n                 assert(FeeRateCompare(after_feerate, pos_feerate) <= 0);\n             }\n         }\n+\n+        // Check that the implied ordering gives rise to a combined diagram that matches the\n+        // diagram constructed from the individual cluster linearization chunkings.\n+        auto main_real_diagram = get_diagram_fn(/*main_only=*/true);\n+        auto main_implied_diagram = ChunkLinearization(sims[0].graph, vec1);\n+        assert(CompareChunks(main_real_diagram, main_implied_diagram) == 0);\n+\n+        if (sims.size() >= 2 && !sims[1].IsOversized()) {\n+            // When the staging graph is not oversized as well, call GetMainStagingDiagrams, and\n+            // fully verify the result.\n+            auto [main_cmp_diagram, stage_cmp_diagram] = real->GetMainStagingDiagrams();\n+            // Check that the feerates in each diagram are monotonically decreasing.\n+            for (size_t i = 1; i < main_cmp_diagram.size(); ++i) {\n+                assert(FeeRateCompare(main_cmp_diagram[i], main_cmp_diagram[i - 1]) <= 0);\n+            }\n+            for (size_t i = 1; i < stage_cmp_diagram.size(); ++i) {\n+                assert(FeeRateCompare(stage_cmp_diagram[i], stage_cmp_diagram[i - 1]) <= 0);\n+            }\n+            // Treat the diagrams as sets of chunk feerates, and sort them in the same way so that\n+            // std::set_difference can be used on them below. The exact ordering does not matter\n+            // here, but it has to be consistent with the one used in main_diagram and\n+            // stage_diagram).\n+            std::sort(main_cmp_diagram.begin(), main_cmp_diagram.end(), std::greater{});\n+            std::sort(stage_cmp_diagram.begin(), stage_cmp_diagram.end(), std::greater{});\n+            // Find the chunks that appear in main_diagram but are missing from main_cmp_diagram.\n+            // This is allowed, because GetMainStagingDiagrams omits clusters in main unaffected\n+            // by staging.\n+            std::vector<FeeFrac> missing_main_cmp;\n+            std::set_difference(main_real_diagram.begin(), main_real_diagram.end(),\n+                                main_cmp_diagram.begin(), main_cmp_diagram.end(),\n+                                std::inserter(missing_main_cmp, missing_main_cmp.end()),\n+                                std::greater{});\n+            assert(main_cmp_diagram.size() + missing_main_cmp.size() == main_real_diagram.size());\n+            // Do the same for chunks in stage_diagram missing from stage_cmp_diagram.\n+            auto stage_real_diagram = get_diagram_fn(false);\n+            std::vector<FeeFrac> missing_stage_cmp;\n+            std::set_difference(stage_real_diagram.begin(), stage_real_diagram.end(),\n+                                stage_cmp_diagram.begin(), stage_cmp_diagram.end(),\n+                                std::inserter(missing_stage_cmp, missing_stage_cmp.end()),\n+                                std::greater{});\n+            assert(stage_cmp_diagram.size() + missing_stage_cmp.size() == stage_real_diagram.size());\n+            // The missing chunks must be equal across main & staging (otherwise they couldn't have\n+            // been omitted).\n+            assert(missing_main_cmp == missing_stage_cmp);\n+            // The missing part must include at least all transactions in staging which have not been\n+            // modified, or been in a cluster together with modified transactions, since they were\n+            // copied from main. Note that due to the reordering of removals w.r.t. dependency\n+            // additions, it is possible that the real implementation found more unaffected things.\n+            FeeFrac missing_real;\n+            for (const auto& feerate : missing_main_cmp) missing_real += feerate;",
      "path": "src/test/fuzz/txgraph.cpp",
      "position": 427,
      "original_position": 218,
      "commit_id": "27a0c93abb7e70b93214eb857e2046f848139e68",
      "original_commit_id": "50f173e0b3182f6e84be41afc9a68d7943d47394",
      "in_reply_to_id": 2018829062,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Can you elaborate, or suggest code?",
      "created_at": "2025-03-28T19:03:54Z",
      "updated_at": "2025-03-28T19:03:54Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31444#discussion_r2019188834",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2019188834"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31444"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 909,
      "original_line": 909,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2019371454",
      "pull_request_review_id": 2726762823,
      "id": 2019371454,
      "node_id": "PRRC_kwDOABII5854XSm-",
      "diff_hunk": "@@ -744,6 +744,31 @@ FUZZ_TARGET(txgraph)\n                     builder_data.done = new_done;\n                 }\n                 break;\n+            } else if (!main_sim.IsOversized() && command-- == 0) {\n+                // GetWorstMainChunk.\n+                auto [worst_chunk, worst_chunk_feerate] = real->GetWorstMainChunk();\n+                // Just do some sanity checks here. Consistency with GetBlockBuilder is checked\n+                // below.\n+                if (main_sim.GetTransactionCount() == 0) {\n+                    assert(worst_chunk.empty());",
      "path": "src/test/fuzz/txgraph.cpp",
      "position": 318,
      "original_position": 10,
      "commit_id": "27a0c93abb7e70b93214eb857e2046f848139e68",
      "original_commit_id": "d8483d8290692d6708b046034e2ebb9977588782",
      "in_reply_to_id": 2019056596,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done.",
      "created_at": "2025-03-28T20:59:00Z",
      "updated_at": "2025-03-28T21:03:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31444#discussion_r2019371454",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2019371454"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31444"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 754,
      "original_line": 754,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2019371904",
      "pull_request_review_id": 2726762823,
      "id": 2019371904,
      "node_id": "PRRC_kwDOABII5854XSuA",
      "diff_hunk": "@@ -649,6 +714,50 @@ FUZZ_TARGET(txgraph)\n                 assert(FeeRateCompare(after_feerate, pos_feerate) <= 0);\n             }\n         }\n+\n+        // Check that the implied ordering gives rise to a combined diagram that matches the\n+        // diagram constructed from the individual cluster linearization chunkings.\n+        auto main_diagram = get_diagram_fn(true);\n+        auto expected_main_diagram = ChunkLinearization(sims[0].graph, vec1);\n+        assert(CompareChunks(main_diagram, expected_main_diagram) == 0);\n+\n+        if (sims.size() >= 2 && !sims[1].IsOversized()) {\n+            // When the staging graph is not oversized as well, call GetMainStagingDiagrams, and\n+            // fully verify the result.\n+            auto [main_cmp_diagram, stage_cmp_diagram] = real->GetMainStagingDiagrams();\n+            // Check that the feerates in each diagram are monotonically decreasing.\n+            for (size_t i = 1; i < main_cmp_diagram.size(); ++i) {\n+                assert(FeeRateCompare(main_cmp_diagram[i], main_cmp_diagram[i - 1]) <= 0);\n+            }\n+            for (size_t i = 1; i < stage_cmp_diagram.size(); ++i) {\n+                assert(FeeRateCompare(stage_cmp_diagram[i], stage_cmp_diagram[i - 1]) <= 0);\n+            }\n+            // Apply total ordering on the feerate diagrams to make them comparable (the exact\n+            // tie breaker among equal-feerate FeeFracs does not matter, but it has to be\n+            // consistent with the one used in main_diagram and stage_diagram).\n+            std::sort(main_cmp_diagram.begin(), main_cmp_diagram.end(), std::greater{});\n+            std::sort(stage_cmp_diagram.begin(), stage_cmp_diagram.end(), std::greater{});\n+            // Find the chunks that appear in main_diagram but are missing from main_cmp_diagram.\n+            // This is allowed, because GetMainStagingDiagrams omits clusters in main unaffected\n+            // by staging.\n+            std::vector<FeeFrac> missing_main_cmp;\n+            std::set_difference(main_diagram.begin(), main_diagram.end(),\n+                                main_cmp_diagram.begin(), main_cmp_diagram.end(),\n+                                std::inserter(missing_main_cmp, missing_main_cmp.end()),\n+                                std::greater{});\n+            assert(main_cmp_diagram.size() + missing_main_cmp.size() == main_diagram.size());\n+            // Do the same for chunks in stage_diagram missign from stage_cmp_diagram.\n+            auto stage_diagram = get_diagram_fn(false);\n+            std::vector<FeeFrac> missing_stage_cmp;\n+            std::set_difference(stage_diagram.begin(), stage_diagram.end(),\n+                                stage_cmp_diagram.begin(), stage_cmp_diagram.end(),\n+                                std::inserter(missing_stage_cmp, missing_stage_cmp.end()),\n+                                std::greater{});\n+            assert(stage_cmp_diagram.size() + missing_stage_cmp.size() == stage_diagram.size());\n+            // The missing chunks must be equal across main & staging (otherwise they couldn't have\n+            // been omitted).\n+            assert(missing_main_cmp == missing_stage_cmp);",
      "path": "src/test/fuzz/txgraph.cpp",
      "position": 420,
      "original_position": 146,
      "commit_id": "27a0c93abb7e70b93214eb857e2046f848139e68",
      "original_commit_id": "7248d26bd09a156b9b3d6cda20949e88b9354e6e",
      "in_reply_to_id": 2012233270,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Added a comment.",
      "created_at": "2025-03-28T20:59:17Z",
      "updated_at": "2025-03-28T21:03:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31444#discussion_r2019371904",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2019371904"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31444"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 902,
      "original_line": 902,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2019372075",
      "pull_request_review_id": 2726762823,
      "id": 2019372075,
      "node_id": "PRRC_kwDOABII5854XSwr",
      "diff_hunk": "@@ -531,6 +534,35 @@ const TxGraphImpl::ClusterSet& TxGraphImpl::GetClusterSet(int level) const noexc\n     return *m_staging_clusterset;\n }\n \n+/** Implementation of the TxGraph::BlockBuilder interface. */\n+class BlockBuilderImpl final : public TxGraph::BlockBuilder\n+{\n+    /** Which TxGraphImpl this object is doing block building for. It will have its\n+     *  m_chunkindex_observers incremented as long as this BlockBuilderImpl exists. */\n+    TxGraphImpl* const m_graph;\n+    /** Clusters which we're not including further transactions from. */\n+    std::set<Cluster*> m_excluded_clusters;\n+    /** Iterator to the current chunk (after the current one) in the chunk index. end() if nothing",
      "path": "src/txgraph.cpp",
      "position": 195,
      "original_position": 38,
      "commit_id": "27a0c93abb7e70b93214eb857e2046f848139e68",
      "original_commit_id": "545812c3a32717d895710cf266ed30325f888246",
      "in_reply_to_id": 2019040161,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done.",
      "created_at": "2025-03-28T20:59:29Z",
      "updated_at": "2025-03-28T21:03:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31444#discussion_r2019372075",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2019372075"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31444"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 575,
      "original_line": 575,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2019372720",
      "pull_request_review_id": 2726762823,
      "id": 2019372720,
      "node_id": "PRRC_kwDOABII5854XS6w",
      "diff_hunk": "@@ -524,17 +580,25 @@ void Cluster::Updated(TxGraphImpl& graph) noexcept\n         // Iterate over the chunks.\n         for (unsigned chunk_idx = 0; chunk_idx < chunking.NumChunksLeft(); ++chunk_idx) {\n             auto chunk = chunking.GetChunk(chunk_idx);\n-            Assume(chunk.transactions.Any());\n+            auto chunk_count = chunk.transactions.Count();",
      "path": "src/txgraph.cpp",
      "position": 280,
      "original_position": 98,
      "commit_id": "27a0c93abb7e70b93214eb857e2046f848139e68",
      "original_commit_id": "1d500a50b698a638c840ca79504c2a9a421e8756",
      "in_reply_to_id": 2018933019,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "No, it's being assigned to below.",
      "created_at": "2025-03-28T21:00:09Z",
      "updated_at": "2025-03-28T21:03:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31444#discussion_r2019372720",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2019372720"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31444"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 674,
      "original_line": 674,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2019373599",
      "pull_request_review_id": 2726762823,
      "id": 2019373599,
      "node_id": "PRRC_kwDOABII5854XTIf",
      "diff_hunk": "@@ -1675,6 +1677,8 @@ void Cluster::GetClusterRefs(TxGraphImpl& graph, std::span<TxGraph::Ref*> range,\n         Assume(entry.m_ref != nullptr);\n         ref = entry.m_ref;\n     }\n+    // Return whether this was the end of the Cluster.\n+    return start_pos == m_linearization.size();",
      "path": "src/txgraph.cpp",
      "position": 647,
      "original_position": 36,
      "commit_id": "27a0c93abb7e70b93214eb857e2046f848139e68",
      "original_commit_id": "a0e19959e85b2ce1a90902ab1e3fe274f9d63a1d",
      "in_reply_to_id": 2019118491,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I don't like that because it means either duplicating the variable, or naming the argument different in definition & declaration.\r\n\r\nI've changed the comment a bit, though.",
      "created_at": "2025-03-28T21:01:06Z",
      "updated_at": "2025-03-28T21:03:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31444#discussion_r2019373599",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2019373599"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31444"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1704,
      "original_line": 1704,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2019373992",
      "pull_request_review_id": 2726762823,
      "id": 2019373992,
      "node_id": "PRRC_kwDOABII5854XTOo",
      "diff_hunk": "@@ -2322,13 +2328,22 @@ std::optional<std::pair<std::vector<TxGraph::Ref*>, FeePerWeight>> BlockBuilderI\n         const auto& chunk_data = *m_cur_iter;\n         const auto& chunk_end_entry = m_graph->m_entries[chunk_data.m_graph_index];\n         auto cluster = chunk_end_entry.m_locator[0].cluster;\n-        ret->first.resize(chunk_data.m_chunk_count);\n-        auto start_pos = chunk_end_entry.m_main_lin_index + 1 - chunk_data.m_chunk_count;\n-        bool is_end = cluster->GetClusterRefs(*m_graph, ret->first, start_pos);\n-        if (is_end) {\n+        if (chunk_data.m_chunk_count == LinearizationIndex(-1)) {\n+            // Special case in case just a single transaction remains, avoiding the need to\n+            // dispatch to and dereference Cluster.\n+            ret->first.resize(1);\n+            Assume(chunk_end_entry.m_ref != nullptr);\n+            ret->first[0] = chunk_end_entry.m_ref;\n             m_cur_cluster = nullptr;\n         } else {\n-            Assume(cluster == m_cur_cluster);\n+            ret->first.resize(chunk_data.m_chunk_count);\n+            auto start_pos = chunk_end_entry.m_main_lin_index + 1 - chunk_data.m_chunk_count;\n+            bool is_end = cluster->GetClusterRefs(*m_graph, ret->first, start_pos);\n+            if (is_end) {\n+                m_cur_cluster = nullptr;",
      "path": "src/txgraph.cpp",
      "position": 882,
      "original_position": 43,
      "commit_id": "27a0c93abb7e70b93214eb857e2046f848139e68",
      "original_commit_id": "0630995fee22990402771547be1480b8706c76ce",
      "in_reply_to_id": 2019140250,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done, plus a comment.",
      "created_at": "2025-03-28T21:01:20Z",
      "updated_at": "2025-03-28T21:03:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31444#discussion_r2019373992",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2019373992"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31444"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 2379,
      "original_line": 2379,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2019374546",
      "pull_request_review_id": 2726762823,
      "id": 2019374546,
      "node_id": "PRRC_kwDOABII5854XTXS",
      "diff_hunk": "@@ -167,6 +169,28 @@ class TxGraph\n      *  so CompareChunks is usable without type-conversion. */\n     virtual std::pair<std::vector<FeeFrac>, std::vector<FeeFrac>> GetMainStagingDiagrams() noexcept = 0;\n \n+    /** Interface returned by GetBlockBuilder. */\n+    class BlockBuilder\n+    {\n+    protected:\n+        /** Make constructor non-public (use TxGraph::GetBlockBuilder()). */\n+        BlockBuilder() noexcept = default;\n+    public:\n+        /** Support safe inheritance. */\n+        virtual ~BlockBuilder() = default;\n+        /** Get the chunk that is currently suggested to be included, plus its feerate, if any. */\n+        virtual std::optional<std::pair<std::vector<Ref*>, FeePerWeight>> GetCurrentChunk() noexcept = 0;\n+        /** Mark the current chunk as included, and progress to the next one. */",
      "path": "src/txgraph.h",
      "position": 34,
      "original_position": 28,
      "commit_id": "27a0c93abb7e70b93214eb857e2046f848139e68",
      "original_commit_id": "545812c3a32717d895710cf266ed30325f888246",
      "in_reply_to_id": 2019048020,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I've changed the code so that `Include()` and `Skip()` are no-ops once the end is reached.",
      "created_at": "2025-03-28T21:01:49Z",
      "updated_at": "2025-03-28T21:03:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31444#discussion_r2019374546",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2019374546"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31444"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 184,
      "original_line": 184,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2019374728",
      "pull_request_review_id": 2726762823,
      "id": 2019374728,
      "node_id": "PRRC_kwDOABII5854XTaI",
      "diff_hunk": "@@ -167,6 +169,28 @@ class TxGraph\n      *  so CompareChunks is usable without type-conversion. */\n     virtual std::pair<std::vector<FeeFrac>, std::vector<FeeFrac>> GetMainStagingDiagrams() noexcept = 0;\n \n+    /** Interface returned by GetBlockBuilder. */\n+    class BlockBuilder\n+    {\n+    protected:\n+        /** Make constructor non-public (use TxGraph::GetBlockBuilder()). */\n+        BlockBuilder() noexcept = default;\n+    public:\n+        /** Support safe inheritance. */\n+        virtual ~BlockBuilder() = default;\n+        /** Get the chunk that is currently suggested to be included, plus its feerate, if any. */\n+        virtual std::optional<std::pair<std::vector<Ref*>, FeePerWeight>> GetCurrentChunk() noexcept = 0;\n+        /** Mark the current chunk as included, and progress to the next one. */\n+        virtual void Include() noexcept = 0;\n+        /** Mark the current chunk as skipped, and progress to the next one. Further chunks from\n+         *  the same cluster as the current one will not be reported anymore. */",
      "path": "src/txgraph.h",
      "position": 37,
      "original_position": 31,
      "commit_id": "27a0c93abb7e70b93214eb857e2046f848139e68",
      "original_commit_id": "545812c3a32717d895710cf266ed30325f888246",
      "in_reply_to_id": 2019046931,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Same here, made it have no effect in that case.",
      "created_at": "2025-03-28T21:02:01Z",
      "updated_at": "2025-03-28T21:03:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31444#discussion_r2019374728",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2019374728"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31444"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 187,
      "original_line": 187,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2019375359",
      "pull_request_review_id": 2726762823,
      "id": 2019375359,
      "node_id": "PRRC_kwDOABII5854XTj_",
      "diff_hunk": "@@ -148,8 +148,9 @@ class Cluster\n     /** Process elements from the front of args that apply to this cluster, and append Refs for the\n      *  union of their descendants to output. */\n     void GetDescendantRefs(const TxGraphImpl& graph, std::span<std::pair<Cluster*, DepGraphIndex>>& args, std::vector<TxGraph::Ref*>& output) noexcept;\n-    /** Get a vector of Refs for all elements of this Cluster, in linearization order. */\n-    void GetClusterRefs(TxGraphImpl& graph, std::span<TxGraph::Ref*> range, LinearizationIndex start_pos) noexcept;\n+    /** Get a vector of Refs for all elements of this Cluster, in linearization order. Returns",
      "path": "src/txgraph.cpp",
      "position": null,
      "original_position": 6,
      "commit_id": "27a0c93abb7e70b93214eb857e2046f848139e68",
      "original_commit_id": "a0e19959e85b2ce1a90902ab1e3fe274f9d63a1d",
      "in_reply_to_id": 2019132820,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done, but elsewhere.",
      "created_at": "2025-03-28T21:02:31Z",
      "updated_at": "2025-03-28T21:03:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31444#discussion_r2019375359",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2019375359"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31444"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 151,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2019375612",
      "pull_request_review_id": 2726762823,
      "id": 2019375612,
      "node_id": "PRRC_kwDOABII5854XTn8",
      "diff_hunk": "@@ -148,8 +148,9 @@ class Cluster\n     /** Process elements from the front of args that apply to this cluster, and append Refs for the\n      *  union of their descendants to output. */\n     void GetDescendantRefs(const TxGraphImpl& graph, std::span<std::pair<Cluster*, DepGraphIndex>>& args, std::vector<TxGraph::Ref*>& output) noexcept;\n-    /** Get a vector of Refs for all elements of this Cluster, in linearization order. */\n-    void GetClusterRefs(TxGraphImpl& graph, std::span<TxGraph::Ref*> range, LinearizationIndex start_pos) noexcept;\n+    /** Get a vector of Refs for all elements of this Cluster, in linearization order. Returns\n+     *  the range ends at the end of the cluster. */",
      "path": "src/txgraph.cpp",
      "position": null,
      "original_position": 7,
      "commit_id": "27a0c93abb7e70b93214eb857e2046f848139e68",
      "original_commit_id": "a0e19959e85b2ce1a90902ab1e3fe274f9d63a1d",
      "in_reply_to_id": 2019104328,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "This has been rewritten.",
      "created_at": "2025-03-28T21:02:40Z",
      "updated_at": "2025-03-28T21:03:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31444#discussion_r2019375612",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2019375612"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31444"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 152,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2019375703",
      "pull_request_review_id": 2726762823,
      "id": 2019375703,
      "node_id": "PRRC_kwDOABII5854XTpX",
      "diff_hunk": "@@ -247,6 +247,49 @@ class TxGraphImpl final : public TxGraph\n     /** The staging ClusterSet, if any. */\n     std::optional<ClusterSet> m_staging_clusterset;\n \n+    /** Information about a chunk in the main graph. */\n+    struct ChunkData\n+    {\n+        /** The Entry which is the last transaction of the chunk. */\n+        mutable GraphIndex m_graph_index;\n+        /** How many transactions the chunk contains. */\n+        LinearizationIndex m_chunk_count;",
      "path": "src/txgraph.cpp",
      "position": 78,
      "original_position": 10,
      "commit_id": "27a0c93abb7e70b93214eb857e2046f848139e68",
      "original_commit_id": "1d500a50b698a638c840ca79504c2a9a421e8756",
      "in_reply_to_id": 2018886603,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done.",
      "created_at": "2025-03-28T21:02:46Z",
      "updated_at": "2025-03-28T21:03:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31444#discussion_r2019375703",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2019375703"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31444"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 267,
      "original_line": 267,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2019375780",
      "pull_request_review_id": 2726762823,
      "id": 2019375780,
      "node_id": "PRRC_kwDOABII5854XTqk",
      "diff_hunk": "@@ -303,6 +346,8 @@ class TxGraphImpl final : public TxGraph\n     {\n         /** Pointer to the corresponding Ref object if any, or nullptr if unlinked. */\n         Ref* m_ref{nullptr};\n+        /** Iterator to the corresponding ChunkData, if any. */",
      "path": "src/txgraph.cpp",
      "position": null,
      "original_position": 54,
      "commit_id": "27a0c93abb7e70b93214eb857e2046f848139e68",
      "original_commit_id": "1d500a50b698a638c840ca79504c2a9a421e8756",
      "in_reply_to_id": 2018906562,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done.",
      "created_at": "2025-03-28T21:02:51Z",
      "updated_at": "2025-03-28T21:03:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31444#discussion_r2019375780",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2019375780"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31444"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 349,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2019375949",
      "pull_request_review_id": 2726762823,
      "id": 2019375949,
      "node_id": "PRRC_kwDOABII5854XTtN",
      "diff_hunk": "@@ -247,6 +247,49 @@ class TxGraphImpl final : public TxGraph\n     /** The staging ClusterSet, if any. */\n     std::optional<ClusterSet> m_staging_clusterset;\n \n+    /** Information about a chunk in the main graph. */\n+    struct ChunkData\n+    {\n+        /** The Entry which is the last transaction of the chunk. */\n+        mutable GraphIndex m_graph_index;\n+        /** How many transactions the chunk contains. */\n+        LinearizationIndex m_chunk_count;\n+\n+        ChunkData(GraphIndex graph_index, LinearizationIndex chunk_count) noexcept :\n+            m_graph_index{graph_index}, m_chunk_count{chunk_count} {}\n+    };\n+\n+    /** Comparator for ChunkData objects in mining order. */\n+    class ChunkOrder\n+    {\n+        const TxGraphImpl* const m_graph;\n+    public:\n+        explicit ChunkOrder(const TxGraphImpl* graph) : m_graph(graph) {}\n+\n+        bool operator()(const ChunkData& a, const ChunkData& b) const noexcept\n+        {\n+            const auto& a_entry = m_graph->m_entries[a.m_graph_index];\n+            const auto& b_entry = m_graph->m_entries[b.m_graph_index];\n+            // First sort from high feerate to low feerate.\n+            auto cmp_feerate = FeeRateCompare(a_entry.m_main_chunk_feerate, b_entry.m_main_chunk_feerate);\n+            if (cmp_feerate != 0) return cmp_feerate > 0;\n+            // Then sort by increasing Cluster pointer.\n+            Assume(a_entry.m_locator[0].IsPresent());\n+            Assume(b_entry.m_locator[0].IsPresent());\n+            if (a_entry.m_locator[0].cluster != b_entry.m_locator[0].cluster) {\n+                return std::less{}(a_entry.m_locator[0].cluster, b_entry.m_locator[0].cluster);\n+            }\n+            // Finally sort by position within the Cluster.\n+            return a_entry.m_main_lin_index < b_entry.m_main_lin_index;\n+        }\n+    };\n+\n+    /** Definition for the mining index type. */\n+    using ChunkIndex = std::set<ChunkData, ChunkOrder>;\n+\n+    /** Index of ChunkData objects. */\n+    ChunkIndex m_chunkindex;",
      "path": "src/txgraph.cpp",
      "position": null,
      "original_position": 45,
      "commit_id": "27a0c93abb7e70b93214eb857e2046f848139e68",
      "original_commit_id": "1d500a50b698a638c840ca79504c2a9a421e8756",
      "in_reply_to_id": 2018913351,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done.",
      "created_at": "2025-03-28T21:03:00Z",
      "updated_at": "2025-03-28T21:03:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31444#discussion_r2019375949",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2019375949"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31444"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 291,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2019376118",
      "pull_request_review_id": 2726762823,
      "id": 2019376118,
      "node_id": "PRRC_kwDOABII5854XTv2",
      "diff_hunk": "@@ -279,6 +290,39 @@ FUZZ_TARGET(txgraph)\n         return &empty_ref;\n     };\n \n+    /** Function to construct the correct fee-size diagram a real graph has based on its graph\n+     *  order (as reported by GetCluster(), so it works for both main and staging). */\n+    auto get_diagram_fn = [&](bool main_only) -> std::vector<FeeFrac> {\n+        int level = main_only ? 0 : sims.size() - 1;\n+        auto& sim = sims[level];\n+        // For every transaction in the graph, request its cluster, and throw them into a set.\n+        std::set<std::vector<TxGraph::Ref*>> clusters;\n+        for (auto i : sim.graph.Positions()) {\n+            auto ref = sim.GetRef(i);\n+            clusters.insert(real->GetCluster(*ref, main_only));\n+        }\n+        // Compute the chunkings of each (deduplicated) cluster.\n+        size_t num_tx{0};\n+        std::vector<FeeFrac> ret;",
      "path": "src/test/fuzz/txgraph.cpp",
      "position": null,
      "original_position": 42,
      "commit_id": "27a0c93abb7e70b93214eb857e2046f848139e68",
      "original_commit_id": "f4c8848c7ca87a463d4d0841d354a59f64c2d20c",
      "in_reply_to_id": 2018742079,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done.",
      "created_at": "2025-03-28T21:03:09Z",
      "updated_at": "2025-03-28T21:03:36Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31444#discussion_r2019376118",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2019376118"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31444"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 337,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2019377271",
      "pull_request_review_id": 2726772229,
      "id": 2019377271,
      "node_id": "PRRC_kwDOABII5854XUB3",
      "diff_hunk": "@@ -148,7 +148,7 @@ class Cluster\n      *  union of their descendants to output. */\n     void GetDescendantRefs(const TxGraphImpl& graph, std::span<std::pair<Cluster*, DepGraphIndex>>& args, std::vector<TxGraph::Ref*>& output) noexcept;\n     /** Get a vector of Refs for all elements of this Cluster, in linearization order. */\n-    std::vector<TxGraph::Ref*> GetClusterRefs(const TxGraphImpl& graph) noexcept;\n+    void GetClusterRefs(TxGraphImpl& graph, std::span<TxGraph::Ref*> range, LinearizationIndex start_pos) noexcept;",
      "path": "src/txgraph.cpp",
      "position": null,
      "original_position": 5,
      "commit_id": "27a0c93abb7e70b93214eb857e2046f848139e68",
      "original_commit_id": "b130e185f54c7f762da6ef435882335e4f0b98ff",
      "in_reply_to_id": 2018984013,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done.",
      "created_at": "2025-03-28T21:04:33Z",
      "updated_at": "2025-03-28T21:04:34Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31444#discussion_r2019377271",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2019377271"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31444"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 151,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2019379608",
      "pull_request_review_id": 2726775208,
      "id": 2019379608,
      "node_id": "PRRC_kwDOABII5854XUmY",
      "diff_hunk": "@@ -167,6 +169,28 @@ class TxGraph\n      *  so CompareChunks is usable without type-conversion. */\n     virtual std::pair<std::vector<FeeFrac>, std::vector<FeeFrac>> GetMainStagingDiagrams() noexcept = 0;\n \n+    /** Interface returned by GetBlockBuilder. */\n+    class BlockBuilder\n+    {\n+    protected:\n+        /** Make constructor non-public (use TxGraph::GetBlockBuilder()). */\n+        BlockBuilder() noexcept = default;\n+    public:\n+        /** Support safe inheritance. */\n+        virtual ~BlockBuilder() = default;\n+        /** Get the chunk that is currently suggested to be included, plus its feerate, if any. */\n+        virtual std::optional<std::pair<std::vector<Ref*>, FeePerWeight>> GetCurrentChunk() noexcept = 0;\n+        /** Mark the current chunk as included, and progress to the next one. */\n+        virtual void Include() noexcept = 0;\n+        /** Mark the current chunk as skipped, and progress to the next one. Further chunks from\n+         *  the same cluster as the current one will not be reported anymore. */\n+        virtual void Skip() noexcept = 0;\n+    };\n+\n+    /** Construct a block builder, drawing chunks in order, from the main graph, which cannot be\n+     *  oversized. While the returned object exists, no mutators on the main graph are allowed. */",
      "path": "src/txgraph.h",
      "position": null,
      "original_position": 36,
      "commit_id": "27a0c93abb7e70b93214eb857e2046f848139e68",
      "original_commit_id": "545812c3a32717d895710cf266ed30325f888246",
      "in_reply_to_id": 2019028001,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "That's strange, because the builder outliving the graph is definitely a problem (the observer counter in the graph, which has been destroyed, will be subtracted from). I don't see an easy way of allowing this (it'd need the graph to maintain a set of observers, which seems overkill).",
      "created_at": "2025-03-28T21:05:49Z",
      "updated_at": "2025-03-28T21:05:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31444#discussion_r2019379608",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2019379608"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31444"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 191,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2019379802",
      "pull_request_review_id": 2726775495,
      "id": 2019379802,
      "node_id": "PRRC_kwDOABII5854XUpa",
      "diff_hunk": "@@ -715,6 +798,27 @@ FUZZ_TARGET(txgraph)\n             }\n         }\n \n+        // The same order should be obtained through a BlockBuilder, if nothing is skipped.",
      "path": "src/test/fuzz/txgraph.cpp",
      "position": null,
      "original_position": 162,
      "commit_id": "27a0c93abb7e70b93214eb857e2046f848139e68",
      "original_commit_id": "545812c3a32717d895710cf266ed30325f888246",
      "in_reply_to_id": 2019037611,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done.",
      "created_at": "2025-03-28T21:05:57Z",
      "updated_at": "2025-03-28T21:05:57Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31444#discussion_r2019379802",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2019379802"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31444"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 801,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2019380171",
      "pull_request_review_id": 2726775983,
      "id": 2019380171,
      "node_id": "PRRC_kwDOABII5854XUvL",
      "diff_hunk": "@@ -190,6 +190,11 @@ class TxGraph\n     /** Construct a block builder, drawing chunks in order, from the main graph, which cannot be\n      *  oversized. While the returned object exists, no mutators on the main graph are allowed. */\n     virtual std::unique_ptr<BlockBuilder> GetBlockBuilder() noexcept = 0;\n+    /** Get the last chunk in the main graph, i.e., the last chunk that would be returned by a\n+     *  BlockBuilder created now, together with its feerate. The chunk is returned in\n+     *  reverse-topological order, so every element is preceded by all its descendants. The main\n+     *  graph must not be oversized. If the graph is empty, {} is returned. */",
      "path": "src/txgraph.h",
      "position": null,
      "original_position": 7,
      "commit_id": "27a0c93abb7e70b93214eb857e2046f848139e68",
      "original_commit_id": "d8483d8290692d6708b046034e2ebb9977588782",
      "in_reply_to_id": 2019056039,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done.",
      "created_at": "2025-03-28T21:06:06Z",
      "updated_at": "2025-03-28T21:06:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31444#discussion_r2019380171",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2019380171"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31444"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 196,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2019521714",
      "pull_request_review_id": 2726984827,
      "id": 2019521714,
      "node_id": "PRRC_kwDOABII5854X3Sy",
      "diff_hunk": "@@ -162,6 +162,10 @@ class TxGraph\n      *  main clusters are counted. Refs that do not exist in the queried graph are ignored. The\n      *  queried graph must not be oversized. */\n     virtual GraphIndex CountDistinctClusters(std::span<const Ref* const>, bool main_only = false) noexcept = 0;\n+    /** Get feerate diagrams for both main and staging (which must both exist and not be\n+     *  oversized), ignoring unmodified components in both. Use FeeFrac rather than FeePerWeight\n+     *  so CompareChunks is usable without type-conversion. */\n+    virtual std::pair<std::vector<FeeFrac>, std::vector<FeeFrac>> GetMainStagingDiagrams() noexcept = 0;",
      "path": "src/txgraph.h",
      "position": 21,
      "original_position": 7,
      "commit_id": "27a0c93abb7e70b93214eb857e2046f848139e68",
      "original_commit_id": "899ce12b59a3f503fa047e3e0125aacfa928a125",
      "in_reply_to_id": 2016595434,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Yeah, guess that pushes it too far into the \"not worth it\"",
      "created_at": "2025-03-28T22:48:52Z",
      "updated_at": "2025-03-28T22:48:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31444#discussion_r2019521714",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2019521714"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31444"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 171,
      "original_line": 171,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2019533582",
      "pull_request_review_id": 2726999339,
      "id": 2019533582,
      "node_id": "PRRC_kwDOABII5854X6MO",
      "diff_hunk": "@@ -1901,6 +1911,32 @@ TxGraph::GraphIndex TxGraphImpl::CountDistinctClusters(std::span<const Ref* cons\n     return ret;\n }\n \n+std::pair<std::vector<FeeFrac>, std::vector<FeeFrac>> TxGraphImpl::GetMainStagingDiagrams() noexcept\n+{\n+    Assume(m_staging_clusterset.has_value());\n+    MakeAllAcceptable(MAIN_LEVEL);\n+    Assume(m_main_clusterset.m_deps_to_add.empty());\n+    MakeAllAcceptable(STAGING_LEVEL);\n+    Assume(m_staging_clusterset->m_deps_to_add.empty());\n+    // For all Clusters in main which conflict with Clusters in staging (i.e., all that are removed\n+    // by, or replaced in, staging), gather their chunk feerates.\n+    auto main_clusters = GetConflicts();\n+    std::vector<FeeFrac> main_feerates, staging_feerates;\n+    for (Cluster* cluster : main_clusters) {\n+        cluster->AppendChunkFeerates(main_feerates);\n+    }\n+    // Do the same for the Clusters in staging themselves.\n+    for (int quality = 0; quality < int(QualityLevel::NONE); ++quality) {\n+        for (const auto& cluster : m_staging_clusterset->m_clusters[quality]) {\n+            cluster->AppendChunkFeerates(staging_feerates);\n+        }\n+    }\n+    // Sort both by decreasing feerate to obtain diagrams, and return them.\n+    std::sort(main_feerates.begin(), main_feerates.end(), [](auto& a, auto& b) { return a >> b; });\n+    std::sort(staging_feerates.begin(), staging_feerates.end(), [](auto& a, auto& b) { return a >> b; });",
      "path": "src/txgraph.cpp",
      "position": null,
      "original_position": 57,
      "commit_id": "27a0c93abb7e70b93214eb857e2046f848139e68",
      "original_commit_id": "899ce12b59a3f503fa047e3e0125aacfa928a125",
      "in_reply_to_id": 2016650965,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Hmm. I didn't understand how BlockBuilder was implemented when I wrote that; BlockBuilder maintains an ordered tree of every main chunk, so is O(num_chunks) in size/performance, which is fine. What I had in mind conceptually about cluster mempool is that you'd have a structure that was O(num_clusters) that you could query for the the best/worst chunk. That would be O(n log(n)) setup, then O(log(n)) for the equivalent of a \"Next()\" call, for n=num_clusters. But that's not superior to how BlockBuilder works (and is probably inferior), so, doesn't sound like there's anything worth doing here.",
      "created_at": "2025-03-28T22:59:17Z",
      "updated_at": "2025-03-28T22:59:18Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31444#discussion_r2019533582",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2019533582"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31444"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2090,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2019536181",
      "pull_request_review_id": 2727002567,
      "id": 2019536181,
      "node_id": "PRRC_kwDOABII5854X601",
      "diff_hunk": "@@ -289,6 +290,8 @@ class TxGraphImpl final : public TxGraph\n \n     /** Index of ChunkData objects. */\n     ChunkIndex m_chunkindex;\n+    /** Number of index-observing objects in existence (BlockBuilderImpl). */\n+    size_t m_chunkindex_observers{0};",
      "path": "src/txgraph.cpp",
      "position": null,
      "original_position": 22,
      "commit_id": "27a0c93abb7e70b93214eb857e2046f848139e68",
      "original_commit_id": "bf7b901627ff1b34a85d09c1be557ea898df9b43",
      "in_reply_to_id": 2017036847,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> It's a possibility, but you mean this in addition to `BlockBuildImpl` itself also incrementing the observers count, right? Because it holds an iterator to the chunk index in GraphImpl too.\r\n\r\nYes. (though, technically, if `BlockBuildImpl` stores its own RefsVector it could avoid explicitly incrementing the observers count, because RefsVector does that for it)",
      "created_at": "2025-03-28T23:02:49Z",
      "updated_at": "2025-03-28T23:02:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31444#discussion_r2019536181",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2019536181"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31444"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 296,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2019656793",
      "pull_request_review_id": 2727182628,
      "id": 2019656793,
      "node_id": "PRRC_kwDOABII5854YYRZ",
      "diff_hunk": "@@ -1901,6 +1911,32 @@ TxGraph::GraphIndex TxGraphImpl::CountDistinctClusters(std::span<const Ref* cons\n     return ret;\n }\n \n+std::pair<std::vector<FeeFrac>, std::vector<FeeFrac>> TxGraphImpl::GetMainStagingDiagrams() noexcept\n+{\n+    Assume(m_staging_clusterset.has_value());\n+    MakeAllAcceptable(MAIN_LEVEL);\n+    Assume(m_main_clusterset.m_deps_to_add.empty());\n+    MakeAllAcceptable(STAGING_LEVEL);\n+    Assume(m_staging_clusterset->m_deps_to_add.empty());\n+    // For all Clusters in main which conflict with Clusters in staging (i.e., all that are removed\n+    // by, or replaced in, staging), gather their chunk feerates.\n+    auto main_clusters = GetConflicts();\n+    std::vector<FeeFrac> main_feerates, staging_feerates;\n+    for (Cluster* cluster : main_clusters) {\n+        cluster->AppendChunkFeerates(main_feerates);\n+    }\n+    // Do the same for the Clusters in staging themselves.\n+    for (int quality = 0; quality < int(QualityLevel::NONE); ++quality) {\n+        for (const auto& cluster : m_staging_clusterset->m_clusters[quality]) {\n+            cluster->AppendChunkFeerates(staging_feerates);\n+        }\n+    }\n+    // Sort both by decreasing feerate to obtain diagrams, and return them.\n+    std::sort(main_feerates.begin(), main_feerates.end(), [](auto& a, auto& b) { return a >> b; });\n+    std::sort(staging_feerates.begin(), staging_feerates.end(), [](auto& a, auto& b) { return a >> b; });",
      "path": "src/txgraph.cpp",
      "position": null,
      "original_position": 57,
      "commit_id": "27a0c93abb7e70b93214eb857e2046f848139e68",
      "original_commit_id": "899ce12b59a3f503fa047e3e0125aacfa928a125",
      "in_reply_to_id": 2016650965,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Yeah, I think I considered an on-the-fly heap at some point, and it's probable that that actually has overall lower runtime costs than this (due do better memory locality and less allocation overhead than a tree-structured set), but being to do the bulk of the work ahead of time is nice.",
      "created_at": "2025-03-29T01:38:55Z",
      "updated_at": "2025-03-29T01:38:56Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31444#discussion_r2019656793",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2019656793"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31444"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2090,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2019711805",
      "pull_request_review_id": 2727262720,
      "id": 2019711805,
      "node_id": "PRRC_kwDOABII5854Yls9",
      "diff_hunk": "@@ -1901,6 +1911,32 @@ TxGraph::GraphIndex TxGraphImpl::CountDistinctClusters(std::span<const Ref* cons\n     return ret;\n }\n \n+std::pair<std::vector<FeeFrac>, std::vector<FeeFrac>> TxGraphImpl::GetMainStagingDiagrams() noexcept\n+{\n+    Assume(m_staging_clusterset.has_value());\n+    MakeAllAcceptable(MAIN_LEVEL);\n+    Assume(m_main_clusterset.m_deps_to_add.empty());\n+    MakeAllAcceptable(STAGING_LEVEL);\n+    Assume(m_staging_clusterset->m_deps_to_add.empty());\n+    // For all Clusters in main which conflict with Clusters in staging (i.e., all that are removed\n+    // by, or replaced in, staging), gather their chunk feerates.\n+    auto main_clusters = GetConflicts();\n+    std::vector<FeeFrac> main_feerates, staging_feerates;\n+    for (Cluster* cluster : main_clusters) {\n+        cluster->AppendChunkFeerates(main_feerates);\n+    }\n+    // Do the same for the Clusters in staging themselves.\n+    for (int quality = 0; quality < int(QualityLevel::NONE); ++quality) {\n+        for (const auto& cluster : m_staging_clusterset->m_clusters[quality]) {\n+            cluster->AppendChunkFeerates(staging_feerates);\n+        }\n+    }\n+    // Sort both by decreasing feerate to obtain diagrams, and return them.\n+    std::sort(main_feerates.begin(), main_feerates.end(), [](auto& a, auto& b) { return a >> b; });\n+    std::sort(staging_feerates.begin(), staging_feerates.end(), [](auto& a, auto& b) { return a >> b; });",
      "path": "src/txgraph.cpp",
      "position": null,
      "original_position": 57,
      "commit_id": "27a0c93abb7e70b93214eb857e2046f848139e68",
      "original_commit_id": "899ce12b59a3f503fa047e3e0125aacfa928a125",
      "in_reply_to_id": 2016650965,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Thinking some more about this... I guess the advantage of the on-the-fly heap would be that you may never have to calculate the ordering for some chunks in the middle of the mempool (if they get rbf'ed, or conflicted by a block tx, or if they expire, or if they get cpfp'ed and thus brought to the front of the mempool, rather than just waiting until the best block feerate drops to their level, or you stop and restart your bitcoind before they get mined). Probably few enough txs hit those special cases to be much of a saving overall though\r\n\r\nAnother thought: consider the \"virtual Cluster class\" idea, but instead of special casing each standalone tx into a custom single-tx-Cluster, you could have a single cluster for all the standalone txs. That would then just order those txs by feerate, but it would mean that instead of having to maintain a separate chunk/cluster data structure for each of those txs, you only maintain a single cluster data structure that covers all of them. That approach messes up the model for diagram comparisons that this PR introduces (because suddenly the diagram comparisons pull in unrelated singleton txs whenever any one of them is touched), but maybe that could be fixed reasonably.",
      "created_at": "2025-03-29T05:05:43Z",
      "updated_at": "2025-03-29T05:05:43Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31444#discussion_r2019711805",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2019711805"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31444"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2090,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2019792536",
      "pull_request_review_id": 2727363496,
      "id": 2019792536,
      "node_id": "PRRC_kwDOABII5854Y5aY",
      "diff_hunk": "@@ -1901,6 +1911,32 @@ TxGraph::GraphIndex TxGraphImpl::CountDistinctClusters(std::span<const Ref* cons\n     return ret;\n }\n \n+std::pair<std::vector<FeeFrac>, std::vector<FeeFrac>> TxGraphImpl::GetMainStagingDiagrams() noexcept\n+{\n+    Assume(m_staging_clusterset.has_value());\n+    MakeAllAcceptable(MAIN_LEVEL);\n+    Assume(m_main_clusterset.m_deps_to_add.empty());\n+    MakeAllAcceptable(STAGING_LEVEL);\n+    Assume(m_staging_clusterset->m_deps_to_add.empty());\n+    // For all Clusters in main which conflict with Clusters in staging (i.e., all that are removed\n+    // by, or replaced in, staging), gather their chunk feerates.\n+    auto main_clusters = GetConflicts();\n+    std::vector<FeeFrac> main_feerates, staging_feerates;\n+    for (Cluster* cluster : main_clusters) {\n+        cluster->AppendChunkFeerates(main_feerates);\n+    }\n+    // Do the same for the Clusters in staging themselves.\n+    for (int quality = 0; quality < int(QualityLevel::NONE); ++quality) {\n+        for (const auto& cluster : m_staging_clusterset->m_clusters[quality]) {\n+            cluster->AppendChunkFeerates(staging_feerates);\n+        }\n+    }\n+    // Sort both by decreasing feerate to obtain diagrams, and return them.\n+    std::sort(main_feerates.begin(), main_feerates.end(), [](auto& a, auto& b) { return a >> b; });\n+    std::sort(staging_feerates.begin(), staging_feerates.end(), [](auto& a, auto& b) { return a >> b; });",
      "path": "src/txgraph.cpp",
      "position": null,
      "original_position": 57,
      "commit_id": "27a0c93abb7e70b93214eb857e2046f848139e68",
      "original_commit_id": "899ce12b59a3f503fa047e3e0125aacfa928a125",
      "in_reply_to_id": 2016650965,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": ">  I guess the advantage of the on-the-fly heap would be that you may never have to calculate the ordering for some chunks in the middle of the mempool\r\n\r\nThis is possible even with the existing index-based structure, by allowing chunk feerates to be indeterminate, and index them by a known lower and upper bound. That would necessitate two precomputed indexes (one for block building, sorted by the upper bound; one for eviction, sorted by the lower bound), and relinearizing whatever cluster was found on the fly during block building eviction. If we ever do the [absorption set](https://delvingbitcoin.org/t/cluster-mempool-block-building-with-sub-chunk-granularity/1044) idea, we'd also need two indexes, so that's not necessarily a very high cost.\r\n\r\nBut I'm not sure any of this is worth it, because it doesn't really improve the worst case, where you can have successive indidividual transactions that each interact with many of the same clusters (e.g. conflict with a transaction in many of them), requiring relinearizing all of them anyway.\r\n\r\n---\r\n\r\n> Another thought: consider the \"virtual Cluster class\" idea, but instead of special casing each standalone tx into a custom single-tx-Cluster, you could have a single cluster for all the standalone txs. \r\n\r\nA downside here is that the \"linearization\" for this fat singletons cluster would be O(n log n) to update on every operation involving a singleton, which may be substantial if there are 1000s of singletons?\r\n\r\nA variation on this idea though: add a new QualityLevel::SINGLETON, and allow many singleton clusters at the same time, each individually limited to 64 (or whatever) singleton transactions. This might not even need the virtual class idea.\r\n",
      "created_at": "2025-03-29T13:00:27Z",
      "updated_at": "2025-03-29T13:00:27Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31444#discussion_r2019792536",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2019792536"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31444"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2090,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2019899624",
      "pull_request_review_id": 2727571769,
      "id": 2019899624,
      "node_id": "PRRC_kwDOABII5854ZTjo",
      "diff_hunk": "@@ -167,6 +169,28 @@ class TxGraph\n      *  so CompareChunks is usable without type-conversion. */\n     virtual std::pair<std::vector<FeeFrac>, std::vector<FeeFrac>> GetMainStagingDiagrams() noexcept = 0;\n \n+    /** Interface returned by GetBlockBuilder. */\n+    class BlockBuilder\n+    {\n+    protected:\n+        /** Make constructor non-public (use TxGraph::GetBlockBuilder()). */\n+        BlockBuilder() noexcept = default;\n+    public:\n+        /** Support safe inheritance. */\n+        virtual ~BlockBuilder() = default;\n+        /** Get the chunk that is currently suggested to be included, plus its feerate, if any. */\n+        virtual std::optional<std::pair<std::vector<Ref*>, FeePerWeight>> GetCurrentChunk() noexcept = 0;\n+        /** Mark the current chunk as included, and progress to the next one. */\n+        virtual void Include() noexcept = 0;\n+        /** Mark the current chunk as skipped, and progress to the next one. Further chunks from\n+         *  the same cluster as the current one will not be reported anymore. */\n+        virtual void Skip() noexcept = 0;\n+    };\n+\n+    /** Construct a block builder, drawing chunks in order, from the main graph, which cannot be\n+     *  oversized. While the returned object exists, no mutators on the main graph are allowed. */",
      "path": "src/txgraph.h",
      "position": null,
      "original_position": 36,
      "commit_id": "27a0c93abb7e70b93214eb857e2046f848139e68",
      "original_commit_id": "545812c3a32717d895710cf266ed30325f888246",
      "in_reply_to_id": 2019028001,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Sorry, that the builder *doesn't* outlive the graph. I was testing to see what happens when it *does* outlive it, and it's not crashing currently.",
      "created_at": "2025-03-29T17:57:22Z",
      "updated_at": "2025-03-29T17:57:22Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31444#discussion_r2019899624",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2019899624"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31444"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 191,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2019900371",
      "pull_request_review_id": 2727573203,
      "id": 2019900371,
      "node_id": "PRRC_kwDOABII5854ZTvT",
      "diff_hunk": "@@ -1675,6 +1677,8 @@ void Cluster::GetClusterRefs(TxGraphImpl& graph, std::span<TxGraph::Ref*> range,\n         Assume(entry.m_ref != nullptr);\n         ref = entry.m_ref;\n     }\n+    // Return whether this was the end of the Cluster.\n+    return start_pos == m_linearization.size();",
      "path": "src/txgraph.cpp",
      "position": 647,
      "original_position": 36,
      "commit_id": "27a0c93abb7e70b93214eb857e2046f848139e68",
      "original_commit_id": "a0e19959e85b2ce1a90902ab1e3fe274f9d63a1d",
      "in_reply_to_id": 2019118491,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "feel free to resolve ",
      "created_at": "2025-03-29T17:58:28Z",
      "updated_at": "2025-03-29T17:58:28Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31444#discussion_r2019900371",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2019900371"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31444"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 1704,
      "original_line": 1704,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2020250395",
      "pull_request_review_id": 2728005270,
      "id": 2020250395,
      "node_id": "PRRC_kwDOABII5854apMb",
      "diff_hunk": "@@ -1901,6 +1911,32 @@ TxGraph::GraphIndex TxGraphImpl::CountDistinctClusters(std::span<const Ref* cons\n     return ret;\n }\n \n+std::pair<std::vector<FeeFrac>, std::vector<FeeFrac>> TxGraphImpl::GetMainStagingDiagrams() noexcept\n+{\n+    Assume(m_staging_clusterset.has_value());\n+    MakeAllAcceptable(MAIN_LEVEL);\n+    Assume(m_main_clusterset.m_deps_to_add.empty());\n+    MakeAllAcceptable(STAGING_LEVEL);\n+    Assume(m_staging_clusterset->m_deps_to_add.empty());\n+    // For all Clusters in main which conflict with Clusters in staging (i.e., all that are removed\n+    // by, or replaced in, staging), gather their chunk feerates.\n+    auto main_clusters = GetConflicts();\n+    std::vector<FeeFrac> main_feerates, staging_feerates;\n+    for (Cluster* cluster : main_clusters) {\n+        cluster->AppendChunkFeerates(main_feerates);\n+    }\n+    // Do the same for the Clusters in staging themselves.\n+    for (int quality = 0; quality < int(QualityLevel::NONE); ++quality) {\n+        for (const auto& cluster : m_staging_clusterset->m_clusters[quality]) {\n+            cluster->AppendChunkFeerates(staging_feerates);\n+        }\n+    }\n+    // Sort both by decreasing feerate to obtain diagrams, and return them.\n+    std::sort(main_feerates.begin(), main_feerates.end(), [](auto& a, auto& b) { return a >> b; });\n+    std::sort(staging_feerates.begin(), staging_feerates.end(), [](auto& a, auto& b) { return a >> b; });",
      "path": "src/txgraph.cpp",
      "position": null,
      "original_position": 57,
      "commit_id": "27a0c93abb7e70b93214eb857e2046f848139e68",
      "original_commit_id": "899ce12b59a3f503fa047e3e0125aacfa928a125",
      "in_reply_to_id": 2016650965,
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "> A downside here is that the \"linearization\" for this fat singletons cluster would be O(n log n) to update on every operation involving a singleton, which may be substantial if there are 1000s of singletons?\r\n\r\nI don't think that's true? You'd just store the linearisation as part of the special cluster implementation as a std::set by feerate order, for O(lg n) modification and O(n) reporting? I guess it would be better to call that class something other than \"cluster\", since you'd probably want `GetCluster(singleton)` to just return the singleton, and `CountDistinctClusters({singleton1, singleton2})` to return 2, etc.\r\n\r\n> A variation on this idea though: add a new QualityLevel::SINGLETON, and allow many singleton clusters at the same time, each individually limited to 64 (or whatever) singleton transactions. This might not even need the virtual class idea.\r\n\r\nHmm, maybe -- you could find a new child tx would spend 63 txs from 63 different singleton clusters, but I don't know if there's anything about that that would be worse than the number of clusters you could impact by conflicting with pre-existing txs; and 63*64 is only 4032 which doesn't sound very scary... Big mempools seem like they might contain up to 175k txs (300MB limit; or 350k txs unlimited), if they were all singletons, dividing by 64 gives just 2700 (or 5500) clusters, which seems nice. (I guess you'd need something to keep track of which existing singleton clusters aren't full and can be added to)",
      "created_at": "2025-03-30T20:53:49Z",
      "updated_at": "2025-03-30T20:53:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31444#discussion_r2020250395",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2020250395"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31444"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2090,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2020995996",
      "pull_request_review_id": 2729193453,
      "id": 2020995996,
      "node_id": "PRRC_kwDOABII5854dfOc",
      "diff_hunk": "@@ -162,6 +162,10 @@ class TxGraph\n      *  main clusters are counted. Refs that do not exist in the queried graph are ignored. The\n      *  queried graph must not be oversized. */\n     virtual GraphIndex CountDistinctClusters(std::span<const Ref* const>, bool main_only = false) noexcept = 0;\n+    /** Get feerate diagrams for both main and staging (which must both exist and not be",
      "path": "src/txgraph.h",
      "position": null,
      "original_position": 4,
      "commit_id": "27a0c93abb7e70b93214eb857e2046f848139e68",
      "original_commit_id": "dac4d915a4ebe9c4051b8b0f68c3d75162d627b5",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Actually we need to define exactly what a feerate diagram is here given it could mean a couple things. i.e., it's not the aggregated form, but a series of monotonically decreasing in feerate chunks",
      "created_at": "2025-03-31T12:57:11Z",
      "updated_at": "2025-03-31T17:24:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31444#discussion_r2020995996",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2020995996"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31444"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 165,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2020997878",
      "pull_request_review_id": 2729193453,
      "id": 2020997878,
      "node_id": "PRRC_kwDOABII5854dfr2",
      "diff_hunk": "@@ -162,6 +162,10 @@ class TxGraph\n      *  main clusters are counted. Refs that do not exist in the queried graph are ignored. The\n      *  queried graph must not be oversized. */\n     virtual GraphIndex CountDistinctClusters(std::span<const Ref* const>, bool main_only = false) noexcept = 0;\n+    /** Get feerate diagrams for both main and staging (which must both exist and not be",
      "path": "src/txgraph.h",
      "position": null,
      "original_position": 4,
      "commit_id": "27a0c93abb7e70b93214eb857e2046f848139e68",
      "original_commit_id": "dac4d915a4ebe9c4051b8b0f68c3d75162d627b5",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "```Suggestion\r\n    /** Get feerate diagrams for both main and staging respectively (which must both exist and not be\r\n```\r\nor be even more pedantic about ordering",
      "created_at": "2025-03-31T12:58:29Z",
      "updated_at": "2025-03-31T17:24:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31444#discussion_r2020997878",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2020997878"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31444"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 165,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2021048633",
      "pull_request_review_id": 2729193453,
      "id": 2021048633,
      "node_id": "PRRC_kwDOABII5854dsE5",
      "diff_hunk": "@@ -524,17 +582,25 @@ void Cluster::Updated(TxGraphImpl& graph) noexcept\n         // Iterate over the chunks.\n         for (unsigned chunk_idx = 0; chunk_idx < chunking.NumChunksLeft(); ++chunk_idx) {",
      "path": "src/txgraph.cpp",
      "position": 277,
      "original_position": 97,
      "commit_id": "27a0c93abb7e70b93214eb857e2046f848139e68",
      "original_commit_id": "1a9fb7fd5ac717addfe1350e81dd4e44cf09b4ad",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "hindsight nit: `chunking` could be `const` to make it clear loop end condition isn't being modified",
      "created_at": "2025-03-31T13:27:57Z",
      "updated_at": "2025-03-31T17:24:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31444#discussion_r2021048633",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2021048633"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31444"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 672,
      "original_line": 672,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2021150749",
      "pull_request_review_id": 2729193453,
      "id": 2021150749,
      "node_id": "PRRC_kwDOABII5854eFAd",
      "diff_hunk": "@@ -2239,6 +2271,87 @@ void TxGraphImpl::DoWork() noexcept\n     }\n }\n \n+void BlockBuilderImpl::Next() noexcept\n+{\n+    // Don't do anything if we're already done.\n+    if (m_cur_iter == m_graph->m_main_chunkindex.end()) return;\n+    while (true) {\n+        // Advance the pointer, and stop if we reach the end.\n+        ++m_cur_iter;\n+        m_cur_cluster = nullptr;\n+        if (m_cur_iter == m_graph->m_main_chunkindex.end()) break;\n+        // Find the cluster pointed to by m_cur_iter.\n+        const auto& chunk_data = *m_cur_iter;\n+        const auto& chunk_end_entry = m_graph->m_entries[chunk_data.m_graph_index];\n+        m_cur_cluster = chunk_end_entry.m_locator[0].cluster;\n+        // If we previously skipped a chunk from this cluster we cannot include more from it.\n+        if (!m_excluded_clusters.contains(m_cur_cluster)) break;\n+    }\n+}\n+\n+std::optional<std::pair<std::vector<TxGraph::Ref*>, FeePerWeight>> BlockBuilderImpl::GetCurrentChunk() noexcept\n+{\n+    std::optional<std::pair<std::vector<TxGraph::Ref*>, FeePerWeight>> ret;\n+    // Populate the return value if we are not done.\n+    if (m_cur_iter != m_graph->m_main_chunkindex.end()) {\n+        ret.emplace();\n+        const auto& chunk_data = *m_cur_iter;\n+        const auto& chunk_end_entry = m_graph->m_entries[chunk_data.m_graph_index];\n+        ret->first.resize(chunk_data.m_chunk_count);\n+        auto start_pos = chunk_end_entry.m_main_lin_index + 1 - chunk_data.m_chunk_count;\n+        m_cur_cluster->GetClusterRefs(*m_graph, ret->first, start_pos);",
      "path": "src/txgraph.cpp",
      "position": null,
      "original_position": 94,
      "commit_id": "27a0c93abb7e70b93214eb857e2046f848139e68",
      "original_commit_id": "f01ce7f2c9d50a95bb7c694028525c8cc3112a56",
      "in_reply_to_id": null,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "f01ce7f2c9d50a95bb7c694028525c8cc3112a56\r\n```Suggestion\r\n        Assume(m_cur_cluster);\r\n        m_cur_cluster->GetClusterRefs(*m_graph, ret->first, start_pos);\r\n```",
      "created_at": "2025-03-31T14:22:01Z",
      "updated_at": "2025-03-31T17:24:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31444#discussion_r2021150749",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2021150749"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31444"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2302,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2021185973",
      "pull_request_review_id": 2729193453,
      "id": 2021185973,
      "node_id": "PRRC_kwDOABII5854eNm1",
      "diff_hunk": "@@ -279,6 +290,39 @@ FUZZ_TARGET(txgraph)\n         return &empty_ref;\n     };\n \n+    /** Function to construct the correct fee-size diagram a real graph has based on its graph\n+     *  order (as reported by GetCluster(), so it works for both main and staging). */\n+    auto get_diagram_fn = [&](bool main_only) -> std::vector<FeeFrac> {\n+        int level = main_only ? 0 : sims.size() - 1;\n+        auto& sim = sims[level];\n+        // For every transaction in the graph, request its cluster, and throw them into a set.\n+        std::set<std::vector<TxGraph::Ref*>> clusters;\n+        for (auto i : sim.graph.Positions()) {\n+            auto ref = sim.GetRef(i);\n+            clusters.insert(real->GetCluster(*ref, main_only));\n+        }\n+        // Compute the chunkings of each (deduplicated) cluster.\n+        size_t num_tx{0};\n+        std::vector<FeeFrac> ret;\n+        for (const auto& cluster : clusters) {\n+            num_tx += cluster.size();\n+            std::vector<SimTxGraph::Pos> linearization;\n+            linearization.reserve(cluster.size());\n+            for (auto refptr : cluster) linearization.push_back(sim.Find(refptr));\n+            for (const FeeFrac& chunk_feerate : ChunkLinearization(sim.graph, linearization)) {\n+                ret.push_back(chunk_feerate);\n+            }\n+        }\n+        // Verify the number of transactions after deduplicating clusters. This implicitly verifies\n+        // that GetCluster on each element of a cluster reports the cluster transactions in the same\n+        // order.\n+        assert(num_tx == sim.GetTransactionCount());\n+        // Sort by feerate (we don't care about respecting ordering within clusters, as these are",
      "path": "src/test/fuzz/txgraph.cpp",
      "position": null,
      "original_position": 56,
      "commit_id": "27a0c93abb7e70b93214eb857e2046f848139e68",
      "original_commit_id": "f4c8848c7ca87a463d4d0841d354a59f64c2d20c",
      "in_reply_to_id": 2018744853,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Yeah I think no comment at all is better than as-is, but maybe we can just point exactly to what case this is ignoring as safe?\r\n\r\n\"Sort by feerate only, since violating topological constraints within same-feerate chunks won't affect diagram comparisons.\"",
      "created_at": "2025-03-31T14:39:15Z",
      "updated_at": "2025-03-31T17:24:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31444#discussion_r2021185973",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2021185973"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31444"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 351,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2021186944",
      "pull_request_review_id": 2729193453,
      "id": 2021186944,
      "node_id": "PRRC_kwDOABII5854eN2A",
      "diff_hunk": "@@ -636,6 +714,59 @@ FUZZ_TARGET(txgraph)\n                 assert(FeeRateCompare(after_feerate, pos_feerate) <= 0);\n             }\n         }\n+\n+        // Check that the implied ordering gives rise to a combined diagram that matches the\n+        // diagram constructed from the individual cluster linearization chunkings.\n+        auto main_real_diagram = get_diagram_fn(/*main_only=*/true);\n+        auto main_implied_diagram = ChunkLinearization(sims[0].graph, vec1);\n+        assert(CompareChunks(main_real_diagram, main_implied_diagram) == 0);\n+\n+        if (sims.size() >= 2 && !sims[1].IsOversized()) {\n+            // When the staging graph is not oversized as well, call GetMainStagingDiagrams, and\n+            // fully verify the result.\n+            auto [main_cmp_diagram, stage_cmp_diagram] = real->GetMainStagingDiagrams();\n+            // Check that the feerates in each diagram are monotonically decreasing.\n+            for (size_t i = 1; i < main_cmp_diagram.size(); ++i) {\n+                assert(FeeRateCompare(main_cmp_diagram[i], main_cmp_diagram[i - 1]) <= 0);\n+            }\n+            for (size_t i = 1; i < stage_cmp_diagram.size(); ++i) {\n+                assert(FeeRateCompare(stage_cmp_diagram[i], stage_cmp_diagram[i - 1]) <= 0);\n+            }\n+            // Treat the diagrams as sets of chunk feerates, and sort them in the same way so that\n+            // std::set_difference can be used on them below. The exact ordering does not matter\n+            // here, but it has to be consistent with the one used in main_diagram and\n+            // stage_diagram).\n+            std::sort(main_cmp_diagram.begin(), main_cmp_diagram.end(), std::greater{});\n+            std::sort(stage_cmp_diagram.begin(), stage_cmp_diagram.end(), std::greater{});\n+            // Find the chunks that appear in main_diagram but are missing from main_cmp_diagram.\n+            // This is allowed, because GetMainStagingDiagrams omits clusters in main unaffected\n+            // by staging.\n+            std::vector<FeeFrac> missing_main_cmp;\n+            std::set_difference(main_real_diagram.begin(), main_real_diagram.end(),\n+                                main_cmp_diagram.begin(), main_cmp_diagram.end(),\n+                                std::inserter(missing_main_cmp, missing_main_cmp.end()),\n+                                std::greater{});\n+            assert(main_cmp_diagram.size() + missing_main_cmp.size() == main_real_diagram.size());\n+            // Do the same for chunks in stage_diagram missing from stage_cmp_diagram.\n+            auto stage_real_diagram = get_diagram_fn(false);\n+            std::vector<FeeFrac> missing_stage_cmp;\n+            std::set_difference(stage_real_diagram.begin(), stage_real_diagram.end(),\n+                                stage_cmp_diagram.begin(), stage_cmp_diagram.end(),\n+                                std::inserter(missing_stage_cmp, missing_stage_cmp.end()),\n+                                std::greater{});\n+            assert(stage_cmp_diagram.size() + missing_stage_cmp.size() == stage_real_diagram.size());\n+            // The missing chunks must be equal across main & staging (otherwise they couldn't have\n+            // been omitted).\n+            assert(missing_main_cmp == missing_stage_cmp);\n+            // The missing part must include at least all transactions in staging which have not been\n+            // modified, or been in a cluster together with modified transactions, since they were\n+            // copied from main. Note that due to the reordering of removals w.r.t. dependency\n+            // additions, it is possible that the real implementation found more unaffected things.\n+            FeeFrac missing_real;\n+            for (const auto& feerate : missing_main_cmp) missing_real += feerate;",
      "path": "src/test/fuzz/txgraph.cpp",
      "position": 427,
      "original_position": 218,
      "commit_id": "27a0c93abb7e70b93214eb857e2046f848139e68",
      "original_commit_id": "50f173e0b3182f6e84be41afc9a68d7943d47394",
      "in_reply_to_id": 2018829062,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "not worth the nit, mark as resolved please",
      "created_at": "2025-03-31T14:39:48Z",
      "updated_at": "2025-03-31T17:24:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31444#discussion_r2021186944",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2021186944"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31444"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 909,
      "original_line": 909,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2021344681",
      "pull_request_review_id": 2729193453,
      "id": 2021344681,
      "node_id": "PRRC_kwDOABII5854e0Wp",
      "diff_hunk": "@@ -167,6 +169,28 @@ class TxGraph\n      *  so CompareChunks is usable without type-conversion. */\n     virtual std::pair<std::vector<FeeFrac>, std::vector<FeeFrac>> GetMainStagingDiagrams() noexcept = 0;\n \n+    /** Interface returned by GetBlockBuilder. */\n+    class BlockBuilder\n+    {\n+    protected:\n+        /** Make constructor non-public (use TxGraph::GetBlockBuilder()). */\n+        BlockBuilder() noexcept = default;\n+    public:\n+        /** Support safe inheritance. */\n+        virtual ~BlockBuilder() = default;\n+        /** Get the chunk that is currently suggested to be included, plus its feerate, if any. */\n+        virtual std::optional<std::pair<std::vector<Ref*>, FeePerWeight>> GetCurrentChunk() noexcept = 0;\n+        /** Mark the current chunk as included, and progress to the next one. */\n+        virtual void Include() noexcept = 0;\n+        /** Mark the current chunk as skipped, and progress to the next one. Further chunks from\n+         *  the same cluster as the current one will not be reported anymore. */",
      "path": "src/txgraph.h",
      "position": 37,
      "original_position": 31,
      "commit_id": "27a0c93abb7e70b93214eb857e2046f848139e68",
      "original_commit_id": "545812c3a32717d895710cf266ed30325f888246",
      "in_reply_to_id": 2019046931,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "both cases could use fuzz coverage :pray: ",
      "created_at": "2025-03-31T16:13:20Z",
      "updated_at": "2025-03-31T17:24:47Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31444#discussion_r2021344681",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2021344681"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31444"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 187,
      "original_line": 187,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2029264772",
      "pull_request_review_id": 2743815395,
      "id": 2029264772,
      "node_id": "PRRC_kwDOABII58549B-E",
      "diff_hunk": "@@ -167,6 +169,28 @@ class TxGraph\n      *  so CompareChunks is usable without type-conversion. */\n     virtual std::pair<std::vector<FeeFrac>, std::vector<FeeFrac>> GetMainStagingDiagrams() noexcept = 0;\n \n+    /** Interface returned by GetBlockBuilder. */\n+    class BlockBuilder\n+    {\n+    protected:\n+        /** Make constructor non-public (use TxGraph::GetBlockBuilder()). */\n+        BlockBuilder() noexcept = default;\n+    public:\n+        /** Support safe inheritance. */\n+        virtual ~BlockBuilder() = default;\n+        /** Get the chunk that is currently suggested to be included, plus its feerate, if any. */\n+        virtual std::optional<std::pair<std::vector<Ref*>, FeePerWeight>> GetCurrentChunk() noexcept = 0;\n+        /** Mark the current chunk as included, and progress to the next one. */\n+        virtual void Include() noexcept = 0;\n+        /** Mark the current chunk as skipped, and progress to the next one. Further chunks from\n+         *  the same cluster as the current one will not be reported anymore. */",
      "path": "src/txgraph.h",
      "position": 37,
      "original_position": 31,
      "commit_id": "27a0c93abb7e70b93214eb857e2046f848139e68",
      "original_commit_id": "545812c3a32717d895710cf266ed30325f888246",
      "in_reply_to_id": 2019046931,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I think there is? `BlockBuilderData::done` and `BuilderData::included` track what future `GetCurrentChunk` values are allowed.",
      "created_at": "2025-04-04T18:27:38Z",
      "updated_at": "2025-04-04T18:30:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31444#discussion_r2029264772",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2029264772"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31444"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 187,
      "original_line": 187,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2029265611",
      "pull_request_review_id": 2743815395,
      "id": 2029265611,
      "node_id": "PRRC_kwDOABII58549CLL",
      "diff_hunk": "@@ -524,17 +582,25 @@ void Cluster::Updated(TxGraphImpl& graph) noexcept\n         // Iterate over the chunks.\n         for (unsigned chunk_idx = 0; chunk_idx < chunking.NumChunksLeft(); ++chunk_idx) {",
      "path": "src/txgraph.cpp",
      "position": 277,
      "original_position": 97,
      "commit_id": "27a0c93abb7e70b93214eb857e2046f848139e68",
      "original_commit_id": "1a9fb7fd5ac717addfe1350e81dd4e44cf09b4ad",
      "in_reply_to_id": 2021048633,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done (in \"Maintain chunk index\" commit).",
      "created_at": "2025-04-04T18:28:20Z",
      "updated_at": "2025-04-04T18:30:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31444#discussion_r2029265611",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2029265611"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31444"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 672,
      "original_line": 672,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2029266792",
      "pull_request_review_id": 2743815395,
      "id": 2029266792,
      "node_id": "PRRC_kwDOABII58549Cdo",
      "diff_hunk": "@@ -279,6 +290,39 @@ FUZZ_TARGET(txgraph)\n         return &empty_ref;\n     };\n \n+    /** Function to construct the correct fee-size diagram a real graph has based on its graph\n+     *  order (as reported by GetCluster(), so it works for both main and staging). */\n+    auto get_diagram_fn = [&](bool main_only) -> std::vector<FeeFrac> {\n+        int level = main_only ? 0 : sims.size() - 1;\n+        auto& sim = sims[level];\n+        // For every transaction in the graph, request its cluster, and throw them into a set.\n+        std::set<std::vector<TxGraph::Ref*>> clusters;\n+        for (auto i : sim.graph.Positions()) {\n+            auto ref = sim.GetRef(i);\n+            clusters.insert(real->GetCluster(*ref, main_only));\n+        }\n+        // Compute the chunkings of each (deduplicated) cluster.\n+        size_t num_tx{0};\n+        std::vector<FeeFrac> ret;\n+        for (const auto& cluster : clusters) {\n+            num_tx += cluster.size();\n+            std::vector<SimTxGraph::Pos> linearization;\n+            linearization.reserve(cluster.size());\n+            for (auto refptr : cluster) linearization.push_back(sim.Find(refptr));\n+            for (const FeeFrac& chunk_feerate : ChunkLinearization(sim.graph, linearization)) {\n+                ret.push_back(chunk_feerate);\n+            }\n+        }\n+        // Verify the number of transactions after deduplicating clusters. This implicitly verifies\n+        // that GetCluster on each element of a cluster reports the cluster transactions in the same\n+        // order.\n+        assert(num_tx == sim.GetTransactionCount());\n+        // Sort by feerate (we don't care about respecting ordering within clusters, as these are",
      "path": "src/test/fuzz/txgraph.cpp",
      "position": null,
      "original_position": 56,
      "commit_id": "27a0c93abb7e70b93214eb857e2046f848139e68",
      "original_commit_id": "f4c8848c7ca87a463d4d0841d354a59f64c2d20c",
      "in_reply_to_id": 2018744853,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "That captures it perfectly. Done.",
      "created_at": "2025-04-04T18:29:20Z",
      "updated_at": "2025-04-04T18:30:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31444#discussion_r2029266792",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2029266792"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31444"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 351,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2029267127",
      "pull_request_review_id": 2743815395,
      "id": 2029267127,
      "node_id": "PRRC_kwDOABII58549Ci3",
      "diff_hunk": "@@ -2239,6 +2271,87 @@ void TxGraphImpl::DoWork() noexcept\n     }\n }\n \n+void BlockBuilderImpl::Next() noexcept\n+{\n+    // Don't do anything if we're already done.\n+    if (m_cur_iter == m_graph->m_main_chunkindex.end()) return;\n+    while (true) {\n+        // Advance the pointer, and stop if we reach the end.\n+        ++m_cur_iter;\n+        m_cur_cluster = nullptr;\n+        if (m_cur_iter == m_graph->m_main_chunkindex.end()) break;\n+        // Find the cluster pointed to by m_cur_iter.\n+        const auto& chunk_data = *m_cur_iter;\n+        const auto& chunk_end_entry = m_graph->m_entries[chunk_data.m_graph_index];\n+        m_cur_cluster = chunk_end_entry.m_locator[0].cluster;\n+        // If we previously skipped a chunk from this cluster we cannot include more from it.\n+        if (!m_excluded_clusters.contains(m_cur_cluster)) break;\n+    }\n+}\n+\n+std::optional<std::pair<std::vector<TxGraph::Ref*>, FeePerWeight>> BlockBuilderImpl::GetCurrentChunk() noexcept\n+{\n+    std::optional<std::pair<std::vector<TxGraph::Ref*>, FeePerWeight>> ret;\n+    // Populate the return value if we are not done.\n+    if (m_cur_iter != m_graph->m_main_chunkindex.end()) {\n+        ret.emplace();\n+        const auto& chunk_data = *m_cur_iter;\n+        const auto& chunk_end_entry = m_graph->m_entries[chunk_data.m_graph_index];\n+        ret->first.resize(chunk_data.m_chunk_count);\n+        auto start_pos = chunk_end_entry.m_main_lin_index + 1 - chunk_data.m_chunk_count;\n+        m_cur_cluster->GetClusterRefs(*m_graph, ret->first, start_pos);",
      "path": "src/txgraph.cpp",
      "position": null,
      "original_position": 94,
      "commit_id": "27a0c93abb7e70b93214eb857e2046f848139e68",
      "original_commit_id": "f01ce7f2c9d50a95bb7c694028525c8cc3112a56",
      "in_reply_to_id": 2021150749,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Done, though the `Assume(m_cur_cluster)` disappears again in a later commit.",
      "created_at": "2025-04-04T18:29:40Z",
      "updated_at": "2025-04-04T18:30:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31444#discussion_r2029267127",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2029267127"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31444"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 2302,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2029267355",
      "pull_request_review_id": 2743815395,
      "id": 2029267355,
      "node_id": "PRRC_kwDOABII58549Cmb",
      "diff_hunk": "@@ -162,6 +162,10 @@ class TxGraph\n      *  main clusters are counted. Refs that do not exist in the queried graph are ignored. The\n      *  queried graph must not be oversized. */\n     virtual GraphIndex CountDistinctClusters(std::span<const Ref* const>, bool main_only = false) noexcept = 0;\n+    /** Get feerate diagrams for both main and staging (which must both exist and not be",
      "path": "src/txgraph.h",
      "position": null,
      "original_position": 4,
      "commit_id": "27a0c93abb7e70b93214eb857e2046f848139e68",
      "original_commit_id": "dac4d915a4ebe9c4051b8b0f68c3d75162d627b5",
      "in_reply_to_id": 2020997878,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I have rewritten this.",
      "created_at": "2025-04-04T18:29:50Z",
      "updated_at": "2025-04-04T18:30:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31444#discussion_r2029267355",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2029267355"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31444"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 165,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2029267464",
      "pull_request_review_id": 2743815395,
      "id": 2029267464,
      "node_id": "PRRC_kwDOABII58549CoI",
      "diff_hunk": "@@ -162,6 +162,10 @@ class TxGraph\n      *  main clusters are counted. Refs that do not exist in the queried graph are ignored. The\n      *  queried graph must not be oversized. */\n     virtual GraphIndex CountDistinctClusters(std::span<const Ref* const>, bool main_only = false) noexcept = 0;\n+    /** Get feerate diagrams for both main and staging (which must both exist and not be",
      "path": "src/txgraph.h",
      "position": null,
      "original_position": 4,
      "commit_id": "27a0c93abb7e70b93214eb857e2046f848139e68",
      "original_commit_id": "dac4d915a4ebe9c4051b8b0f68c3d75162d627b5",
      "in_reply_to_id": 2020995996,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "I have rewritten this.",
      "created_at": "2025-04-04T18:29:58Z",
      "updated_at": "2025-04-04T18:30:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31444#discussion_r2029267464",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2029267464"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31444"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 165,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2031568114",
      "pull_request_review_id": 2747370243,
      "id": 2031568114,
      "node_id": "PRRC_kwDOABII5855F0Ty",
      "diff_hunk": "@@ -167,6 +169,28 @@ class TxGraph\n      *  so CompareChunks is usable without type-conversion. */\n     virtual std::pair<std::vector<FeeFrac>, std::vector<FeeFrac>> GetMainStagingDiagrams() noexcept = 0;\n \n+    /** Interface returned by GetBlockBuilder. */\n+    class BlockBuilder\n+    {\n+    protected:\n+        /** Make constructor non-public (use TxGraph::GetBlockBuilder()). */\n+        BlockBuilder() noexcept = default;\n+    public:\n+        /** Support safe inheritance. */\n+        virtual ~BlockBuilder() = default;\n+        /** Get the chunk that is currently suggested to be included, plus its feerate, if any. */\n+        virtual std::optional<std::pair<std::vector<Ref*>, FeePerWeight>> GetCurrentChunk() noexcept = 0;\n+        /** Mark the current chunk as included, and progress to the next one. */\n+        virtual void Include() noexcept = 0;\n+        /** Mark the current chunk as skipped, and progress to the next one. Further chunks from\n+         *  the same cluster as the current one will not be reported anymore. */",
      "path": "src/txgraph.h",
      "position": 37,
      "original_position": 31,
      "commit_id": "27a0c93abb7e70b93214eb857e2046f848139e68",
      "original_commit_id": "545812c3a32717d895710cf266ed30325f888246",
      "in_reply_to_id": 2019046931,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "If the top `GetCurrentChunk` returns nullopt, it hits an early `break`. so it doesn't get to hit a no-op Skip/Include?",
      "created_at": "2025-04-07T16:04:50Z",
      "updated_at": "2025-04-07T16:04:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31444#discussion_r2031568114",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2031568114"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31444"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 187,
      "original_line": 187,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2031646274",
      "pull_request_review_id": 2747497865,
      "id": 2031646274,
      "node_id": "PRRC_kwDOABII5855GHZC",
      "diff_hunk": "@@ -167,6 +169,28 @@ class TxGraph\n      *  so CompareChunks is usable without type-conversion. */\n     virtual std::pair<std::vector<FeeFrac>, std::vector<FeeFrac>> GetMainStagingDiagrams() noexcept = 0;\n \n+    /** Interface returned by GetBlockBuilder. */\n+    class BlockBuilder\n+    {\n+    protected:\n+        /** Make constructor non-public (use TxGraph::GetBlockBuilder()). */\n+        BlockBuilder() noexcept = default;\n+    public:\n+        /** Support safe inheritance. */\n+        virtual ~BlockBuilder() = default;\n+        /** Get the chunk that is currently suggested to be included, plus its feerate, if any. */\n+        virtual std::optional<std::pair<std::vector<Ref*>, FeePerWeight>> GetCurrentChunk() noexcept = 0;\n+        /** Mark the current chunk as included, and progress to the next one. */\n+        virtual void Include() noexcept = 0;\n+        /** Mark the current chunk as skipped, and progress to the next one. Further chunks from\n+         *  the same cluster as the current one will not be reported anymore. */",
      "path": "src/txgraph.h",
      "position": 37,
      "original_position": 31,
      "commit_id": "27a0c93abb7e70b93214eb857e2046f848139e68",
      "original_commit_id": "545812c3a32717d895710cf266ed30325f888246",
      "in_reply_to_id": 2019046931,
      "user": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Fixed, I think!",
      "created_at": "2025-04-07T16:55:48Z",
      "updated_at": "2025-04-07T16:55:48Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31444#discussion_r2031646274",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2031646274"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31444"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 187,
      "original_line": 187,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2031664039",
      "pull_request_review_id": 2747527085,
      "id": 2031664039,
      "node_id": "PRRC_kwDOABII5855GLun",
      "diff_hunk": "@@ -167,6 +169,28 @@ class TxGraph\n      *  so CompareChunks is usable without type-conversion. */\n     virtual std::pair<std::vector<FeeFrac>, std::vector<FeeFrac>> GetMainStagingDiagrams() noexcept = 0;\n \n+    /** Interface returned by GetBlockBuilder. */\n+    class BlockBuilder\n+    {\n+    protected:\n+        /** Make constructor non-public (use TxGraph::GetBlockBuilder()). */\n+        BlockBuilder() noexcept = default;\n+    public:\n+        /** Support safe inheritance. */\n+        virtual ~BlockBuilder() = default;\n+        /** Get the chunk that is currently suggested to be included, plus its feerate, if any. */\n+        virtual std::optional<std::pair<std::vector<Ref*>, FeePerWeight>> GetCurrentChunk() noexcept = 0;\n+        /** Mark the current chunk as included, and progress to the next one. */\n+        virtual void Include() noexcept = 0;\n+        /** Mark the current chunk as skipped, and progress to the next one. Further chunks from\n+         *  the same cluster as the current one will not be reported anymore. */",
      "path": "src/txgraph.h",
      "position": 37,
      "original_position": 31,
      "commit_id": "27a0c93abb7e70b93214eb857e2046f848139e68",
      "original_commit_id": "545812c3a32717d895710cf266ed30325f888246",
      "in_reply_to_id": 2019046931,
      "user": {
        "login": "instagibbs",
        "id": 5767891,
        "node_id": "MDQ6VXNlcjU3Njc4OTE=",
        "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/instagibbs",
        "html_url": "https://github.com/instagibbs",
        "followers_url": "https://api.github.com/users/instagibbs/followers",
        "following_url": "https://api.github.com/users/instagibbs/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/instagibbs/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/instagibbs/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
        "organizations_url": "https://api.github.com/users/instagibbs/orgs",
        "repos_url": "https://api.github.com/users/instagibbs/repos",
        "events_url": "https://api.github.com/users/instagibbs/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/instagibbs/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "looks right, and instantly crashes when I add an Assume in the right spot",
      "created_at": "2025-04-07T17:08:20Z",
      "updated_at": "2025-04-07T17:08:20Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/31444#discussion_r2031664039",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/2031664039"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/31444"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 187,
      "original_line": 187,
      "side": "RIGHT"
    }
  ]
}