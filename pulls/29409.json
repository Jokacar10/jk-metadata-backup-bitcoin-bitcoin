{
  "type": "pull",
  "pull": {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29409",
    "id": 1717651443,
    "node_id": "PR_kwDOABII585mYUfz",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/29409",
    "diff_url": "https://github.com/bitcoin/bitcoin/pull/29409.diff",
    "patch_url": "https://github.com/bitcoin/bitcoin/pull/29409.patch",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29409",
    "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29409/commits",
    "review_comments_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29409/comments",
    "review_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments%7B/number%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29409/comments",
    "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/64b833854a34d87cde4e0ca4173d75012c401a7a",
    "number": 29409,
    "state": "open",
    "locked": false,
    "maintainer_can_modify": true,
    "title": "multiprocess: Add capnp wrapper for Chain interface",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false,
      "patch_url": null
    },
    "body": "Changes making it possible to call `interface::Chain` over a socket.\r\n\r\nNote: The changes in this PR allow a `bitcoin-node` process to be controlled over a socket. The socket can either be an UNIX socket created by specifying the `-ipcbind` option, or it can be a socketpair created by a controlling process and passed to `bitcoin-node` via the `-ipcfd=<n>` with a file descriptor number. This PR is a dependency of #10102 which allows the wallet code to run in a separate process and use the `Chain` interface.\r\n\r\n---\r\n\r\nThis PR is part of the [process separation project](https://github.com/bitcoin/bitcoin/issues/28722).",
    "labels": [],
    "created_at": "2024-02-08T13:54:40Z",
    "updated_at": "2025-01-28T13:20:05Z",
    "mergeable": true,
    "mergeable_state": "blocked",
    "merge_commit_sha": "00570666011061ff8ff03bfaa24bcab3dde27b32",
    "assignees": [],
    "requested_reviewers": [
      {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    ],
    "requested_teams": [],
    "rebaseable": true,
    "head": {
      "label": "ryanofsky:pr/ipc-chain",
      "ref": "pr/ipc-chain",
      "sha": "64b833854a34d87cde4e0ca4173d75012c401a7a",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 69901633,
        "node_id": "MDEwOlJlcG9zaXRvcnk2OTkwMTYzMw==",
        "name": "bitcoin",
        "full_name": "ryanofsky/bitcoin",
        "owner": {
          "login": "ryanofsky",
          "id": 7133040,
          "node_id": "MDQ6VXNlcjcxMzMwNDA=",
          "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/ryanofsky",
          "html_url": "https://github.com/ryanofsky",
          "followers_url": "https://api.github.com/users/ryanofsky/followers",
          "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
          "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
          "repos_url": "https://api.github.com/users/ryanofsky/repos",
          "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
          "type": "User",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/ryanofsky/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": true,
        "url": "https://api.github.com/repos/ryanofsky/bitcoin",
        "archive_url": "https://api.github.com/repos/ryanofsky/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/ryanofsky/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/ryanofsky/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/ryanofsky/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/ryanofsky/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/ryanofsky/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/ryanofsky/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/ryanofsky/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/ryanofsky/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/ryanofsky/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/ryanofsky/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/ryanofsky/bitcoin/events",
        "forks_url": "https://api.github.com/repos/ryanofsky/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/ryanofsky/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/ryanofsky/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/ryanofsky/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/ryanofsky/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/ryanofsky/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/ryanofsky/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/ryanofsky/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/ryanofsky/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/ryanofsky/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/ryanofsky/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/ryanofsky/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/ryanofsky/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/ryanofsky/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/ryanofsky/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/ryanofsky/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:ryanofsky/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/ryanofsky/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/ryanofsky/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/ryanofsky/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/ryanofsky/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/ryanofsky/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/ryanofsky/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/ryanofsky/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/ryanofsky/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/ryanofsky/bitcoin/hooks",
        "svn_url": "https://github.com/ryanofsky/bitcoin",
        "homepage": "https://bitcoin.org/en/download",
        "language": "C++",
        "forks_count": 9,
        "stargazers_count": 15,
        "watchers_count": 15,
        "size": 274143,
        "default_branch": "master",
        "open_issues_count": 3,
        "is_template": false,
        "topics": [],
        "has_issues": false,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-01-27T19:07:46Z",
        "created_at": "2016-10-03T19:05:43Z",
        "updated_at": "2024-12-03T23:24:02Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "base": {
      "label": "bitcoin:master",
      "ref": "master",
      "sha": "22723c809a8abce415195693546e2a7c03e516c4",
      "user": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false,
        "patch_url": null
      },
      "repo": {
        "id": 1181927,
        "node_id": "MDEwOlJlcG9zaXRvcnkxMTgxOTI3",
        "name": "bitcoin",
        "full_name": "bitcoin/bitcoin",
        "owner": {
          "login": "bitcoin",
          "id": 528860,
          "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
          "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
          "gravatar_id": "",
          "url": "https://api.github.com/users/bitcoin",
          "html_url": "https://github.com/bitcoin",
          "followers_url": "https://api.github.com/users/bitcoin/followers",
          "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
          "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
          "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
          "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
          "organizations_url": "https://api.github.com/users/bitcoin/orgs",
          "repos_url": "https://api.github.com/users/bitcoin/repos",
          "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
          "received_events_url": "https://api.github.com/users/bitcoin/received_events",
          "type": "Organization",
          "site_admin": false,
          "patch_url": null
        },
        "private": false,
        "html_url": "https://github.com/bitcoin/bitcoin",
        "description": "Bitcoin Core integration/staging tree",
        "fork": false,
        "url": "https://api.github.com/repos/bitcoin/bitcoin",
        "archive_url": "https://api.github.com/repos/bitcoin/bitcoin/%7Barchive_format%7D%7B/ref%7D",
        "assignees_url": "https://api.github.com/repos/bitcoin/bitcoin/assignees%7B/user%7D",
        "blobs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/blobs%7B/sha%7D",
        "branches_url": "https://api.github.com/repos/bitcoin/bitcoin/branches%7B/branch%7D",
        "collaborators_url": "https://api.github.com/repos/bitcoin/bitcoin/collaborators%7B/collaborator%7D",
        "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/comments%7B/number%7D",
        "commits_url": "https://api.github.com/repos/bitcoin/bitcoin/commits%7B/sha%7D",
        "compare_url": "https://api.github.com/repos/bitcoin/bitcoin/compare/%7Bbase%7D...%7Bhead%7D",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/%7B+path%7D",
        "contributors_url": "https://api.github.com/repos/bitcoin/bitcoin/contributors",
        "deployments_url": "https://api.github.com/repos/bitcoin/bitcoin/deployments",
        "downloads_url": "https://api.github.com/repos/bitcoin/bitcoin/downloads",
        "events_url": "https://api.github.com/repos/bitcoin/bitcoin/events",
        "forks_url": "https://api.github.com/repos/bitcoin/bitcoin/forks",
        "git_commits_url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits%7B/sha%7D",
        "git_refs_url": "https://api.github.com/repos/bitcoin/bitcoin/git/refs%7B/sha%7D",
        "git_tags_url": "https://api.github.com/repos/bitcoin/bitcoin/git/tags%7B/sha%7D",
        "git_url": "git://github.com/bitcoin/bitcoin.git",
        "issue_comment_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments%7B/number%7D",
        "issue_events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events%7B/number%7D",
        "issues_url": "https://api.github.com/repos/bitcoin/bitcoin/issues%7B/number%7D",
        "keys_url": "https://api.github.com/repos/bitcoin/bitcoin/keys%7B/key_id%7D",
        "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/labels%7B/name%7D",
        "languages_url": "https://api.github.com/repos/bitcoin/bitcoin/languages",
        "merges_url": "https://api.github.com/repos/bitcoin/bitcoin/merges",
        "milestones_url": "https://api.github.com/repos/bitcoin/bitcoin/milestones%7B/number%7D",
        "notifications_url": "https://api.github.com/repos/bitcoin/bitcoin/notifications%7B?since,all,participating}",
        "pulls_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls%7B/number%7D",
        "releases_url": "https://api.github.com/repos/bitcoin/bitcoin/releases%7B/id%7D",
        "ssh_url": "git@github.com:bitcoin/bitcoin.git",
        "stargazers_url": "https://api.github.com/repos/bitcoin/bitcoin/stargazers",
        "statuses_url": "https://api.github.com/repos/bitcoin/bitcoin/statuses/%7Bsha%7D",
        "subscribers_url": "https://api.github.com/repos/bitcoin/bitcoin/subscribers",
        "subscription_url": "https://api.github.com/repos/bitcoin/bitcoin/subscription",
        "tags_url": "https://api.github.com/repos/bitcoin/bitcoin/tags",
        "teams_url": "https://api.github.com/repos/bitcoin/bitcoin/teams",
        "trees_url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees%7B/sha%7D",
        "clone_url": "https://github.com/bitcoin/bitcoin.git",
        "hooks_url": "https://api.github.com/repos/bitcoin/bitcoin/hooks",
        "svn_url": "https://github.com/bitcoin/bitcoin",
        "homepage": "https://bitcoincore.org/en/download",
        "language": "C++",
        "forks_count": 36623,
        "stargazers_count": 81675,
        "watchers_count": 81675,
        "size": 274780,
        "default_branch": "master",
        "open_issues_count": 689,
        "is_template": false,
        "topics": [
          "bitcoin",
          "c-plus-plus",
          "cryptocurrency",
          "cryptography",
          "p2p"
        ],
        "has_issues": true,
        "has_projects": true,
        "has_wiki": false,
        "has_pages": false,
        "has_downloads": false,
        "archived": false,
        "disabled": false,
        "visibility": "public",
        "pushed_at": "2025-01-28T10:13:17Z",
        "created_at": "2010-12-19T15:16:43Z",
        "updated_at": "2025-01-28T12:49:01Z",
        "allow_forking": true,
        "license": {
          "key": "mit",
          "name": "MIT License",
          "node_id": "MDc6TGljZW5zZTEz",
          "spdx_id": "MIT",
          "url": "https://api.github.com/licenses/mit",
          "html_url": null,
          "description": null,
          "implementation": null,
          "permissions": null,
          "conditions": null,
          "limitations": null,
          "body": null,
          "featured": null
        }
      }
    },
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29409"
      }
    },
    "author_association": "CONTRIBUTOR",
    "draft": false,
    "additions": 678,
    "deletions": 6,
    "changed_files": 12,
    "commits": 4,
    "review_comments": 24,
    "comments": 13
  },
  "events": [
    {
      "event": "commented",
      "id": 1934172101,
      "node_id": "IC_kwDOABII585zSR_F",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1934172101",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-08T13:54:43Z",
      "updated_at": "2025-01-28T13:20:05Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage & Benchmarks\nFor details see: https://corecheck.dev/bitcoin/bitcoin/pulls/29409.\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| ACK | [TheCharlatan](https://github.com/bitcoin/bitcoin/pull/29409#pullrequestreview-2490248963) |\n| Concept ACK | [josibake](https://github.com/bitcoin/bitcoin/pull/29409#issuecomment-2377512124), [darosior](https://github.com/bitcoin/bitcoin/pull/29409#issuecomment-2546088852) |\n| Ignored review | [cbergqvist](https://github.com/bitcoin/bitcoin/pull/29409#pullrequestreview-1906789449) |\n\nIf your review is incorrectly listed, please react with 👎 to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#31741](https://github.com/bitcoin/bitcoin/pull/31741) (multiprocess: Add libmultiprocess git subtree by ryanofsky)\n* [#31740](https://github.com/bitcoin/bitcoin/pull/31740) (depends: Update libmultiprocess library before converting to subtree by ryanofsky)\n* [#30975](https://github.com/bitcoin/bitcoin/pull/30975) (Add multiprocess binaries to release build (except Windows, OpenBSD) by Sjors)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29409#issuecomment-1934172101",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29409"
    },
    {
      "event": "ready_for_review",
      "id": 11746250909,
      "node_id": "RFRE_lADOABII585-rKJvzwAAAAK8IZCd",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11746250909",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-08T14:04:44Z"
    },
    {
      "event": "labeled",
      "id": 11747665340,
      "node_id": "LE_lADOABII585-rKJvzwAAAAK8NyW8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11747665340",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-08T15:41:21Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 1934397410,
      "node_id": "IC_kwDOABII585zTI_i",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1934397410",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-08T15:41:22Z",
      "updated_at": "2024-02-08T15:41:22Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n\n🚧 At least one of the CI tasks failed. Make sure to run all tests locally, according to the\ndocumentation.\n\nPossibly this is due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n<sub>Debug: https://github.com/bitcoin/bitcoin/runs/21365328047</sub>",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29409#issuecomment-1934397410",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29409"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11751095144,
      "node_id": "HRFPE_lADOABII585-rKJvzwAAAAK8a3to",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11751095144",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "2fd10424c04397e50c6683a82db8a0bb68e0f6cc",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/2fd10424c04397e50c6683a82db8a0bb68e0f6cc",
      "created_at": "2024-02-08T20:45:31Z"
    },
    {
      "event": "unlabeled",
      "id": 11752383222,
      "node_id": "UNLE_lADOABII585-rKJvzwAAAAK8fyL2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11752383222",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-08T23:41:55Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 1901881088,
      "node_id": "PRR_kwDOABII585xXGcA",
      "url": null,
      "actor": null,
      "commit_id": "2fd10424c04397e50c6683a82db8a0bb68e0f6cc",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "I'm eager for multiprocess to get in, but unable to do in-depth reviews in tolerable time due to lack of domain-knowledge. Did a surface level review of 2fd1042. Hope you don't mind.",
      "user": {
        "login": "cbergqvist",
        "id": 581308,
        "node_id": "MDQ6VXNlcjU4MTMwOA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/581308?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cbergqvist",
        "html_url": "https://github.com/cbergqvist",
        "followers_url": "https://api.github.com/users/cbergqvist/followers",
        "following_url": "https://api.github.com/users/cbergqvist/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/cbergqvist/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/cbergqvist/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/cbergqvist/subscriptions",
        "organizations_url": "https://api.github.com/users/cbergqvist/orgs",
        "repos_url": "https://api.github.com/users/cbergqvist/repos",
        "events_url": "https://api.github.com/users/cbergqvist/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/cbergqvist/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29409#pullrequestreview-1901881088",
      "submitted_at": "2024-02-28T13:56:58Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29409"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 11953976031,
      "node_id": "HRFPE_lADOABII585-rKJvzwAAAALIgzLf",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11953976031",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "41831abe06d388ed18b5dbed739bc8fe76457f86",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/41831abe06d388ed18b5dbed739bc8fe76457f86",
      "created_at": "2024-02-28T16:08:29Z"
    },
    {
      "event": "reviewed",
      "id": 1906565161,
      "node_id": "PRR_kwDOABII585xo-Ap",
      "url": null,
      "actor": null,
      "commit_id": "41831abe06d388ed18b5dbed739bc8fe76457f86",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Thanks for the review!\r\n\r\nUpdated 2fd10424c04397e50c6683a82db8a0bb68e0f6cc -> 41831abe06d388ed18b5dbed739bc8fe76457f86 ([`pr/ipc-chain.2`](https://github.com/ryanofsky/bitcoin/commits/pr/ipc-chain.2) -> [`pr/ipc-chain.3`](https://github.com/ryanofsky/bitcoin/commits/pr/ipc-chain.3), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/ipc-chain.2..pr/ipc-chain.3)) with suggested changes.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29409#pullrequestreview-1906565161",
      "submitted_at": "2024-02-28T16:14:06Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29409"
    },
    {
      "event": "reviewed",
      "id": 1906789449,
      "node_id": "PRR_kwDOABII585xp0xJ",
      "url": null,
      "actor": null,
      "commit_id": "41831abe06d388ed18b5dbed739bc8fe76457f86",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Thanks for incorporating some of my suggestions. Surface-level ACK of 41831ab. :)",
      "user": {
        "login": "cbergqvist",
        "id": 581308,
        "node_id": "MDQ6VXNlcjU4MTMwOA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/581308?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cbergqvist",
        "html_url": "https://github.com/cbergqvist",
        "followers_url": "https://api.github.com/users/cbergqvist/followers",
        "following_url": "https://api.github.com/users/cbergqvist/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/cbergqvist/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/cbergqvist/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/cbergqvist/subscriptions",
        "organizations_url": "https://api.github.com/users/cbergqvist/orgs",
        "repos_url": "https://api.github.com/users/cbergqvist/repos",
        "events_url": "https://api.github.com/users/cbergqvist/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/cbergqvist/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29409#pullrequestreview-1906789449",
      "submitted_at": "2024-02-28T16:58:02Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29409"
    },
    {
      "event": "labeled",
      "id": 11955115762,
      "node_id": "LE_lADOABII585-rKJvzwAAAALIlJby",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/11955115762",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-02-28T17:36:43Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "reviewed",
      "id": 1921347149,
      "node_id": "PRR_kwDOABII585yhW5N",
      "url": null,
      "actor": null,
      "commit_id": "41831abe06d388ed18b5dbed739bc8fe76457f86",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "being able to work with any socket (TCP or UNIX) makes a lot of sense.\r\nyou could have `bitcoin-node` on some secure computing host.\r\nand then one or more `bitcoin-walet` on over-the-network hosts.",
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29409#pullrequestreview-1921347149",
      "submitted_at": "2024-03-07T02:57:01Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29409"
    },
    {
      "event": "convert_to_draft",
      "id": 12511833238,
      "node_id": "CTDE_lADOABII585-rKJvzwAAAALpw2yW",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12511833238",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-04-17T17:34:24Z"
    },
    {
      "event": "labeled",
      "id": 12823719760,
      "node_id": "LE_lADOABII585-rKJvzwAAAAL8Wm9Q",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12823719760",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-05-15T21:05:31Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13109400594,
      "node_id": "HRFPE_lADOABII585-rKJvzwAAAAMNYZQS",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13109400594",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "6608b033c060c17be204beb8227333421c091816",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/6608b033c060c17be204beb8227333421c091816",
      "created_at": "2024-06-11T01:53:09Z"
    },
    {
      "event": "ready_for_review",
      "id": 13109423298,
      "node_id": "RFRE_lADOABII585-rKJvzwAAAAMNYezC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13109423298",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-11T01:55:50Z"
    },
    {
      "event": "unlabeled",
      "id": 13109435143,
      "node_id": "UNLE_lADOABII585-rKJvzwAAAAMNYhsH",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13109435143",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-11T01:57:25Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13121645459,
      "node_id": "HRFPE_lADOABII585-rKJvzwAAAAMOHGuT",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13121645459",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "ab6b795f218b2074a9c9c05fcc94ec37eccca5a5",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/ab6b795f218b2074a9c9c05fcc94ec37eccca5a5",
      "created_at": "2024-06-11T19:10:50Z"
    },
    {
      "event": "unlabeled",
      "id": 13124717029,
      "node_id": "UNLE_lADOABII585-rKJvzwAAAAMOS0nl",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13124717029",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-12T01:55:29Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2210605752,
      "node_id": "IC_kwDOABII586Dwyq4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2210605752",
      "actor": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-05T10:14:06Z",
      "updated_at": "2024-07-05T10:14:06Z",
      "author_association": "CONTRIBUTOR",
      "body": "I'm not sure what a good approach for reviewing this might be. How can I validate the changes without tests? Should I be running this as part of a parent pull request? The first two commits seem fairly mechanical, but the last one less so. The comments in the code are helpful, but some pointers in the PR description for what to look out for, or a broad description of the approaches taken would be helpful too. E.g. why is so much custom functionality introduced for `findBlock`? ",
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29409#issuecomment-2210605752",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29409"
    },
    {
      "event": "commented",
      "id": 2214655675,
      "node_id": "IC_kwDOABII586EAPa7",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2214655675",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-08T16:38:44Z",
      "updated_at": "2024-07-08T16:38:44Z",
      "author_association": "CONTRIBUTOR",
      "body": "re: https://github.com/bitcoin/bitcoin/pull/29409#issuecomment-2210605752\r\n\r\nThanks for the questions.\r\n\r\n> I'm not sure what a good approach for reviewing this might be. How can I validate the changes without tests? Should I be running this as part of a parent pull request?\r\n\r\nYou could test this as part of #10102, and I should probably add some unit test code to [ipc_test.cpp](https://github.com/bitcoin/bitcoin/blob/master/src/test/ipc_test.cpp) to make sure new runtime code in [capnp/chain.cpp](https://github.com/ryanofsky/bitcoin/tree/pr/ipc-chain/src/ipc/capnp/chain.cpp) and [capnp/common-types.h](https://github.com/ryanofsky/bitcoin/tree/pr/ipc-chain/src/ipc/capnp/common-types.h) functions has test coverage.\r\n\r\nMost of the code in the PR is evaluated at compile time though, so for example, if there is a mismatch in any of the interface declarations there will be build errors.\r\n\r\n> The first two commits seem fairly mechanical, but the last one less so. The comments in the code are helpful, but some pointers in the PR description for what to look out for, or a broad description of the approaches taken would be helpful too.\r\n\r\nThis is helpful feedback, and I will try to add more comments. I know it needs more comments, but it's hard for me to know where to add them without being asked because I'm too familiar with everything here. This PR is a case where [\"Don't spend more than a few seconds trying to understand it\"](https://www.googblogs.com/code-health-understanding-code-in-review/) review really advice applies, so if something doesn't make sense, you should just ask so I can clarify. If something doesn't make sense to you, it probably doesn't make sense to other people either.\r\n\r\n> E.g. why is so much custom functionality introduced for `findBlock`?\r\n\r\nWill add a comment, but `Chain::findBlock` and the handful of other `Chain` methods taking [`FoundBlock`](https://github.com/ryanofsky/bitcoin/blob/ab6b795f218b2074a9c9c05fcc94ec37eccca5a5/src/interfaces/chain.h#L50-L81) input/output arguments need custom code because these are converted to [`FoundBlockParam`](https://github.com/ryanofsky/bitcoin/blob/ab6b795f218b2074a9c9c05fcc94ec37eccca5a5/src/ipc/capnp/chain.capnp#L150-L159) and [`FoundBlockResult`](https://github.com/ryanofsky/bitcoin/blob/ab6b795f218b2074a9c9c05fcc94ec37eccca5a5/src/ipc/capnp/chain.capnp#L161-L171) Cap'n Proto structs to make IPC calls, and these structs are recursive. Libmultiprocess has decent support for converting back and forth between C++ classes and capnp structs generally, but it would be hard for it support recursive structs. It also might have a hard time in this case because there is a not 1:1 mapping between fields in the c++ class and capnp structs. So the conversion for these types is completely custom.\r\n\r\nSimilar custom code also exists for the [C++ `BlockInfo`](https://github.com/ryanofsky/bitcoin/blob/ab6b795f218b2074a9c9c05fcc94ec37eccca5a5/src/interfaces/chain.h#L83-L97) struct which is complicated to translate to the [Capnp `BlockInfo`](https://github.com/ryanofsky/bitcoin/blob/ab6b795f218b2074a9c9c05fcc94ec37eccca5a5/src/ipc/capnp/chain.capnp#L173-L184) struct, because it has internal pointers and references, so it has [custom code](https://github.com/ryanofsky/bitcoin/blob/ab6b795f218b2074a9c9c05fcc94ec37eccca5a5/src/ipc/capnp/chain.cpp#L113-L164) because it can't really be converted automatically.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29409#issuecomment-2214655675",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29409"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13663263105,
      "node_id": "HRFPE_lADOABII585-rKJvzwAAAAMuZNmB",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13663263105",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "eec0d31850aa1f7c520a46c417320f480f23fb1c",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/eec0d31850aa1f7c520a46c417320f480f23fb1c",
      "created_at": "2024-07-26T16:05:16Z"
    },
    {
      "event": "reviewed",
      "id": 2202254574,
      "node_id": "PRR_kwDOABII586DQ7zu",
      "url": null,
      "actor": null,
      "commit_id": "eec0d31850aa1f7c520a46c417320f480f23fb1c",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Updated ab6b795f218b2074a9c9c05fcc94ec37eccca5a5 -> eec0d31850aa1f7c520a46c417320f480f23fb1c ([`pr/ipc-chain.5`](https://github.com/ryanofsky/bitcoin/commits/pr/ipc-chain.5) -> [`pr/ipc-chain.6`](https://github.com/ryanofsky/bitcoin/commits/pr/ipc-chain.6), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/ipc-chain.5-rebase..pr/ipc-chain.6)), rebasing and dropping no longer needed code after libmultiprocess update, adding comments and tests, and splitting up commits. There is still more to do to splitting up commits and adding tests, however.\r\n\r\nThis PR now shares a little bit of code with #30510, so will get smaller if #30510 is merged. #30510 is also simpler and should be easier to review, so will mark this as a draft, although feedback is still welcome on this PR especially if there are questions or things that need more explanation.\r\n\r\n---\r\n\r\nre: https://github.com/bitcoin/bitcoin/pull/29409#pullrequestreview-1921347149\r\n\r\n> being able to work with any socket (TCP or UNIX) makes a lot of sense. you could have `bitcoin-node` on some secure computing host. and then one or more `bitcoin-walet` on over-the-network hosts\r\n\r\nYes this PR does not actually expose a socket but #30509 does, and #19460 uses it for the wallet (and #19461 uses it for the gui, and https://github.com/Sjors/bitcoin/pull/48 and https://github.com/bitcoin/bitcoin/pull/30437 use it for the mining interface\r\n\r\n",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29409#pullrequestreview-2202254574",
      "submitted_at": "2024-07-26T16:34:51Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29409"
    },
    {
      "event": "convert_to_draft",
      "id": 13663543780,
      "node_id": "CTDE_lADOABII585-rKJvzwAAAAMuaSHk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13663543780",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-26T16:35:11Z"
    },
    {
      "event": "reviewed",
      "id": 2202166099,
      "node_id": "PRR_kwDOABII586DQmNT",
      "url": null,
      "actor": null,
      "commit_id": "eec0d31850aa1f7c520a46c417320f480f23fb1c",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29409#pullrequestreview-2202166099",
      "submitted_at": "2024-07-26T16:46:07Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29409"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 13663915375,
      "node_id": "HRFPE_lADOABII585-rKJvzwAAAAMubs1v",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13663915375",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "43dc39eed47d83b2b7e72c911198bbdd401c78d8",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/43dc39eed47d83b2b7e72c911198bbdd401c78d8",
      "created_at": "2024-07-26T17:16:47Z"
    },
    {
      "event": "labeled",
      "id": 13663921459,
      "node_id": "LE_lADOABII585-rKJvzwAAAAMubuUz",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13663921459",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-26T17:17:31Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2253170026,
      "node_id": "IC_kwDOABII586GTKVq",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2253170026",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-26T17:17:32Z",
      "updated_at": "2024-07-26T17:17:32Z",
      "author_association": "CONTRIBUTOR",
      "body": "<!--85328a0da195eb286784d51f73fa0af9-->\n🚧 At least one of the CI tasks failed.\n<sub>Debug: https://github.com/bitcoin/bitcoin/runs/27972388234</sub>\n\n<details><summary>Hints</summary>\n\nMake sure to run all tests locally, according to the documentation.\n\nThe failure may happen due to a number of reasons, for example:\n\n* Possibly due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\n* A sanitizer issue, which can only be found by compiling with the sanitizer and running the\n  affected test.\n\n* An intermittent issue.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n</details>\n",
      "user": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29409#issuecomment-2253170026",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29409"
    },
    {
      "event": "unlabeled",
      "id": 13781533306,
      "node_id": "UNLE_lADOABII585-rKJvzwAAAAM1cYJ6",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13781533306",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-06T16:52:32Z",
      "label": {
        "name": "CI failed",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2273166427,
      "node_id": "IC_kwDOABII586HfcRb",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2273166427",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-07T10:40:23Z",
      "updated_at": "2024-08-07T10:40:23Z",
      "author_association": "MEMBER",
      "body": "Small nit: can you update the description with what you mention in https://github.com/bitcoin/bitcoin/pull/29409#pullrequestreview-2202254574 , regarding #30509 ? I was surprised to see this PR in draft and it took me a bit of digging in the comments to learn why. It's more clear when reading the \"process separation\" issue, but I think it would also be helpful to mention in this PR description.",
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29409#issuecomment-2273166427",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29409"
    },
    {
      "event": "commented",
      "id": 2273648419,
      "node_id": "IC_kwDOABII586HhR8j",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2273648419",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-07T14:43:54Z",
      "updated_at": "2024-08-07T14:43:54Z",
      "author_association": "CONTRIBUTOR",
      "body": "re: https://github.com/bitcoin/bitcoin/pull/29409#issuecomment-2273166427\r\n\r\nThanks! Added following to the description:\r\n\r\n> Note: The changes in this PR allow a new `bitcoin-node` process to be started with an `-ipcfd=<n>` argument specifying a file descriptor from a socketpair, allowing another process to control it over the socketpair. This PR by itself is fairly inflexible but combined with #30509 it allows existing `bitcoin-node` processes to be controlled over a unix socket. This PR is also a dependency of #10102 which allows the wallet code to run in a separate process and use the `Chain` interface.\r\n",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29409#issuecomment-2273648419",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29409"
    },
    {
      "event": "labeled",
      "id": 13909021517,
      "node_id": "LE_lADOABII585-rKJvzwAAAAM9CtNN",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13909021517",
      "actor": {
        "login": "hebasto",
        "id": 32963518,
        "node_id": "MDQ6VXNlcjMyOTYzNTE4",
        "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/hebasto",
        "html_url": "https://github.com/hebasto",
        "followers_url": "https://api.github.com/users/hebasto/followers",
        "following_url": "https://api.github.com/users/hebasto/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/hebasto/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/hebasto/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
        "organizations_url": "https://api.github.com/users/hebasto/orgs",
        "repos_url": "https://api.github.com/users/hebasto/repos",
        "events_url": "https://api.github.com/users/hebasto/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/hebasto/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-08-16T10:13:35Z",
      "label": {
        "name": "Needs CMake port",
        "color": "0e8a16"
      }
    },
    {
      "event": "labeled",
      "id": 14107548268,
      "node_id": "LE_lADOABII585-rKJvzwAAAANI4Bps",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14107548268",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-02T22:45:24Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "unlabeled",
      "id": 14109723302,
      "node_id": "UNLE_lADOABII585-rKJvzwAAAANJAUqm",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14109723302",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-03T06:15:33Z",
      "label": {
        "name": "Needs CMake port",
        "color": "0e8a16"
      }
    },
    {
      "event": "referenced",
      "id": 14189594054,
      "node_id": "REFE_lADOABII585-rKJvzwAAAANNxAXG",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14189594054",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "df3f63ccfa0338ee38644b4a3c48f721fc28c2a2",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/df3f63ccfa0338ee38644b4a3c48f721fc28c2a2",
      "created_at": "2024-09-09T21:14:21Z"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14321934336,
      "node_id": "HRFPE_lADOABII585-rKJvzwAAAANVp2AA",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14321934336",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "65c4edda94ead5c20969681f8337fd6a735182cc",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/65c4edda94ead5c20969681f8337fd6a735182cc",
      "created_at": "2024-09-19T10:43:13Z"
    },
    {
      "event": "commented",
      "id": 2360666566,
      "node_id": "IC_kwDOABII586MtOnG",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2360666566",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-19T10:56:40Z",
      "updated_at": "2024-09-26T14:02:21Z",
      "author_association": "CONTRIBUTOR",
      "body": "Rebased 43dc39eed47d83b2b7e72c911198bbdd401c78d8 -> 65c4edda94ead5c20969681f8337fd6a735182cc ([`pr/ipc-chain.7`](https://github.com/ryanofsky/bitcoin/commits/pr/ipc-chain.7) -> [`pr/ipc-chain.8`](https://github.com/ryanofsky/bitcoin/commits/pr/ipc-chain.8), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/ipc-chain.7-rebase..pr/ipc-chain.8)) due to conflicts with #30697 and #30454\r\nRebased 65c4edda94ead5c20969681f8337fd6a735182cc -> 968f14fc7a634f65f4399dc042a37d4a39f2c703 ([`pr/ipc-chain.8`](https://github.com/ryanofsky/bitcoin/commits/pr/ipc-chain.8) -> [`pr/ipc-chain.9`](https://github.com/ryanofsky/bitcoin/commits/pr/ipc-chain.9), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/ipc-chain.8-rebase..pr/ipc-chain.9)) after base PR #30510 merged",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29409#issuecomment-2360666566",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29409"
    },
    {
      "event": "unlabeled",
      "id": 14323264497,
      "node_id": "UNLE_lADOABII585-rKJvzwAAAANVu6vx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14323264497",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-19T12:24:12Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "labeled",
      "id": 14406735608,
      "node_id": "LE_lADOABII585-rKJvzwAAAANatVb4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14406735608",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-25T22:29:59Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGU3NjE5YTg0YmQxNzRmYWRmOWM3YmZkMGUyYzEwYzVmNWYzZmFkYzI",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e7619a84bd174fadf9c7bfd0e2c10c5f5f3fadc2",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/e7619a84bd174fadf9c7bfd0e2c10c5f5f3fadc2",
      "tree": {
        "sha": "f60f628976c7bf79d2bc08d03f7ad1d278919f3d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f60f628976c7bf79d2bc08d03f7ad1d278919f3d"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d5af7d28f475c0e579629a9b432c2b8a35075048",
          "sha": "d5af7d28f475c0e579629a9b432c2b8a35075048",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/d5af7d28f475c0e579629a9b432c2b8a35075048"
        }
      ],
      "message": "Add capnp serialization code for bitcoin types\n\n- Add capnp ToBlob, ToArray, Wrap, Serialize, and Unserialize helper functions\n- Add support for std::chrono::seconds capnp serialization\n- Add support for util::Result capnp serialization",
      "committer": {
        "name": "Ryan Ofsky",
        "email": "ryan@ofsky.org",
        "date": "2024-09-26T11:23:14Z"
      },
      "author": {
        "name": "Ryan Ofsky",
        "email": "ryan@ofsky.org",
        "date": "2024-07-26T12:35:33Z"
      },
      "sha": "e7619a84bd174fadf9c7bfd0e2c10c5f5f3fadc2"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDc2ZmQ0ZTU2YzQ3ODkxYjRlYjJmYzlkMjVlYTI4OTkyYWUyOWUwMWU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/76fd4e56c47891b4eb2fc9d25ea28992ae29e01e",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/76fd4e56c47891b4eb2fc9d25ea28992ae29e01e",
      "tree": {
        "sha": "43f718ba19ba7e7d6d3c8008dee39ca79b8e9133",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/43f718ba19ba7e7d6d3c8008dee39ca79b8e9133"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e7619a84bd174fadf9c7bfd0e2c10c5f5f3fadc2",
          "sha": "e7619a84bd174fadf9c7bfd0e2c10c5f5f3fadc2",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/e7619a84bd174fadf9c7bfd0e2c10c5f5f3fadc2"
        }
      ],
      "message": "Add capnp wrapper for Handler interface",
      "committer": {
        "name": "Russell Yanofsky",
        "email": "russ@yanofsky.org",
        "date": "2024-09-26T11:23:14Z"
      },
      "author": {
        "name": "Russell Yanofsky",
        "email": "russ@yanofsky.org",
        "date": "2017-12-05T20:57:12Z"
      },
      "sha": "76fd4e56c47891b4eb2fc9d25ea28992ae29e01e"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKGY2Yzc3ODZjNDE2NDJjOTYzODAwMmFhZWJkZjNiNzI3MWVhNDhlOWQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f6c7786c41642c9638002aaebdf3b7271ea48e9d",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/f6c7786c41642c9638002aaebdf3b7271ea48e9d",
      "tree": {
        "sha": "f1caedd32baa7ebac69d27a24435873655b6a68a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f1caedd32baa7ebac69d27a24435873655b6a68a"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/76fd4e56c47891b4eb2fc9d25ea28992ae29e01e",
          "sha": "76fd4e56c47891b4eb2fc9d25ea28992ae29e01e",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/76fd4e56c47891b4eb2fc9d25ea28992ae29e01e"
        }
      ],
      "message": "Add capnp wrapper for Chain interface",
      "committer": {
        "name": "Russell Yanofsky",
        "email": "russ@yanofsky.org",
        "date": "2024-09-26T11:23:14Z"
      },
      "author": {
        "name": "Russell Yanofsky",
        "email": "russ@yanofsky.org",
        "date": "2017-12-05T20:57:12Z"
      },
      "sha": "f6c7786c41642c9638002aaebdf3b7271ea48e9d"
    },
    {
      "event": "committed",
      "id": null,
      "node_id": "C_kwDOABII59oAKDY0YjgzMzg1NGEzNGQ4N2NkZTRlMGNhNDE3M2Q3NTAxMmM0MDFhN2E",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/64b833854a34d87cde4e0ca4173d75012c401a7a",
      "actor": null,
      "commit_id": null,
      "commit_url": null,
      "created_at": null,
      "html_url": "https://github.com/bitcoin/bitcoin/commit/64b833854a34d87cde4e0ca4173d75012c401a7a",
      "tree": {
        "sha": "61678bc092f7a3ed1df837fc9eae8c34207b69c0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/61678bc092f7a3ed1df837fc9eae8c34207b69c0"
      },
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "payload": null,
        "signature": null
      },
      "parents": [
        {
          "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f6c7786c41642c9638002aaebdf3b7271ea48e9d",
          "sha": "f6c7786c41642c9638002aaebdf3b7271ea48e9d",
          "html_url": "https://github.com/bitcoin/bitcoin/commit/f6c7786c41642c9638002aaebdf3b7271ea48e9d"
        }
      ],
      "message": "multiprocess: Expose Chain interface\n\nExpose Chain interface to external processes spawning or connecting to\nbitcoin-node.",
      "committer": {
        "name": "Russell Yanofsky",
        "email": "russ@yanofsky.org",
        "date": "2024-09-26T11:23:14Z"
      },
      "author": {
        "name": "Russell Yanofsky",
        "email": "russ@yanofsky.org",
        "date": "2017-12-05T20:57:12Z"
      },
      "sha": "64b833854a34d87cde4e0ca4173d75012c401a7a"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 14417120410,
      "node_id": "HRFPE_lADOABII585-rKJvzwAAAANbU8ya",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14417120410",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "968f14fc7a634f65f4399dc042a37d4a39f2c703",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/968f14fc7a634f65f4399dc042a37d4a39f2c703",
      "created_at": "2024-09-26T14:00:53Z"
    },
    {
      "event": "ready_for_review",
      "id": 14417149599,
      "node_id": "RFRE_lADOABII585-rKJvzwAAAANbVD6f",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14417149599",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-26T14:02:36Z"
    },
    {
      "event": "unlabeled",
      "id": 14418518786,
      "node_id": "UNLE_lADOABII585-rKJvzwAAAANbaSMC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/14418518786",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-26T15:16:55Z",
      "label": {
        "name": "Needs rebase",
        "color": "cccccc"
      }
    },
    {
      "event": "commented",
      "id": 2377512124,
      "node_id": "IC_kwDOABII586NtfS8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2377512124",
      "actor": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-09-26T17:16:13Z",
      "updated_at": "2024-09-26T17:16:13Z",
      "author_association": "MEMBER",
      "body": "Concept ACK\r\n\r\nThanks for the rebase, I'll be digging into this next week! ",
      "user": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29409#issuecomment-2377512124",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29409"
    },
    {
      "event": "reviewed",
      "id": 2423634328,
      "node_id": "PRR_kwDOABII586QdbmY",
      "url": null,
      "actor": null,
      "commit_id": "968f14fc7a634f65f4399dc042a37d4a39f2c703",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29409#pullrequestreview-2423634328",
      "submitted_at": "2024-11-08T13:11:00Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29409"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 15267573219,
      "node_id": "HRFPE_lADOABII585-rKJvzwAAAAOOBK3j",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15267573219",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "34d3e2a6eaaab9de5328c3e64739f1392696c7db",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/34d3e2a6eaaab9de5328c3e64739f1392696c7db",
      "created_at": "2024-11-12T16:26:25Z"
    },
    {
      "event": "reviewed",
      "id": 2429667905,
      "node_id": "PRR_kwDOABII586Q0cpB",
      "url": null,
      "actor": null,
      "commit_id": "34d3e2a6eaaab9de5328c3e64739f1392696c7db",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Updated 968f14fc7a634f65f4399dc042a37d4a39f2c703 -> 34d3e2a6eaaab9de5328c3e64739f1392696c7db ([`pr/ipc-chain.9`](https://github.com/ryanofsky/bitcoin/commits/pr/ipc-chain.9) -> [`pr/ipc-chain.10`](https://github.com/ryanofsky/bitcoin/commits/pr/ipc-chain.10), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/ipc-chain.9..pr/ipc-chain.10)) with review suggestions and fixes.\r\n\r\nThanks for the review!\r\n",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29409#pullrequestreview-2429667905",
      "submitted_at": "2024-11-12T16:27:40Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29409"
    },
    {
      "event": "reviewed",
      "id": 2445205614,
      "node_id": "PRR_kwDOABII586RvuBu",
      "url": null,
      "actor": null,
      "commit_id": "34d3e2a6eaaab9de5328c3e64739f1392696c7db",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "lgtm ACK 34d3e2a6eaaab9de5328c3e64739f1392696c7db",
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29409#pullrequestreview-2445205614",
      "submitted_at": "2024-11-19T11:47:01Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29409"
    },
    {
      "event": "review_requested",
      "id": 15348254412,
      "node_id": "RRE_lADOABII585-rKJvzwAAAAOS08bM",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15348254412",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-11-19T11:47:05Z",
      "requested_reviewer": {
        "login": "josibake",
        "id": 7444140,
        "node_id": "MDQ6VXNlcjc0NDQxNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7444140?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/josibake",
        "html_url": "https://github.com/josibake",
        "followers_url": "https://api.github.com/users/josibake/followers",
        "following_url": "https://api.github.com/users/josibake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/josibake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/josibake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/josibake/subscriptions",
        "organizations_url": "https://api.github.com/users/josibake/orgs",
        "repos_url": "https://api.github.com/users/josibake/repos",
        "events_url": "https://api.github.com/users/josibake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/josibake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "commented",
      "id": 2518505085,
      "node_id": "IC_kwDOABII586WHVZ9",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2518505085",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-04T20:33:54Z",
      "updated_at": "2024-12-06T13:00:14Z",
      "author_association": "CONTRIBUTOR",
      "body": "Added 1 commit 34d3e2a6eaaab9de5328c3e64739f1392696c7db -> 395d5eed0475558de2c2a66914d5a5814ce38f3c ([`pr/ipc-chain.10`](https://github.com/ryanofsky/bitcoin/commits/pr/ipc-chain.10) -> [`pr/ipc-chain.11`](https://github.com/ryanofsky/bitcoin/commits/pr/ipc-chain.11), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/ipc-chain.10...pr/ipc-chain.11)) exposing the Chain interface so it is easier to experiment with.\r\nUpdated 395d5eed0475558de2c2a66914d5a5814ce38f3c -> 64b833854a34d87cde4e0ca4173d75012c401a7a ([`pr/ipc-chain.11`](https://github.com/ryanofsky/bitcoin/commits/pr/ipc-chain.11) -> [`pr/ipc-chain.12`](https://github.com/ryanofsky/bitcoin/commits/pr/ipc-chain.12), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/ipc-chain.11..pr/ipc-chain.12)) fixing FoundBlock locator serialization to fix `wallet_backup.py --descriptors` test failure in followup #10102 https://cirrus-ci.com/task/6269118947524608?logs=ci#L2529 in new test added #30678\r\n",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29409#issuecomment-2518505085",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29409"
    },
    {
      "event": "head_ref_force_pushed",
      "id": 15560024587,
      "node_id": "HRFPE_lADOABII585-rKJvzwAAAAOfcyIL",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15560024587",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "64b833854a34d87cde4e0ca4173d75012c401a7a",
      "commit_url": "https://api.github.com/repos/ryanofsky/bitcoin/commits/64b833854a34d87cde4e0ca4173d75012c401a7a",
      "created_at": "2024-12-06T12:57:31Z"
    },
    {
      "event": "reviewed",
      "id": 2481936185,
      "node_id": "PRR_kwDOABII586T71c5",
      "url": null,
      "actor": null,
      "commit_id": "64b833854a34d87cde4e0ca4173d75012c401a7a",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29409#pullrequestreview-2481936185",
      "submitted_at": "2024-12-06T19:56:50Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29409"
    },
    {
      "event": "commented",
      "id": 2524055170,
      "node_id": "IC_kwDOABII586WcgaC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2524055170",
      "actor": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-06T19:58:45Z",
      "updated_at": "2024-12-06T19:58:45Z",
      "author_association": "MEMBER",
      "body": "In order to test this PR i implemented a PoC of a Rust wallet (using [`BDK`](https://github.com/bitcoindevkit/)) consuming the `Chain` interface introduced here. I think it's also a good example of what multiprocess enables. See https://github.com/darosior/core_bdk_wallet.",
      "user": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29409#issuecomment-2524055170",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29409"
    },
    {
      "event": "reviewed",
      "id": 2490112192,
      "node_id": "PRR_kwDOABII586UbBjA",
      "url": null,
      "actor": null,
      "commit_id": "64b833854a34d87cde4e0ca4173d75012c401a7a",
      "commit_url": null,
      "created_at": null,
      "author_association": "MEMBER",
      "user": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29409#pullrequestreview-2490112192",
      "submitted_at": "2024-12-09T21:18:51Z",
      "state": "COMMENTED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29409"
    },
    {
      "event": "commented",
      "id": 2529637848,
      "node_id": "IC_kwDOABII586WxzXY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2529637848",
      "actor": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-09T22:12:12Z",
      "updated_at": "2024-12-16T16:21:10Z",
      "author_association": "MEMBER",
      "body": "tested ACK 395d5eed0475558de2c2a66914d5a5814ce38f3c\r\n\r\nI've tested this with the Rust wallet PoC i mentioned earlier: https://github.com/bitcoin/bitcoin/pull/29409#issuecomment-2524055170. This tool exercises the following methods: `getHeight`, `getBlockHash`, `hasBlocks`, `findAncestorByHeight`, `findAncestorByHash`, `findCommonAncestor`, `initMessage`, `showProgress` and `handleNotifications`. It also exercises all the `ChainNotifications` events.\r\n\r\nI tested numerous scenarii with this tool on regtest (some are documented [here](https://github.com/darosior/core_bdk_wallet?tab=readme-ov-file#3-build-the-rust-wallet-connect-it-and-test-a-few-scenarii)). I then proceeded to scan some existing Signet wallets while syncing a Signet node, as well as performing a rescan on a synced Signet node. I did not find any issue with this PR in all those tests (no crash, i get accurate wallet information and events under various conditions). I found a crash in #10102, but it's specific to the new logic introduced there and i could not reproduce it using this PR.\r\n\r\nI cursory-reviewed the rest of the interface not exercised in my Rust wallet and did not find any issue.",
      "user": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29409#issuecomment-2529637848",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29409"
    },
    {
      "event": "reviewed",
      "id": 2490248963,
      "node_id": "PRR_kwDOABII586Ubi8D",
      "url": null,
      "actor": null,
      "commit_id": "64b833854a34d87cde4e0ca4173d75012c401a7a",
      "commit_url": null,
      "created_at": null,
      "author_association": "CONTRIBUTOR",
      "body": "Re-ACK 64b833854a34d87cde4e0ca4173d75012c401a7a\r\n\r\n> fixing FoundBlock locator serialization to fix wallet_backup.py --descriptors test failure in followup\r\n\r\nI should have seen that one though :| - good that those tests exist!",
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29409#pullrequestreview-2490248963",
      "submitted_at": "2024-12-09T22:25:33Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29409"
    },
    {
      "event": "review_requested",
      "id": 15591428043,
      "node_id": "RRE_lADOABII585-rKJvzwAAAAOhUk_L",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15591428043",
      "actor": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-09T22:25:39Z",
      "requested_reviewer": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "review_requester": {
        "login": "DrahtBot",
        "id": 39886733,
        "node_id": "MDQ6VXNlcjM5ODg2NzMz",
        "avatar_url": "https://avatars.githubusercontent.com/u/39886733?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/DrahtBot",
        "html_url": "https://github.com/DrahtBot",
        "followers_url": "https://api.github.com/users/DrahtBot/followers",
        "following_url": "https://api.github.com/users/DrahtBot/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/DrahtBot/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/DrahtBot/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
        "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
        "repos_url": "https://api.github.com/users/DrahtBot/repos",
        "events_url": "https://api.github.com/users/DrahtBot/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      }
    },
    {
      "event": "commented",
      "id": 2546088852,
      "node_id": "IC_kwDOABII586XwjuU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2546088852",
      "actor": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-16T16:30:01Z",
      "updated_at": "2024-12-16T16:30:01Z",
      "author_association": "MEMBER",
      "body": "I found another segmentation fault in updating my previous ACK to the latest tip of this PR. Here are minimal steps to reproduce:\r\n1. Run a `bitcoin-node` from this PR. I tested on regtest with: `./multiprocbuild/src/bitcoin-node -regtest -datadir=$PWD/datadir_bdk_wallet -server=0 -ipcbind=unix -debug=ipc`\r\n2. Have a client connect. I used my tool for this. See usage [here](https://github.com/darosior/core_bdk_wallet?tab=readme-ov-file#usage). The command i ran: `cargo run -- ../bitcoin/datadir_bdk_wallet/regtest/node.sock`.\r\n3. Stop the `bitcoin-node` process. It will hang waiting for the client to exit.\r\n4. Stop the client. The `bitcoin-node` process will segfault.\r\n\r\nHere are the debug logs of `bitcoin-node` from when the client connected to the segfault.\r\n<details>\r\n\r\n<summary>Click to see logs</summary>\r\n\r\n```\r\n2024-12-16T16:19:22Z Loading 1 mempool transactions from file...\r\n2024-12-16T16:19:22Z Loading addresses from DNS seed dummySeed.invalid.\r\n2024-12-16T16:19:22Z Imported mempool transactions from file: 1 succeeded, 0 failed, 0 expired, 0 already there, 0 waiting for initial broadcast\r\n2024-12-16T16:19:22Z initload thread exit                                                                 \r\n2024-12-16T16:19:22Z 0 addresses found from DNS seeds\r\n2024-12-16T16:19:22Z dnsseed thread exit                                                                  \r\n2024-12-16T16:19:26Z [ipc] {bitcoin-node-8814/b-capnp-loop-8816} IPC server recv request  #1 Init.construct$Params ()\r\n2024-12-16T16:19:26Z [ipc] {bitcoin-node-8814/b-capnp-loop-8816} IPC server send response #1 Init.construct$Results (threadMap = <external capability>)\r\n2024-12-16T16:19:26Z [ipc] {bitcoin-node-8814/b-capnp-loop-8816} IPC server recv request  #2 Init.makeChain$Params (context = (thread = <external capability>))\r\n2024-12-16T16:19:26Z [ipc] {bitcoin-node-8814/b-capnp-loop-8816} IPC server post request  #2 {bitcoin-node-8814/b-capnp-loop-8842 (from )}\r\n2024-12-16T16:19:26Z [ipc] {bitcoin-node-8814/b-capnp-loop-8816} IPC server send response #2 Init.makeChain$Results (result = <external capability>)\r\n2024-12-16T16:19:26Z [ipc] {bitcoin-node-8814/b-capnp-loop-8816} IPC server recv request  #3 Chain.initMessage$Params (context = (thread = <external capability>), message = \"Oxydation of the Bitcoin Core wallet in progress..\")\r\n2024-12-16T16:19:26Z [ipc] {bitcoin-node-8814/b-capnp-loop-8816} IPC server post request  #3 {bitcoin-node-8814/b-capnp-loop-8842 (from )}\r\n2024-12-16T16:19:26Z init message: Oxydation of the Bitcoin Core wallet in progress..\r\n2024-12-16T16:19:26Z [ipc] {bitcoin-node-8814/b-capnp-loop-8816} IPC server send response #3 Chain.initMessage$Results ()\r\n2024-12-16T16:19:26Z [ipc] {bitcoin-node-8814/b-capnp-loop-8816} IPC server recv request  #4 Chain.showProgress$Params (context = (thread = <external capability>), title = \"BDK Core startup\", progress = 1, resumePossible = false)\r\n2024-12-16T16:19:26Z [ipc] {bitcoin-node-8814/b-capnp-loop-8816} IPC server post request  #4 {bitcoin-node-8814/b-capnp-loop-8842 (from )}\r\n2024-12-16T16:19:26Z [ipc] {bitcoin-node-8814/b-capnp-loop-8816} IPC server send response #4 Chain.showProgress$Results ()\r\n2024-12-16T16:19:26Z [ipc] {bitcoin-node-8814/b-capnp-loop-8816} IPC server recv request  #5 Chain.getHeight$Params (context = (thread = <external capability>))\r\n2024-12-16T16:19:26Z [ipc] {bitcoin-node-8814/b-capnp-loop-8816} IPC server post request  #5 {bitcoin-node-8814/b-capnp-loop-8842 (from )}\r\n2024-12-16T16:19:26Z [ipc] {bitcoin-node-8814/b-capnp-loop-8816} IPC server send response #5 Chain.getHeight$Results (result = 113, hasResult = true)\r\n2024-12-16T16:19:26Z [ipc] {bitcoin-node-8814/b-capnp-loop-8816} IPC server recv request  #6 Chain.getBlockHash$Params (context = (thread = <external capability>), height = 113)\r\n2024-12-16T16:19:26Z [ipc] {bitcoin-node-8814/b-capnp-loop-8816} IPC server post request  #6 {bitcoin-node-8814/b-capnp-loop-8842 (from )}\r\n2024-12-16T16:19:26Z [ipc] {bitcoin-node-8814/b-capnp-loop-8816} IPC server send response #6 Chain.getBlockHash$Results (result = \"H\\\\3678\\\\307#\\\\020|\\\\020\\\\017\\\\340\\\\2469\\\\330\\\\356\\\\335\\\\277\\\\341dOB{\\\\220\\\\327\\\\354[\\\\361\\\\036\\\\233\\\\301\\\\035DD\")\r\n2024-12-16T16:19:26Z [ipc] {bitcoin-node-8814/b-capnp-loop-8816} IPC server recv request  #7 Chain.showProgress$Params (context = (thread = <external capability>), title = \"BDK Core startup\", progress = 100, resumePossible = true)\r\n2024-12-16T16:19:26Z [ipc] {bitcoin-node-8814/b-capnp-loop-8816} IPC server post request  #7 {bitcoin-node-8814/b-capnp-loop-8842 (from )}\r\n2024-12-16T16:19:26Z [ipc] {bitcoin-node-8814/b-capnp-loop-8816} IPC server send response #7 Chain.showProgress$Results ()\r\n2024-12-16T16:19:26Z [ipc] {bitcoin-node-8814/b-capnp-loop-8816} IPC server recv request  #8 Chain.handleNotifications$Params (context = (thread = <external capability>), notifications = <external capability>)\r\n2024-12-16T16:19:26Z [ipc] {bitcoin-node-8814/b-capnp-loop-8816} IPC server post request  #8 {bitcoin-node-8814/b-capnp-loop-8842 (from )}\r\n2024-12-16T16:19:26Z [ipc] {bitcoin-node-8814/b-capnp-loop-8816} IPC server send response #8 Chain.handleNotifications$Results (result = <external capability>)\r\n2024-12-16T16:19:26Z [ipc] {bitcoin-node-8814/b-capnp-loop-8816} IPC server destroy N2mp11ProxyServerIN3ipc5capnp8messages7HandlerEEE\r\n^C2024-12-16T16:19:27Z tor: Thread interrupt                                                              \r\n2024-12-16T16:19:27Z Shutdown: In progress...                                                             \r\n2024-12-16T16:19:27Z addcon thread exit                                                                   \r\n2024-12-16T16:19:27Z opencon thread exit                                                                  \r\n2024-12-16T16:19:27Z torcontrol thread exit                                                               \r\n2024-12-16T16:19:27Z net thread exit                                                                      \r\n2024-12-16T16:19:27Z msghand thread exit                                                                  \r\n2024-12-16T16:19:27Z DumpAnchors: Flush 0 outbound block-relay-only peer addresses to anchors.dat started\r\n2024-12-16T16:19:27Z DumpAnchors: Flush 0 outbound block-relay-only peer addresses to anchors.dat completed (0.00s)\r\n2024-12-16T16:19:27Z scheduler thread exit                                                                \r\n2024-12-16T16:19:27Z Writing 1 mempool transactions to file...\r\n2024-12-16T16:19:27Z Writing 0 unbroadcast transactions to file.\r\n2024-12-16T16:19:27Z Dumped mempool: 0.000s to copy, 0.002s to dump, 289 bytes dumped to file\r\n2024-12-16T16:19:27Z Flushed fee estimates to fee_estimates.dat.\r\n2024-12-16T16:19:27Z [ipc] {bitcoin-node-8814/b-shutoff-8814} IPC client first request from current thread, constructing waiter\r\n2024-12-16T16:19:27Z [ipc] {bitcoin-node-8814/b-shutoff-8814} IPC client send ChainNotifications.chainStateFlushed$Params (context = (thread = <external capability>, callbackThread = <external capability>), role = 0, locator = \"\\\\200\\\\021\\\\001\\\\000\\\\022H\\\\3678\\\\307#\\\\020|\\\\020\\\\017\\\\340\\\\2469\\\\330\\\\356\\\\335\\\\277\\\\341dOB{\\\\220\\\\327\\\\354[\\\\361\\\\036\\\\233\\\\301\\\\035DD\\\\tGm\\\\237]YbZDV9\\\\254\\\\252f\\\\205\\\\001\\\\323K\\\\375!\\\\340\\\\t\\\\367\\\\375\\\\346\\\\264W\\\\207\\\\000\\\\2101\\\\035:\\\\314\\\\233\\\\246\\\\275\\\\207\\\\v\\\\\\\\\\\\\\\\\\\\343\\\\202\\\\026\\\\274\\\\037\\\\213\\\\314\\\\303V\\\\2116<*+\\\\352\\\\255\\\\026\\\\204M\\\\332\\\\340\\\\nT\\\\306\\\\360Pa\\\\304\\\\002\\\\024\\\\356\\\\247\\\\220\\\\263\\\\257l\\\\230\\\\350\\\\362\\\\027Yl\\\\300\\\\316lk\\\\232\\\\f\\\\333\\\\235,\\\\234\\\\336\\\\204+JE\\\\263>\\\\237\\\\177\\\\305z\\\\017\\\\252\\\\311@\\\\341e\\\\026\\\\300dk\\\\305\\\\212V\\\\334\\\\377\\\\004cb\\\\217p\\\\n\\\\307w\\\\0046\\\\2261|\\\\024\\\\\\\\N\\\\336\\\\223G\\\\263~n\\\\271\\\\256\\\\264\\\\346\\\\227\\\\301\\\\032\\\\301\\\\030\\\\bw\\\\241Z.\\\\302\\\\261\\\\027 \\\\005\\\\374B\\\\357R\\\\231\\\\237Ct\\\\324\\\\232I\\\\322\\\\370\\\\303T\\\\253\\\\205\\\\354\\\\233\\\\337\\\\031C\\\\3215O\\\\3746\\\\016\\\\360b &\\\\300\\\\201\\\\244U\\\\221\\\\306 Pql+c\\\\212\\\\2524\\\\314a\\\\t\\\\216\\\\275=\\\\230b\\\\207ouv[\\\\365(\\\\3...\r\n2024-12-16T16:19:27Z [ipc] {bitcoin-node-8814/b-shutoff-8814} IPC client recv ChainNotifications.chainStateFlushed$Results ()\r\n2024-12-16T16:19:27Z Shutdown: done                                                                       \r\n2024-12-16T16:19:32Z [ipc] {bitcoin-node-8814/b-capnp-loop-8816} IPC server destroy N2mp11ProxyServerIN3ipc5capnp8messages5ChainEEE\r\n2024-12-16T16:19:32Z [ipc] {bitcoin-node-8814/b-capnp-loop-8816} IPC server: socket disconnected.\r\n2024-12-16T16:19:32Z [ipc] {bitcoin-node-8814/b-capnp-loop-8816} IPC server destroy N2mp11ProxyServerIN3ipc5capnp8messages4InitEEE\r\nSegmentation fault                                                                                        \r\n```\r\n</details>",
      "user": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29409#issuecomment-2546088852",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29409"
    },
    {
      "event": "referenced",
      "id": 15913420916,
      "node_id": "REFE_lADOABII585-rKJvzwAAAAO0g4h0",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15913420916",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "621a04a70f95d2d6093205d45ac0e431c2f6297d",
      "commit_url": "https://api.github.com/repos/chaincodelabs/libmultiprocess/commits/621a04a70f95d2d6093205d45ac0e431c2f6297d",
      "created_at": "2025-01-13T21:48:44Z"
    },
    {
      "event": "reviewed",
      "id": 2553664884,
      "node_id": "PRR_kwDOABII586YNdV0",
      "url": null,
      "actor": null,
      "commit_id": "64b833854a34d87cde4e0ca4173d75012c401a7a",
      "commit_url": null,
      "created_at": null,
      "author_association": "NONE",
      "user": {
        "login": "Big621",
        "id": 193676940,
        "node_id": "U_kgDOC4tGjA",
        "avatar_url": "https://avatars.githubusercontent.com/u/193676940?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Big621",
        "html_url": "https://github.com/Big621",
        "followers_url": "https://api.github.com/users/Big621/followers",
        "following_url": "https://api.github.com/users/Big621/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Big621/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Big621/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Big621/subscriptions",
        "organizations_url": "https://api.github.com/users/Big621/orgs",
        "repos_url": "https://api.github.com/users/Big621/repos",
        "events_url": "https://api.github.com/users/Big621/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Big621/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29409#pullrequestreview-2553664884",
      "submitted_at": "2025-01-15T19:02:16Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29409"
    },
    {
      "event": "reviewed",
      "id": 2553666876,
      "node_id": "PRR_kwDOABII586YNd08",
      "url": null,
      "actor": null,
      "commit_id": "64b833854a34d87cde4e0ca4173d75012c401a7a",
      "commit_url": null,
      "created_at": null,
      "author_association": "NONE",
      "user": {
        "login": "Big621",
        "id": 193676940,
        "node_id": "U_kgDOC4tGjA",
        "avatar_url": "https://avatars.githubusercontent.com/u/193676940?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Big621",
        "html_url": "https://github.com/Big621",
        "followers_url": "https://api.github.com/users/Big621/followers",
        "following_url": "https://api.github.com/users/Big621/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Big621/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Big621/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Big621/subscriptions",
        "organizations_url": "https://api.github.com/users/Big621/orgs",
        "repos_url": "https://api.github.com/users/Big621/repos",
        "events_url": "https://api.github.com/users/Big621/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Big621/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29409#pullrequestreview-2553666876",
      "submitted_at": "2025-01-15T19:03:03Z",
      "state": "APPROVED",
      "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29409"
    }
  ],
  "comments": [
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1503377237",
      "pull_request_review_id": 1901881088,
      "id": 1503377237,
      "node_id": "PRRC_kwDOABII585Zm7dV",
      "diff_hunk": "@@ -103,6 +197,65 @@ decltype(auto) CustomReadField(TypeList<UniValue>, Priority<1>, InvokeContext& i\n         value.read(std::string_view{data.begin(), data.size()});\n     });\n }\n+\n+//! Overload CustomBuildField and CustomReadField to serialize\n+//! UniValue::type_error exceptions as text strings.\n+template <typename Value, typename Output>\n+void CustomBuildField(TypeList<UniValue::type_error>, Priority<1>, InvokeContext& invoke_context,\n+                      Value&& value, Output&& output)\n+{\n+    BuildField(TypeList<std::string>(), invoke_context, output, std::string(value.what()));\n+}\n+\n+template <typename Input, typename ReadDest>\n+decltype(auto) CustomReadField(TypeList<UniValue::type_error>, Priority<1>, InvokeContext& invoke_context,\n+                               Input&& input, ReadDest&& read_dest)\n+{\n+    read_dest.construct(ReadField(TypeList<std::string>(), invoke_context, input, mp::ReadDestTemp<std::string>()));\n+}\n+\n+//! Overload CustomBuildField and CustomReadField to serialize util::Result\n+//! return values as common.capnp Result and ResultVoid structs\n+template <typename LocalType, typename Value, typename Output>\n+void CustomBuildField(TypeList<util::Result<LocalType>>, Priority<1>, InvokeContext& invoke_context, Value&& value,\n+                      Output&& output)\n+{\n+    auto result = output.init();\n+    if (value) {",
      "path": "src/ipc/capnp/common-types.h",
      "position": 97,
      "original_position": 174,
      "commit_id": "64b833854a34d87cde4e0ca4173d75012c401a7a",
      "original_commit_id": "eeb441ae7c12b5dafadd1c7315e5435731b3da6c",
      "in_reply_to_id": null,
      "user": {
        "login": "cbergqvist",
        "id": 581308,
        "node_id": "MDQ6VXNlcjU4MTMwOA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/581308?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cbergqvist",
        "html_url": "https://github.com/cbergqvist",
        "followers_url": "https://api.github.com/users/cbergqvist/followers",
        "following_url": "https://api.github.com/users/cbergqvist/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/cbergqvist/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/cbergqvist/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/cbergqvist/subscriptions",
        "organizations_url": "https://api.github.com/users/cbergqvist/orgs",
        "repos_url": "https://api.github.com/users/cbergqvist/repos",
        "events_url": "https://api.github.com/users/cbergqvist/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/cbergqvist/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Nit: compiles with `value.has_value()` here, which is clearer than `operator bool()`. But maybe you were intending to support types which don't have `.has_value()`?",
      "created_at": "2024-02-26T22:12:50Z",
      "updated_at": "2024-02-28T13:56:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29409#discussion_r1503377237",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1503377237"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29409"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 199,
      "original_line": 199,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1503832875",
      "pull_request_review_id": 1901881088,
      "id": 1503832875,
      "node_id": "PRRC_kwDOABII585Zoqsr",
      "diff_hunk": "@@ -0,0 +1,82 @@\n+// Copyright (c) 2024 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_IPC_CAPNP_CHAIN_TYPES_H\n+#define BITCOIN_IPC_CAPNP_CHAIN_TYPES_H\n+\n+#include <ipc/capnp/chain.capnp.proxy.h>\n+#include <ipc/capnp/common.capnp.proxy-types.h>\n+#include <ipc/capnp/handler.capnp.proxy-types.h>\n+#include <interfaces/chain.h>\n+#include <policy/fees.h>\n+#include <rpc/server.h>\n+\n+#include <any>",
      "path": "src/ipc/capnp/chain-types.h",
      "position": null,
      "original_position": 15,
      "commit_id": "64b833854a34d87cde4e0ca4173d75012c401a7a",
      "original_commit_id": "2fd10424c04397e50c6683a82db8a0bb68e0f6cc",
      "in_reply_to_id": null,
      "user": {
        "login": "cbergqvist",
        "id": 581308,
        "node_id": "MDQ6VXNlcjU4MTMwOA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/581308?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cbergqvist",
        "html_url": "https://github.com/cbergqvist",
        "followers_url": "https://api.github.com/users/cbergqvist/followers",
        "following_url": "https://api.github.com/users/cbergqvist/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/cbergqvist/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/cbergqvist/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/cbergqvist/subscriptions",
        "organizations_url": "https://api.github.com/users/cbergqvist/orgs",
        "repos_url": "https://api.github.com/users/cbergqvist/repos",
        "events_url": "https://api.github.com/users/cbergqvist/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/cbergqvist/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Builds fine without `#include <any>` using `g++` on Linux?",
      "created_at": "2024-02-27T08:33:47Z",
      "updated_at": "2024-02-28T13:56:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29409#discussion_r1503832875",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1503832875"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29409"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 15,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1505998416",
      "pull_request_review_id": 1901881088,
      "id": 1505998416,
      "node_id": "PRRC_kwDOABII585Zw7ZQ",
      "diff_hunk": "@@ -256,6 +256,146 @@ decltype(auto) CustomReadField(TypeList<util::Result<LocalType>>, Priority<1>, I\n         }\n     });\n }\n+\n+//! Overload CustomBuildField and CustomReadField to serialize other types of\n+//! objects that have CustomBuildMessage and CustomReadMessage overloads.\n+//! Defining BuildMessage and ReadMessage overloads is simpler than defining\n+//! BuildField and ReadField overloads because these overloads can be normal\n+//! functions instead of template functions, and defined in a .cpp file instead\n+//! of a header.\n+template <typename LocalType, typename Value, typename Output>\n+void CustomBuildField(TypeList<LocalType>, Priority<2>, InvokeContext& invoke_context, Value&& value, Output&& output,\n+                      decltype(CustomBuildMessage(invoke_context, value, std::move(output.get())))* enable = nullptr)\n+{\n+    CustomBuildMessage(invoke_context, value, std::move(output.init()));\n+}\n+\n+template <typename LocalType, typename Reader, typename ReadDest>\n+decltype(auto) CustomReadField(TypeList<LocalType>, Priority<2>, InvokeContext& invoke_context, Reader&& reader,\n+                               ReadDest&& read_dest,\n+                               decltype(CustomReadMessage(invoke_context, reader.get(),\n+                                                          std::declval<LocalType&>()))* enable = nullptr)\n+{\n+    return read_dest.update([&](auto& value) { CustomReadMessage(invoke_context, reader.get(), value); });\n+}\n+\n+//! Helper for CustomPassField below. Call Accessor::get method if it has one,\n+//! otherwise return capnp::Void.\n+template <typename Accessor, typename Message>\n+decltype(auto) MaybeGet(Message&& message, decltype(Accessor::get(message))* enable = nullptr)\n+{\n+    return Accessor::get(message);\n+}\n+\n+template <typename Accessor>\n+::capnp::Void MaybeGet(...)\n+{\n+    return {};\n+}\n+\n+//! Helper for CustomPassField below. Call Accessor::init method if it has one,\n+//! otherwise do nothing.\n+template <typename Accessor, typename Message>\n+decltype(auto) MaybeInit(Message&& message, decltype(Accessor::get(message))* enable = nullptr)\n+{\n+    return Accessor::init(message);\n+}\n+\n+template <typename Accessor>\n+::capnp::Void MaybeInit(...)\n+{\n+    return {};\n+}\n+\n+//! Overload CustomPassField to serialize types of objects that have\n+//! CustomPassMessage overloads. Defining PassMessage overloads is simpler than\n+//! defining PassField overloads, because PassMessage overloads can be normal\n+//! functions instead of template functions, and defined in a .cpp file instead\n+//! of a header.\n+//!\n+//! Defining a PassField or PassMessage overload is useful for input/output\n+//! parameters. If an overload is not defined these parameters will just be\n+//! deserialized on the server side with ReadField into a temporary variable,\n+//! then the server method will be called passing the temporary variable as a\n+//! parameter, then the temporary variable will be serialized and sent back to\n+//! the client with BuildField. But if a PassField or PassMessage overload is\n+//! defined, the overload is called with a callback to invoke and pass\n+//! parameters to the server side function, and run arbitrary code before and\n+//! after invoking the function.\n+template <typename Accessor, typename... LocalTypes, typename ServerContext, typename Fn, typename... Args>\n+auto CustomPassField(TypeList<LocalTypes...>, ServerContext& server_context, Fn&& fn, Args&&... args)\n+    -> decltype(CustomPassMessage(server_context, MaybeGet<Accessor>(server_context.call_context.getParams()),\n+                                  MaybeGet<Accessor>(server_context.call_context.getResults()), nullptr))\n+{\n+    CustomPassMessage(server_context, MaybeGet<Accessor>(server_context.call_context.getParams()),\n+                      MaybeInit<Accessor>(server_context.call_context.getResults()),\n+                      [&](LocalTypes... param) { fn.invoke(server_context, std::forward<Args>(args)..., param...); });\n+}\n+\n+//! Generic ::capnp::Data field builder for any class that a Span can be\n+//! constructed from, particularly BaseHash and base_blob classes and\n+//! subclasses. It's also used to serialize vector<unsigned char>\n+//! GCSFilter::ElementSet set elements.",
      "path": "src/ipc/capnp/common-types.h",
      "position": null,
      "original_position": 83,
      "commit_id": "64b833854a34d87cde4e0ca4173d75012c401a7a",
      "original_commit_id": "2fd10424c04397e50c6683a82db8a0bb68e0f6cc",
      "in_reply_to_id": null,
      "user": {
        "login": "cbergqvist",
        "id": 581308,
        "node_id": "MDQ6VXNlcjU4MTMwOA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/581308?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/cbergqvist",
        "html_url": "https://github.com/cbergqvist",
        "followers_url": "https://api.github.com/users/cbergqvist/followers",
        "following_url": "https://api.github.com/users/cbergqvist/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/cbergqvist/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/cbergqvist/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/cbergqvist/subscriptions",
        "organizations_url": "https://api.github.com/users/cbergqvist/orgs",
        "repos_url": "https://api.github.com/users/cbergqvist/repos",
        "events_url": "https://api.github.com/users/cbergqvist/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/cbergqvist/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Should this say ...\"vector\\<unsigned char\\> *and* GCSFilter::ElementSet set elements.\"?",
      "created_at": "2024-02-28T13:51:28Z",
      "updated_at": "2024-02-28T13:56:59Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29409#discussion_r1505998416",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1505998416"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29409"
        }
      },
      "start_line": null,
      "original_start_line": 337,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 338,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1506146321",
      "pull_request_review_id": 1906565161,
      "id": 1506146321,
      "node_id": "PRRC_kwDOABII585ZxfgR",
      "diff_hunk": "@@ -103,6 +197,65 @@ decltype(auto) CustomReadField(TypeList<UniValue>, Priority<1>, InvokeContext& i\n         value.read(std::string_view{data.begin(), data.size()});\n     });\n }\n+\n+//! Overload CustomBuildField and CustomReadField to serialize\n+//! UniValue::type_error exceptions as text strings.\n+template <typename Value, typename Output>\n+void CustomBuildField(TypeList<UniValue::type_error>, Priority<1>, InvokeContext& invoke_context,\n+                      Value&& value, Output&& output)\n+{\n+    BuildField(TypeList<std::string>(), invoke_context, output, std::string(value.what()));\n+}\n+\n+template <typename Input, typename ReadDest>\n+decltype(auto) CustomReadField(TypeList<UniValue::type_error>, Priority<1>, InvokeContext& invoke_context,\n+                               Input&& input, ReadDest&& read_dest)\n+{\n+    read_dest.construct(ReadField(TypeList<std::string>(), invoke_context, input, mp::ReadDestTemp<std::string>()));\n+}\n+\n+//! Overload CustomBuildField and CustomReadField to serialize util::Result\n+//! return values as common.capnp Result and ResultVoid structs\n+template <typename LocalType, typename Value, typename Output>\n+void CustomBuildField(TypeList<util::Result<LocalType>>, Priority<1>, InvokeContext& invoke_context, Value&& value,\n+                      Output&& output)\n+{\n+    auto result = output.init();\n+    if (value) {",
      "path": "src/ipc/capnp/common-types.h",
      "position": 97,
      "original_position": 174,
      "commit_id": "64b833854a34d87cde4e0ca4173d75012c401a7a",
      "original_commit_id": "eeb441ae7c12b5dafadd1c7315e5435731b3da6c",
      "in_reply_to_id": 1503377237,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/29409#discussion_r1503377237\r\n\r\n> Nit: compiles with `value.has_value()` here, which is clearer than `operator bool()`. But maybe you were intending to support types which don't have `.has_value()`?\r\n\r\nI mostly just don't agree it is clearer and I like the \"if value, use value\" pattern from c++ and python. I think it removes noise and makes code easier to read, also makes it easier for code to evolve, for example updating code using a plain pointer to switch to smart pointer.\r\n\r\nIn this case I am looking forward to this code working with `ResultPtr` from #26022, where operator bool and has_value have different meanings. Operator bool in that case is true if a pointer is contained AND the pointer value is not null. has_value is true in that case if a pointer is contained, whether or not it is null. After #26022, this code would look something like:\r\n\r\n```c++\r\nif (value) {\r\n     BuildField(..., ValueAccessor, *value);\r\n}\r\nif (!value.has_value()) {\r\n    BuildField(..., FailureAccessor, value.GetFailure());\r\n}\r\nBuildField(..., ErrorsAccessor, value.GetErrors());\r\nBuildField(..., WarningsAccessor, value.GetWarnings());\r\n```\r\n\r\nAnd if `value` is a `ResultPtr` the first line would need to be `if (value)` not `if value.has_value()` to work.",
      "created_at": "2024-02-28T15:25:51Z",
      "updated_at": "2024-02-28T16:14:35Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29409#discussion_r1506146321",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1506146321"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29409"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 199,
      "original_line": 199,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1506146538",
      "pull_request_review_id": 1906565161,
      "id": 1506146538,
      "node_id": "PRRC_kwDOABII585Zxfjq",
      "diff_hunk": "@@ -0,0 +1,82 @@\n+// Copyright (c) 2024 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_IPC_CAPNP_CHAIN_TYPES_H\n+#define BITCOIN_IPC_CAPNP_CHAIN_TYPES_H\n+\n+#include <ipc/capnp/chain.capnp.proxy.h>\n+#include <ipc/capnp/common.capnp.proxy-types.h>\n+#include <ipc/capnp/handler.capnp.proxy-types.h>\n+#include <interfaces/chain.h>\n+#include <policy/fees.h>\n+#include <rpc/server.h>\n+\n+#include <any>",
      "path": "src/ipc/capnp/chain-types.h",
      "position": null,
      "original_position": 15,
      "commit_id": "64b833854a34d87cde4e0ca4173d75012c401a7a",
      "original_commit_id": "2fd10424c04397e50c6683a82db8a0bb68e0f6cc",
      "in_reply_to_id": 1503832875,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/29409#discussion_r1503832875\r\n\r\n> Builds fine without `#include <any>` using `g++` on Linux?\r\n\r\nGood catch, I think this must have been left over from a previous version of this file. Removed now.",
      "created_at": "2024-02-28T15:26:01Z",
      "updated_at": "2024-02-28T16:14:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29409#discussion_r1506146538",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1506146538"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29409"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 15,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1506153142",
      "pull_request_review_id": 1906565161,
      "id": 1506153142,
      "node_id": "PRRC_kwDOABII585ZxhK2",
      "diff_hunk": "@@ -256,6 +256,146 @@ decltype(auto) CustomReadField(TypeList<util::Result<LocalType>>, Priority<1>, I\n         }\n     });\n }\n+\n+//! Overload CustomBuildField and CustomReadField to serialize other types of\n+//! objects that have CustomBuildMessage and CustomReadMessage overloads.\n+//! Defining BuildMessage and ReadMessage overloads is simpler than defining\n+//! BuildField and ReadField overloads because these overloads can be normal\n+//! functions instead of template functions, and defined in a .cpp file instead\n+//! of a header.\n+template <typename LocalType, typename Value, typename Output>\n+void CustomBuildField(TypeList<LocalType>, Priority<2>, InvokeContext& invoke_context, Value&& value, Output&& output,\n+                      decltype(CustomBuildMessage(invoke_context, value, std::move(output.get())))* enable = nullptr)\n+{\n+    CustomBuildMessage(invoke_context, value, std::move(output.init()));\n+}\n+\n+template <typename LocalType, typename Reader, typename ReadDest>\n+decltype(auto) CustomReadField(TypeList<LocalType>, Priority<2>, InvokeContext& invoke_context, Reader&& reader,\n+                               ReadDest&& read_dest,\n+                               decltype(CustomReadMessage(invoke_context, reader.get(),\n+                                                          std::declval<LocalType&>()))* enable = nullptr)\n+{\n+    return read_dest.update([&](auto& value) { CustomReadMessage(invoke_context, reader.get(), value); });\n+}\n+\n+//! Helper for CustomPassField below. Call Accessor::get method if it has one,\n+//! otherwise return capnp::Void.\n+template <typename Accessor, typename Message>\n+decltype(auto) MaybeGet(Message&& message, decltype(Accessor::get(message))* enable = nullptr)\n+{\n+    return Accessor::get(message);\n+}\n+\n+template <typename Accessor>\n+::capnp::Void MaybeGet(...)\n+{\n+    return {};\n+}\n+\n+//! Helper for CustomPassField below. Call Accessor::init method if it has one,\n+//! otherwise do nothing.\n+template <typename Accessor, typename Message>\n+decltype(auto) MaybeInit(Message&& message, decltype(Accessor::get(message))* enable = nullptr)\n+{\n+    return Accessor::init(message);\n+}\n+\n+template <typename Accessor>\n+::capnp::Void MaybeInit(...)\n+{\n+    return {};\n+}\n+\n+//! Overload CustomPassField to serialize types of objects that have\n+//! CustomPassMessage overloads. Defining PassMessage overloads is simpler than\n+//! defining PassField overloads, because PassMessage overloads can be normal\n+//! functions instead of template functions, and defined in a .cpp file instead\n+//! of a header.\n+//!\n+//! Defining a PassField or PassMessage overload is useful for input/output\n+//! parameters. If an overload is not defined these parameters will just be\n+//! deserialized on the server side with ReadField into a temporary variable,\n+//! then the server method will be called passing the temporary variable as a\n+//! parameter, then the temporary variable will be serialized and sent back to\n+//! the client with BuildField. But if a PassField or PassMessage overload is\n+//! defined, the overload is called with a callback to invoke and pass\n+//! parameters to the server side function, and run arbitrary code before and\n+//! after invoking the function.\n+template <typename Accessor, typename... LocalTypes, typename ServerContext, typename Fn, typename... Args>\n+auto CustomPassField(TypeList<LocalTypes...>, ServerContext& server_context, Fn&& fn, Args&&... args)\n+    -> decltype(CustomPassMessage(server_context, MaybeGet<Accessor>(server_context.call_context.getParams()),\n+                                  MaybeGet<Accessor>(server_context.call_context.getResults()), nullptr))\n+{\n+    CustomPassMessage(server_context, MaybeGet<Accessor>(server_context.call_context.getParams()),\n+                      MaybeInit<Accessor>(server_context.call_context.getResults()),\n+                      [&](LocalTypes... param) { fn.invoke(server_context, std::forward<Args>(args)..., param...); });\n+}\n+\n+//! Generic ::capnp::Data field builder for any class that a Span can be\n+//! constructed from, particularly BaseHash and base_blob classes and\n+//! subclasses. It's also used to serialize vector<unsigned char>\n+//! GCSFilter::ElementSet set elements.",
      "path": "src/ipc/capnp/common-types.h",
      "position": null,
      "original_position": 83,
      "commit_id": "64b833854a34d87cde4e0ca4173d75012c401a7a",
      "original_commit_id": "2fd10424c04397e50c6683a82db8a0bb68e0f6cc",
      "in_reply_to_id": 1505998416,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/29409#discussion_r1505998416\r\n\r\n> Should this say ...\"vector<unsigned char> _and_ GCSFilter::ElementSet set elements.\"?\r\n\r\nI think it's technically correct because the the vectors _are_ the set elements but I changed the comment to make it clearer.",
      "created_at": "2024-02-28T15:30:02Z",
      "updated_at": "2024-02-28T16:14:06Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29409#discussion_r1506153142",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1506153142"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29409"
        }
      },
      "start_line": null,
      "original_start_line": 337,
      "start_side": "RIGHT",
      "line": null,
      "original_line": 338,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1515411394",
      "pull_request_review_id": 1921347149,
      "id": 1515411394,
      "node_id": "PRRC_kwDOABII585aU1fC",
      "diff_hunk": "@@ -6,16 +6,63 @@\n #define BITCOIN_IPC_CAPNP_COMMON_TYPES_H\n \n #include <clientversion.h>\n+#include <protocol.h>\n #include <streams.h>\n #include <univalue.h>\n+#include <util/result.h>\n+#include <util/translation.h>\n \n #include <cstddef>\n #include <mp/proxy-types.h>\n #include <type_traits>\n+#include <unordered_set>\n #include <utility>\n \n namespace ipc {\n namespace capnp {\n+//! Convert kj::ArrayPtr to base_blob.\n+template <typename T>\n+inline T ToBlob(const kj::ArrayPtr<const kj::byte>& array)\n+{\n+    return T({array.begin(), array.begin() + array.size()});\n+}\n+\n+//! Convert base_blob to kj::ArrayPtr.\n+template <typename T>\n+inline kj::ArrayPtr<const kj::byte> ToArray(const T& blob)\n+{\n+    return {reinterpret_cast<const kj::byte*>(blob.data()), blob.size()};\n+}\n+\n+//! Construct a ParamStream wrapping data stream with serialization parameters\n+//! needed to pass transaction and address objects between bitcoin processes.\n+template<typename S>\n+auto Wrap(S& s)\n+{\n+    return ParamsStream{s, TX_WITH_WITNESS, CAddress::V2_NETWORK};",
      "path": "src/ipc/capnp/common-types.h",
      "position": 45,
      "original_position": 37,
      "commit_id": "64b833854a34d87cde4e0ca4173d75012c401a7a",
      "original_commit_id": "eeb441ae7c12b5dafadd1c7315e5435731b3da6c",
      "in_reply_to_id": null,
      "user": {
        "login": "ariard",
        "id": 23310655,
        "node_id": "MDQ6VXNlcjIzMzEwNjU1",
        "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ariard",
        "html_url": "https://github.com/ariard",
        "followers_url": "https://api.github.com/users/ariard/followers",
        "following_url": "https://api.github.com/users/ariard/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ariard/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ariard/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
        "organizations_url": "https://api.github.com/users/ariard/orgs",
        "repos_url": "https://api.github.com/users/ariard/repos",
        "events_url": "https://api.github.com/users/ariard/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ariard/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "i think `Wrap` could be parameterized with any `CAddress` version.\r\ne.g useful if someone wanna test the native crypto noise framework between bitcoin processes.\r\nor in the future experiment with better crypto-primitives for bip324.",
      "created_at": "2024-03-07T02:54:34Z",
      "updated_at": "2024-03-07T02:57:01Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29409#discussion_r1515411394",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1515411394"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29409"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 50,
      "original_line": 50,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1693315482",
      "pull_request_review_id": 2202166099,
      "id": 1693315482,
      "node_id": "PRRC_kwDOABII585k7fGa",
      "diff_hunk": "@@ -143,6 +197,64 @@ decltype(auto) CustomReadField(TypeList<UniValue>, Priority<1>, InvokeContext& i\n         value.read(std::string_view{data.begin(), data.size()});\n     });\n }\n+\n+//! Overload CustomBuildField and CustomReadField to serialize\n+//! UniValue::type_error exceptions as text strings.\n+template <typename Value, typename Output>\n+void CustomBuildField(TypeList<UniValue::type_error>, Priority<1>, InvokeContext& invoke_context,\n+                      Value&& value, Output&& output)\n+{\n+    BuildField(TypeList<std::string>(), invoke_context, output, std::string(value.what()));\n+}\n+\n+template <typename Input, typename ReadDest>\n+decltype(auto) CustomReadField(TypeList<UniValue::type_error>, Priority<1>, InvokeContext& invoke_context,",
      "path": "src/ipc/capnp/common-types.h",
      "position": 84,
      "original_position": 103,
      "commit_id": "64b833854a34d87cde4e0ca4173d75012c401a7a",
      "original_commit_id": "198fbd295be060b421b34b63f0dbf954dd528f76",
      "in_reply_to_id": null,
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Just a question: From what I gathered so far `UniValue` is required in these interfaces for error handling (like here) and to pass around the ban map. Is that correct? It seems unfortunate to me that `UniValue` types end up in the interfaces and need to be handled here. Is the intention to eventually refactor this?",
      "created_at": "2024-07-26T16:19:38Z",
      "updated_at": "2024-07-26T16:46:07Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29409#discussion_r1693315482",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1693315482"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29409"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 186,
      "original_line": 186,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1693325216",
      "pull_request_review_id": 2202254574,
      "id": 1693325216,
      "node_id": "PRRC_kwDOABII585k7heg",
      "diff_hunk": "@@ -6,16 +6,63 @@\n #define BITCOIN_IPC_CAPNP_COMMON_TYPES_H\n \n #include <clientversion.h>\n+#include <protocol.h>\n #include <streams.h>\n #include <univalue.h>\n+#include <util/result.h>\n+#include <util/translation.h>\n \n #include <cstddef>\n #include <mp/proxy-types.h>\n #include <type_traits>\n+#include <unordered_set>\n #include <utility>\n \n namespace ipc {\n namespace capnp {\n+//! Convert kj::ArrayPtr to base_blob.\n+template <typename T>\n+inline T ToBlob(const kj::ArrayPtr<const kj::byte>& array)\n+{\n+    return T({array.begin(), array.begin() + array.size()});\n+}\n+\n+//! Convert base_blob to kj::ArrayPtr.\n+template <typename T>\n+inline kj::ArrayPtr<const kj::byte> ToArray(const T& blob)\n+{\n+    return {reinterpret_cast<const kj::byte*>(blob.data()), blob.size()};\n+}\n+\n+//! Construct a ParamStream wrapping data stream with serialization parameters\n+//! needed to pass transaction and address objects between bitcoin processes.\n+template<typename S>\n+auto Wrap(S& s)\n+{\n+    return ParamsStream{s, TX_WITH_WITNESS, CAddress::V2_NETWORK};",
      "path": "src/ipc/capnp/common-types.h",
      "position": 45,
      "original_position": 37,
      "commit_id": "64b833854a34d87cde4e0ca4173d75012c401a7a",
      "original_commit_id": "eeb441ae7c12b5dafadd1c7315e5435731b3da6c",
      "in_reply_to_id": 1515411394,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/29409#discussion_r1515411394\r\n\r\n> i think `Wrap` could be parameterized with any `CAddress` version. e.g useful if someone wanna test the native crypto noise framework between bitcoin processes. or in the future experiment with better crypto-primitives for bip324.\r\n\r\nFor now the Wrap function is basically a workaround for not having a serialization option that says \"serialize all the data in this object to a stream, I don't care about the specific serialization format.\" So the formats here just chosen to preserve all data, and don't really matter otherwise.\r\n\r\nBut I could imagine use-cases like you are suggesting where we may want to customize which serialization format is used depending on the IPC connection. I think it would not be that hard to do by adding parameters to Wrap, which is not called many places, or by writing different CustomReadField/BuildField overloads which do not call Wrap. For now though the easiest thing is for the wrapped stream to just hardcode parameters that serialize all the data.",
      "created_at": "2024-07-26T16:29:15Z",
      "updated_at": "2024-07-26T16:34:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29409#discussion_r1693325216",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1693325216"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29409"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 50,
      "original_line": 50,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1693364655",
      "pull_request_review_id": 2202323401,
      "id": 1693364655,
      "node_id": "PRRC_kwDOABII585k7rGv",
      "diff_hunk": "@@ -143,6 +197,64 @@ decltype(auto) CustomReadField(TypeList<UniValue>, Priority<1>, InvokeContext& i\n         value.read(std::string_view{data.begin(), data.size()});\n     });\n }\n+\n+//! Overload CustomBuildField and CustomReadField to serialize\n+//! UniValue::type_error exceptions as text strings.\n+template <typename Value, typename Output>\n+void CustomBuildField(TypeList<UniValue::type_error>, Priority<1>, InvokeContext& invoke_context,\n+                      Value&& value, Output&& output)\n+{\n+    BuildField(TypeList<std::string>(), invoke_context, output, std::string(value.what()));\n+}\n+\n+template <typename Input, typename ReadDest>\n+decltype(auto) CustomReadField(TypeList<UniValue::type_error>, Priority<1>, InvokeContext& invoke_context,",
      "path": "src/ipc/capnp/common-types.h",
      "position": 84,
      "original_position": 103,
      "commit_id": "64b833854a34d87cde4e0ca4173d75012c401a7a",
      "original_commit_id": "198fbd295be060b421b34b63f0dbf954dd528f76",
      "in_reply_to_id": 1693315482,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/29409#discussion_r1693315482\r\n\r\n> Just a question: From what I gathered so far `UniValue` is required in these interfaces for error handling (like here) and to pass around the ban map. Is that correct? It seems unfortunate to me that `UniValue` types end up in the interfaces and need to be handled here. Is the intention to eventually refactor this?\r\n\r\nIn general there are lots of ways current interfaces are not ideal and can be improved over time, to improve performance (especially to reduce round trips), reduce dependencies, and provide more flexibility.\r\n\r\nOn UniValue specifically, handling UniValue exceptions could go away if wallet processes would start their own RPC servers on their own ports instead of getting RPC requests forwarded to them by the bitcoin-node process. That wouldn't be hard to do, but it would be a UI change, and there's a chicken and egg problem because it doesn't really make sense to make wallets listen on different ports before wallets are able to run in separate processes.\r\n\r\nUniValue is also used to pass settings between processes. For example when GUI settings are changed, the GUI calls the updateRwSetting() function which takes a univalue parameter to save the setting. In this case I think it makes sense for the interface to use univalues, since the settings are saved as JSON, though of course alternatives are possible and might be more ideal.\r\n\r\nFor the ban map, maybe univalue is not ideal for some reason, but it also might be better than defining a new serialization format. I don't see a problem with the current approach in any of these cases, but making changes is always possible",
      "created_at": "2024-07-26T17:11:03Z",
      "updated_at": "2024-07-26T17:11:52Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29409#discussion_r1693364655",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1693364655"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29409"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 186,
      "original_line": 186,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1834309312",
      "pull_request_review_id": 2423634328,
      "id": 1834309312,
      "node_id": "PRRC_kwDOABII585tVVbA",
      "diff_hunk": "@@ -0,0 +1,191 @@\n+# Copyright (c) 2024 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+@0x94f21a4864bd2c65;\n+\n+using Cxx = import \"/capnp/c++.capnp\";\n+$Cxx.namespace(\"ipc::capnp::messages\");\n+\n+using Proxy = import \"/mp/proxy.capnp\";\n+$Proxy.include(\"interfaces/chain.h\");\n+$Proxy.include(\"rpc/server.h\");\n+$Proxy.includeTypes(\"ipc/capnp/chain-types.h\");\n+\n+using Common = import \"common.capnp\";\n+using Handler = import \"handler.capnp\";\n+\n+interface Chain $Proxy.wrap(\"interfaces::Chain\") {\n+    destroy @0 (context :Proxy.Context) -> ();\n+    getHeight @1 (context :Proxy.Context) -> (result :Int32, hasResult :Bool);\n+    getBlockHash @2 (context :Proxy.Context, height :Int32) -> (result :Data);\n+    haveBlockOnDisk @3 (context :Proxy.Context, height :Int32) -> (result :Bool);\n+    getTipLocator @4 (context :Proxy.Context) -> (result :Data);",
      "path": "src/ipc/capnp/chain.capnp",
      "position": 23,
      "original_position": 23,
      "commit_id": "64b833854a34d87cde4e0ca4173d75012c401a7a",
      "original_commit_id": "968f14fc7a634f65f4399dc042a37d4a39f2c703",
      "in_reply_to_id": null,
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Looking at the usage of this endpoint I am wondering if it is even necessary? I.e. instead of getting it first and using it for `chainStateFlushed`, the `chainStateFlushed` implementation could just do that internally.\r\n\r\nMore generally I have been wondering if it would be a good idea to eventually strongly type these `Data` blobs (and similarly the enums)? For example here, wrapping it in a `BlockLocator` type. I don't think this is relevant as long as libmultiprocess is used to create the c++ wrappers, which do have the full data types, but I am not sure how other languages would do this if they were used as clients to the interfaces eventually. Do you know how this could look like?",
      "created_at": "2024-11-08T12:17:10Z",
      "updated_at": "2024-11-08T13:11:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29409#discussion_r1834309312",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1834309312"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29409"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 23,
      "original_line": 23,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1834348410",
      "pull_request_review_id": 2423634328,
      "id": 1834348410,
      "node_id": "PRRC_kwDOABII585tVe96",
      "diff_hunk": "@@ -0,0 +1,191 @@\n+# Copyright (c) 2024 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+@0x94f21a4864bd2c65;\n+\n+using Cxx = import \"/capnp/c++.capnp\";\n+$Cxx.namespace(\"ipc::capnp::messages\");\n+\n+using Proxy = import \"/mp/proxy.capnp\";\n+$Proxy.include(\"interfaces/chain.h\");\n+$Proxy.include(\"rpc/server.h\");\n+$Proxy.includeTypes(\"ipc/capnp/chain-types.h\");\n+\n+using Common = import \"common.capnp\";\n+using Handler = import \"handler.capnp\";\n+\n+interface Chain $Proxy.wrap(\"interfaces::Chain\") {\n+    destroy @0 (context :Proxy.Context) -> ();\n+    getHeight @1 (context :Proxy.Context) -> (result :Int32, hasResult :Bool);\n+    getBlockHash @2 (context :Proxy.Context, height :Int32) -> (result :Data);\n+    haveBlockOnDisk @3 (context :Proxy.Context, height :Int32) -> (result :Bool);\n+    getTipLocator @4 (context :Proxy.Context) -> (result :Data);\n+    getActiveChainLocator @5 (context :Proxy.Context, blockHash :Data) -> (result :Data);\n+    findLocatorFork @6 (context :Proxy.Context, locator :Data) -> (result :Int32, hasResult :Bool);\n+    hasBlockFilterIndex @7 (context :Proxy.Context, filterType :UInt8) -> (result :Bool);\n+    blockFilterMatchesAny @8 (context :Proxy.Context, filterType :UInt8, blockHash :Data, filterSet :List(Data)) -> (result :Bool, hasResult :Bool);\n+    findBlock @9 (context :Proxy.Context, hash :Data, block :FoundBlockParam) -> (block :FoundBlockResult, result :Bool);\n+    findFirstBlockWithTimeAndHeight @10 (context :Proxy.Context, minTime :Int64, minHeight :Int32, block :FoundBlockParam) -> (block :FoundBlockResult, result :Bool);\n+    findAncestorByHeight @11 (context :Proxy.Context, blockHash :Data, ancestorHeight :Int32, ancestor :FoundBlockParam) -> (ancestor :FoundBlockResult, result :Bool);\n+    findAncestorByHash @12 (context :Proxy.Context, blockHash :Data, ancestorHash :Data, ancestor :FoundBlockParam) -> (ancestor :FoundBlockResult, result :Bool);\n+    findCommonAncestor @13 (context :Proxy.Context, blockHash1 :Data, blockHash2 :Data, ancestor :FoundBlockParam, block1 :FoundBlockParam, block2 :FoundBlockParam) -> (ancestor :FoundBlockResult, block1 :FoundBlockResult, block2 :FoundBlockResult, result :Bool);\n+    findCoins @14 (context :Proxy.Context, coins :List(Common.Pair(Data, Data))) -> (coins :List(Common.Pair(Data, Data)));\n+    guessVerificationProgress @15 (context :Proxy.Context, blockHash :Data) -> (result :Float64);\n+    hasBlocks @16 (context :Proxy.Context, blockHash :Data, minHeight :Int32, maxHeight: Int32, hasMaxHeight :Bool) -> (result :Bool);\n+    isRBFOptIn @17 (context :Proxy.Context, tx :Data) -> (result :Int32);\n+    isInMempool @18 (context :Proxy.Context, tx :Data) -> (result :Bool);",
      "path": "src/ipc/capnp/chain.capnp",
      "position": null,
      "original_position": 37,
      "commit_id": "64b833854a34d87cde4e0ca4173d75012c401a7a",
      "original_commit_id": "968f14fc7a634f65f4399dc042a37d4a39f2c703",
      "in_reply_to_id": null,
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Nit: Shouldn't this be called `txid`?",
      "created_at": "2024-11-08T12:43:01Z",
      "updated_at": "2024-11-08T13:11:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29409#discussion_r1834348410",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1834348410"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29409"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 37,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1834362068",
      "pull_request_review_id": 2423634328,
      "id": 1834362068,
      "node_id": "PRRC_kwDOABII585tViTU",
      "diff_hunk": "@@ -0,0 +1,191 @@\n+# Copyright (c) 2024 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+@0x94f21a4864bd2c65;\n+\n+using Cxx = import \"/capnp/c++.capnp\";\n+$Cxx.namespace(\"ipc::capnp::messages\");\n+\n+using Proxy = import \"/mp/proxy.capnp\";\n+$Proxy.include(\"interfaces/chain.h\");\n+$Proxy.include(\"rpc/server.h\");\n+$Proxy.includeTypes(\"ipc/capnp/chain-types.h\");\n+\n+using Common = import \"common.capnp\";\n+using Handler = import \"handler.capnp\";\n+\n+interface Chain $Proxy.wrap(\"interfaces::Chain\") {\n+    destroy @0 (context :Proxy.Context) -> ();\n+    getHeight @1 (context :Proxy.Context) -> (result :Int32, hasResult :Bool);\n+    getBlockHash @2 (context :Proxy.Context, height :Int32) -> (result :Data);\n+    haveBlockOnDisk @3 (context :Proxy.Context, height :Int32) -> (result :Bool);\n+    getTipLocator @4 (context :Proxy.Context) -> (result :Data);\n+    getActiveChainLocator @5 (context :Proxy.Context, blockHash :Data) -> (result :Data);\n+    findLocatorFork @6 (context :Proxy.Context, locator :Data) -> (result :Int32, hasResult :Bool);\n+    hasBlockFilterIndex @7 (context :Proxy.Context, filterType :UInt8) -> (result :Bool);\n+    blockFilterMatchesAny @8 (context :Proxy.Context, filterType :UInt8, blockHash :Data, filterSet :List(Data)) -> (result :Bool, hasResult :Bool);\n+    findBlock @9 (context :Proxy.Context, hash :Data, block :FoundBlockParam) -> (block :FoundBlockResult, result :Bool);\n+    findFirstBlockWithTimeAndHeight @10 (context :Proxy.Context, minTime :Int64, minHeight :Int32, block :FoundBlockParam) -> (block :FoundBlockResult, result :Bool);\n+    findAncestorByHeight @11 (context :Proxy.Context, blockHash :Data, ancestorHeight :Int32, ancestor :FoundBlockParam) -> (ancestor :FoundBlockResult, result :Bool);\n+    findAncestorByHash @12 (context :Proxy.Context, blockHash :Data, ancestorHash :Data, ancestor :FoundBlockParam) -> (ancestor :FoundBlockResult, result :Bool);\n+    findCommonAncestor @13 (context :Proxy.Context, blockHash1 :Data, blockHash2 :Data, ancestor :FoundBlockParam, block1 :FoundBlockParam, block2 :FoundBlockParam) -> (ancestor :FoundBlockResult, block1 :FoundBlockResult, block2 :FoundBlockResult, result :Bool);\n+    findCoins @14 (context :Proxy.Context, coins :List(Common.Pair(Data, Data))) -> (coins :List(Common.Pair(Data, Data)));\n+    guessVerificationProgress @15 (context :Proxy.Context, blockHash :Data) -> (result :Float64);\n+    hasBlocks @16 (context :Proxy.Context, blockHash :Data, minHeight :Int32, maxHeight: Int32, hasMaxHeight :Bool) -> (result :Bool);\n+    isRBFOptIn @17 (context :Proxy.Context, tx :Data) -> (result :Int32);\n+    isInMempool @18 (context :Proxy.Context, tx :Data) -> (result :Bool);\n+    hasDescendantsInMempool @19 (context :Proxy.Context, txid :Data) -> (result :Bool);\n+    broadcastTransaction @20 (context :Proxy.Context, tx: Data, maxTxFee :Int64, relay :Bool) -> (error: Text, result :Bool);\n+    getTransactionAncestry @21 (context :Proxy.Context, txid :Data) -> (ancestors :UInt64, descendants :UInt64, ancestorsize :UInt64, ancestorfees :Int64);\n+    calculateIndividualBumpFees @22 (context :Proxy.Context, outpoints :List(Data), targetFeerate :Data) -> (result: List(Common.PairInt64(Data)));\n+    calculateCombinedBumpFee @23 (context :Proxy.Context, outpoints :List(Data), targetFeerate :Data) -> (result :Int64, hasResult :Bool);\n+    getPackageLimits @24 (context :Proxy.Context) -> (ancestors :UInt64, descendants :UInt64);\n+    checkChainLimits @25 (context :Proxy.Context, tx :Data) -> (result :Common.ResultVoid);\n+    estimateSmartFee @26 (context :Proxy.Context, numBlocks :Int32, conservative :Bool, wantCalc :Bool) -> (calc :FeeCalculation, result :Data);\n+    estimateMaxBlocks @27 (context :Proxy.Context) -> (result :UInt32);\n+    mempoolMinFee @28 (context :Proxy.Context) -> (result :Data);\n+    relayMinFee @29 (context :Proxy.Context) -> (result :Data);\n+    relayIncrementalFee @30 (context :Proxy.Context) -> (result :Data);\n+    relayDustFee @31 (context :Proxy.Context) -> (result :Data);\n+    havePruned @32 (context :Proxy.Context) -> (result :Bool);\n+    isReadyToBroadcast @33 (context :Proxy.Context) -> (result :Bool);\n+    isInitialBlockDownload @34 (context :Proxy.Context) -> (result :Bool);\n+    shutdownRequested @35 (context :Proxy.Context) -> (result :Bool);\n+    initMessage @36 (context :Proxy.Context, message :Text) -> ();\n+    initWarning @37 (context :Proxy.Context, message :Common.BilingualStr) -> ();\n+    initError @38 (context :Proxy.Context, message :Common.BilingualStr) -> ();\n+    showProgress @39 (context :Proxy.Context, title :Text, progress :Int32, resumePossible :Bool) -> ();\n+    handleNotifications @40 (context :Proxy.Context, notifications :ChainNotifications) -> (result :Handler.Handler);\n+    waitForNotificationsIfTipChanged @41 (context :Proxy.Context, oldTip :Data) -> ();\n+    handleRpc @42 (context :Proxy.Context, command :RPCCommand) -> (result :Handler.Handler);\n+    rpcEnableDeprecated @43 (context :Proxy.Context, method :Text) -> (result :Bool);\n+    rpcRunLater @44 (context :Proxy.Context, name :Text, fn: RunLaterCallback, seconds: Int64) -> ();\n+    getSetting @45 (context :Proxy.Context, name :Text) -> (result :Text);\n+    getSettingsList @46 (context :Proxy.Context, name :Text) -> (result :List(Text));\n+    getRwSetting @47 (context :Proxy.Context, name :Text) -> (result :Text);\n+    updateRwSetting @48 (context :Proxy.Context, name :Text, update: SettingsUpdateCallback) -> (result :Bool);\n+    overwriteRwSetting @49 (context :Proxy.Context, name :Text, value :Text, write :Bool) -> (result :Bool);",
      "path": "src/ipc/capnp/chain.capnp",
      "position": null,
      "original_position": 68,
      "commit_id": "64b833854a34d87cde4e0ca4173d75012c401a7a",
      "original_commit_id": "968f14fc7a634f65f4399dc042a37d4a39f2c703",
      "in_reply_to_id": null,
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "How does this `write` argument here map to the `action` argument in the c++ interface? They seem to have different types.",
      "created_at": "2024-11-08T12:54:50Z",
      "updated_at": "2024-11-08T13:11:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29409#discussion_r1834362068",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1834362068"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29409"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 68,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1834365825",
      "pull_request_review_id": 2423634328,
      "id": 1834365825,
      "node_id": "PRRC_kwDOABII585tVjOB",
      "diff_hunk": "@@ -0,0 +1,191 @@\n+# Copyright (c) 2024 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+@0x94f21a4864bd2c65;\n+\n+using Cxx = import \"/capnp/c++.capnp\";\n+$Cxx.namespace(\"ipc::capnp::messages\");\n+\n+using Proxy = import \"/mp/proxy.capnp\";\n+$Proxy.include(\"interfaces/chain.h\");\n+$Proxy.include(\"rpc/server.h\");\n+$Proxy.includeTypes(\"ipc/capnp/chain-types.h\");\n+\n+using Common = import \"common.capnp\";\n+using Handler = import \"handler.capnp\";\n+\n+interface Chain $Proxy.wrap(\"interfaces::Chain\") {\n+    destroy @0 (context :Proxy.Context) -> ();\n+    getHeight @1 (context :Proxy.Context) -> (result :Int32, hasResult :Bool);\n+    getBlockHash @2 (context :Proxy.Context, height :Int32) -> (result :Data);\n+    haveBlockOnDisk @3 (context :Proxy.Context, height :Int32) -> (result :Bool);\n+    getTipLocator @4 (context :Proxy.Context) -> (result :Data);\n+    getActiveChainLocator @5 (context :Proxy.Context, blockHash :Data) -> (result :Data);\n+    findLocatorFork @6 (context :Proxy.Context, locator :Data) -> (result :Int32, hasResult :Bool);\n+    hasBlockFilterIndex @7 (context :Proxy.Context, filterType :UInt8) -> (result :Bool);\n+    blockFilterMatchesAny @8 (context :Proxy.Context, filterType :UInt8, blockHash :Data, filterSet :List(Data)) -> (result :Bool, hasResult :Bool);\n+    findBlock @9 (context :Proxy.Context, hash :Data, block :FoundBlockParam) -> (block :FoundBlockResult, result :Bool);\n+    findFirstBlockWithTimeAndHeight @10 (context :Proxy.Context, minTime :Int64, minHeight :Int32, block :FoundBlockParam) -> (block :FoundBlockResult, result :Bool);\n+    findAncestorByHeight @11 (context :Proxy.Context, blockHash :Data, ancestorHeight :Int32, ancestor :FoundBlockParam) -> (ancestor :FoundBlockResult, result :Bool);\n+    findAncestorByHash @12 (context :Proxy.Context, blockHash :Data, ancestorHash :Data, ancestor :FoundBlockParam) -> (ancestor :FoundBlockResult, result :Bool);\n+    findCommonAncestor @13 (context :Proxy.Context, blockHash1 :Data, blockHash2 :Data, ancestor :FoundBlockParam, block1 :FoundBlockParam, block2 :FoundBlockParam) -> (ancestor :FoundBlockResult, block1 :FoundBlockResult, block2 :FoundBlockResult, result :Bool);\n+    findCoins @14 (context :Proxy.Context, coins :List(Common.Pair(Data, Data))) -> (coins :List(Common.Pair(Data, Data)));\n+    guessVerificationProgress @15 (context :Proxy.Context, blockHash :Data) -> (result :Float64);\n+    hasBlocks @16 (context :Proxy.Context, blockHash :Data, minHeight :Int32, maxHeight: Int32, hasMaxHeight :Bool) -> (result :Bool);\n+    isRBFOptIn @17 (context :Proxy.Context, tx :Data) -> (result :Int32);\n+    isInMempool @18 (context :Proxy.Context, tx :Data) -> (result :Bool);\n+    hasDescendantsInMempool @19 (context :Proxy.Context, txid :Data) -> (result :Bool);\n+    broadcastTransaction @20 (context :Proxy.Context, tx: Data, maxTxFee :Int64, relay :Bool) -> (error: Text, result :Bool);\n+    getTransactionAncestry @21 (context :Proxy.Context, txid :Data) -> (ancestors :UInt64, descendants :UInt64, ancestorsize :UInt64, ancestorfees :Int64);\n+    calculateIndividualBumpFees @22 (context :Proxy.Context, outpoints :List(Data), targetFeerate :Data) -> (result: List(Common.PairInt64(Data)));\n+    calculateCombinedBumpFee @23 (context :Proxy.Context, outpoints :List(Data), targetFeerate :Data) -> (result :Int64, hasResult :Bool);\n+    getPackageLimits @24 (context :Proxy.Context) -> (ancestors :UInt64, descendants :UInt64);\n+    checkChainLimits @25 (context :Proxy.Context, tx :Data) -> (result :Common.ResultVoid);\n+    estimateSmartFee @26 (context :Proxy.Context, numBlocks :Int32, conservative :Bool, wantCalc :Bool) -> (calc :FeeCalculation, result :Data);\n+    estimateMaxBlocks @27 (context :Proxy.Context) -> (result :UInt32);\n+    mempoolMinFee @28 (context :Proxy.Context) -> (result :Data);\n+    relayMinFee @29 (context :Proxy.Context) -> (result :Data);\n+    relayIncrementalFee @30 (context :Proxy.Context) -> (result :Data);\n+    relayDustFee @31 (context :Proxy.Context) -> (result :Data);\n+    havePruned @32 (context :Proxy.Context) -> (result :Bool);\n+    isReadyToBroadcast @33 (context :Proxy.Context) -> (result :Bool);\n+    isInitialBlockDownload @34 (context :Proxy.Context) -> (result :Bool);\n+    shutdownRequested @35 (context :Proxy.Context) -> (result :Bool);\n+    initMessage @36 (context :Proxy.Context, message :Text) -> ();\n+    initWarning @37 (context :Proxy.Context, message :Common.BilingualStr) -> ();\n+    initError @38 (context :Proxy.Context, message :Common.BilingualStr) -> ();\n+    showProgress @39 (context :Proxy.Context, title :Text, progress :Int32, resumePossible :Bool) -> ();\n+    handleNotifications @40 (context :Proxy.Context, notifications :ChainNotifications) -> (result :Handler.Handler);\n+    waitForNotificationsIfTipChanged @41 (context :Proxy.Context, oldTip :Data) -> ();\n+    handleRpc @42 (context :Proxy.Context, command :RPCCommand) -> (result :Handler.Handler);\n+    rpcEnableDeprecated @43 (context :Proxy.Context, method :Text) -> (result :Bool);\n+    rpcRunLater @44 (context :Proxy.Context, name :Text, fn: RunLaterCallback, seconds: Int64) -> ();\n+    getSetting @45 (context :Proxy.Context, name :Text) -> (result :Text);\n+    getSettingsList @46 (context :Proxy.Context, name :Text) -> (result :List(Text));\n+    getRwSetting @47 (context :Proxy.Context, name :Text) -> (result :Text);\n+    updateRwSetting @48 (context :Proxy.Context, name :Text, update: SettingsUpdateCallback) -> (result :Bool);\n+    overwriteRwSetting @49 (context :Proxy.Context, name :Text, value :Text, write :Bool) -> (result :Bool);\n+    deleteRwSettings @50 (context :Proxy.Context, name :Text, write :Bool) -> (result :Bool);\n+    requestMempoolTransactions @51 (context :Proxy.Context, notifications :ChainNotifications) -> ();\n+    hasAssumedValidChain @52 (context :Proxy.Context) -> (result :Bool);\n+}\n+\n+interface ChainNotifications $Proxy.wrap(\"interfaces::Chain::Notifications\") {\n+    destroy @0 (context :Proxy.Context) -> ();\n+    transactionAddedToMempool @1 (context :Proxy.Context, tx :Data) -> ();\n+    transactionRemovedFromMempool @2 (context :Proxy.Context, tx :Data, reason :Int32) -> ();\n+    blockConnected @3 (context :Proxy.Context, role: UInt32, block :BlockInfo) -> ();",
      "path": "src/ipc/capnp/chain.capnp",
      "position": 78,
      "original_position": 78,
      "commit_id": "64b833854a34d87cde4e0ca4173d75012c401a7a",
      "original_commit_id": "968f14fc7a634f65f4399dc042a37d4a39f2c703",
      "in_reply_to_id": null,
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Why is the `role` typed as `UInt32` when the other enums are typed as `Int32`?",
      "created_at": "2024-11-08T12:57:57Z",
      "updated_at": "2024-11-08T13:11:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29409#discussion_r1834365825",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1834365825"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29409"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 78,
      "original_line": 78,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1834376651",
      "pull_request_review_id": 2423634328,
      "id": 1834376651,
      "node_id": "PRRC_kwDOABII585tVl3L",
      "diff_hunk": "@@ -0,0 +1,191 @@\n+# Copyright (c) 2024 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+@0x94f21a4864bd2c65;\n+\n+using Cxx = import \"/capnp/c++.capnp\";\n+$Cxx.namespace(\"ipc::capnp::messages\");\n+\n+using Proxy = import \"/mp/proxy.capnp\";\n+$Proxy.include(\"interfaces/chain.h\");\n+$Proxy.include(\"rpc/server.h\");\n+$Proxy.includeTypes(\"ipc/capnp/chain-types.h\");\n+\n+using Common = import \"common.capnp\";\n+using Handler = import \"handler.capnp\";\n+\n+interface Chain $Proxy.wrap(\"interfaces::Chain\") {\n+    destroy @0 (context :Proxy.Context) -> ();\n+    getHeight @1 (context :Proxy.Context) -> (result :Int32, hasResult :Bool);\n+    getBlockHash @2 (context :Proxy.Context, height :Int32) -> (result :Data);\n+    haveBlockOnDisk @3 (context :Proxy.Context, height :Int32) -> (result :Bool);\n+    getTipLocator @4 (context :Proxy.Context) -> (result :Data);\n+    getActiveChainLocator @5 (context :Proxy.Context, blockHash :Data) -> (result :Data);\n+    findLocatorFork @6 (context :Proxy.Context, locator :Data) -> (result :Int32, hasResult :Bool);\n+    hasBlockFilterIndex @7 (context :Proxy.Context, filterType :UInt8) -> (result :Bool);\n+    blockFilterMatchesAny @8 (context :Proxy.Context, filterType :UInt8, blockHash :Data, filterSet :List(Data)) -> (result :Bool, hasResult :Bool);\n+    findBlock @9 (context :Proxy.Context, hash :Data, block :FoundBlockParam) -> (block :FoundBlockResult, result :Bool);\n+    findFirstBlockWithTimeAndHeight @10 (context :Proxy.Context, minTime :Int64, minHeight :Int32, block :FoundBlockParam) -> (block :FoundBlockResult, result :Bool);\n+    findAncestorByHeight @11 (context :Proxy.Context, blockHash :Data, ancestorHeight :Int32, ancestor :FoundBlockParam) -> (ancestor :FoundBlockResult, result :Bool);\n+    findAncestorByHash @12 (context :Proxy.Context, blockHash :Data, ancestorHash :Data, ancestor :FoundBlockParam) -> (ancestor :FoundBlockResult, result :Bool);\n+    findCommonAncestor @13 (context :Proxy.Context, blockHash1 :Data, blockHash2 :Data, ancestor :FoundBlockParam, block1 :FoundBlockParam, block2 :FoundBlockParam) -> (ancestor :FoundBlockResult, block1 :FoundBlockResult, block2 :FoundBlockResult, result :Bool);\n+    findCoins @14 (context :Proxy.Context, coins :List(Common.Pair(Data, Data))) -> (coins :List(Common.Pair(Data, Data)));\n+    guessVerificationProgress @15 (context :Proxy.Context, blockHash :Data) -> (result :Float64);\n+    hasBlocks @16 (context :Proxy.Context, blockHash :Data, minHeight :Int32, maxHeight: Int32, hasMaxHeight :Bool) -> (result :Bool);\n+    isRBFOptIn @17 (context :Proxy.Context, tx :Data) -> (result :Int32);\n+    isInMempool @18 (context :Proxy.Context, tx :Data) -> (result :Bool);\n+    hasDescendantsInMempool @19 (context :Proxy.Context, txid :Data) -> (result :Bool);\n+    broadcastTransaction @20 (context :Proxy.Context, tx: Data, maxTxFee :Int64, relay :Bool) -> (error: Text, result :Bool);\n+    getTransactionAncestry @21 (context :Proxy.Context, txid :Data) -> (ancestors :UInt64, descendants :UInt64, ancestorsize :UInt64, ancestorfees :Int64);\n+    calculateIndividualBumpFees @22 (context :Proxy.Context, outpoints :List(Data), targetFeerate :Data) -> (result: List(Common.PairInt64(Data)));\n+    calculateCombinedBumpFee @23 (context :Proxy.Context, outpoints :List(Data), targetFeerate :Data) -> (result :Int64, hasResult :Bool);\n+    getPackageLimits @24 (context :Proxy.Context) -> (ancestors :UInt64, descendants :UInt64);\n+    checkChainLimits @25 (context :Proxy.Context, tx :Data) -> (result :Common.ResultVoid);\n+    estimateSmartFee @26 (context :Proxy.Context, numBlocks :Int32, conservative :Bool, wantCalc :Bool) -> (calc :FeeCalculation, result :Data);\n+    estimateMaxBlocks @27 (context :Proxy.Context) -> (result :UInt32);\n+    mempoolMinFee @28 (context :Proxy.Context) -> (result :Data);\n+    relayMinFee @29 (context :Proxy.Context) -> (result :Data);\n+    relayIncrementalFee @30 (context :Proxy.Context) -> (result :Data);\n+    relayDustFee @31 (context :Proxy.Context) -> (result :Data);\n+    havePruned @32 (context :Proxy.Context) -> (result :Bool);\n+    isReadyToBroadcast @33 (context :Proxy.Context) -> (result :Bool);\n+    isInitialBlockDownload @34 (context :Proxy.Context) -> (result :Bool);\n+    shutdownRequested @35 (context :Proxy.Context) -> (result :Bool);\n+    initMessage @36 (context :Proxy.Context, message :Text) -> ();\n+    initWarning @37 (context :Proxy.Context, message :Common.BilingualStr) -> ();\n+    initError @38 (context :Proxy.Context, message :Common.BilingualStr) -> ();\n+    showProgress @39 (context :Proxy.Context, title :Text, progress :Int32, resumePossible :Bool) -> ();\n+    handleNotifications @40 (context :Proxy.Context, notifications :ChainNotifications) -> (result :Handler.Handler);\n+    waitForNotificationsIfTipChanged @41 (context :Proxy.Context, oldTip :Data) -> ();\n+    handleRpc @42 (context :Proxy.Context, command :RPCCommand) -> (result :Handler.Handler);\n+    rpcEnableDeprecated @43 (context :Proxy.Context, method :Text) -> (result :Bool);\n+    rpcRunLater @44 (context :Proxy.Context, name :Text, fn: RunLaterCallback, seconds: Int64) -> ();\n+    getSetting @45 (context :Proxy.Context, name :Text) -> (result :Text);\n+    getSettingsList @46 (context :Proxy.Context, name :Text) -> (result :List(Text));\n+    getRwSetting @47 (context :Proxy.Context, name :Text) -> (result :Text);\n+    updateRwSetting @48 (context :Proxy.Context, name :Text, update: SettingsUpdateCallback) -> (result :Bool);\n+    overwriteRwSetting @49 (context :Proxy.Context, name :Text, value :Text, write :Bool) -> (result :Bool);\n+    deleteRwSettings @50 (context :Proxy.Context, name :Text, write :Bool) -> (result :Bool);\n+    requestMempoolTransactions @51 (context :Proxy.Context, notifications :ChainNotifications) -> ();\n+    hasAssumedValidChain @52 (context :Proxy.Context) -> (result :Bool);\n+}\n+\n+interface ChainNotifications $Proxy.wrap(\"interfaces::Chain::Notifications\") {\n+    destroy @0 (context :Proxy.Context) -> ();\n+    transactionAddedToMempool @1 (context :Proxy.Context, tx :Data) -> ();\n+    transactionRemovedFromMempool @2 (context :Proxy.Context, tx :Data, reason :Int32) -> ();\n+    blockConnected @3 (context :Proxy.Context, role: UInt32, block :BlockInfo) -> ();\n+    blockDisconnected @4 (context :Proxy.Context, block :BlockInfo) -> ();\n+    updatedBlockTip @5 (context :Proxy.Context) -> ();\n+    chainStateFlushed @6 (context :Proxy.Context, role: UInt32, locator :Data) -> ();\n+}\n+\n+interface ChainClient $Proxy.wrap(\"interfaces::ChainClient\") {\n+    destroy @0 (context :Proxy.Context) -> ();\n+    registerRpcs @1 (context :Proxy.Context) -> ();\n+    verify @2 (context :Proxy.Context) -> (result :Bool);\n+    load @3 (context :Proxy.Context) -> (result :Bool);\n+    start @4 (context :Proxy.Context, scheduler :Void) -> ();\n+    flush @5 (context :Proxy.Context) -> ();\n+    stop @6 (context :Proxy.Context) -> ();\n+    setMockTime @7 (context :Proxy.Context, time :Int64) -> ();\n+    schedulerMockForward @8 (context :Proxy.Context, time :Int64) -> ();\n+}\n+\n+struct FeeCalculation $Proxy.wrap(\"FeeCalculation\") {\n+    est @0 :EstimationResult;\n+    reason @1 :Int32;\n+    desiredTarget @2 :Int32;\n+    returnedTarget @3 :Int32;\n+}\n+\n+struct EstimationResult $Proxy.wrap(\"EstimationResult\")\n+{\n+    pass @0 :EstimatorBucket;\n+    fail @1 :EstimatorBucket;\n+    decay @2 :Float64;\n+    scale @3 :UInt32;\n+}\n+\n+struct EstimatorBucket $Proxy.wrap(\"EstimatorBucket\")\n+{\n+    start @0 :Float64;\n+    end @1 :Float64;\n+    withinTarget @2 :Float64;\n+    totalConfirmed @3 :Float64;\n+    inMempool @4 :Float64;\n+    leftMempool @5 :Float64;\n+}\n+\n+struct RPCCommand $Proxy.wrap(\"CRPCCommand\") {\n+   category @0 :Text;\n+   name @1 :Text;\n+   actor @2 :ActorCallback;\n+   argNames @3 :List(RPCArg);\n+   uniqueId @4 :Int64 $Proxy.name(\"unique_id\");\n+}\n+\n+struct RPCArg {\n+   name @0 :Text;\n+   namedOnly @1: Bool;\n+}\n+\n+interface ActorCallback $Proxy.wrap(\"ProxyCallback<CRPCCommand::Actor>\") {\n+    call @0 (context :Proxy.Context, request :JSONRPCRequest, response :Text, lastCallback :Bool) -> (error :Text $Proxy.exception(\"std::exception\"), rpcError :Text $Proxy.exception(\"UniValue\"), typeError :Text $Proxy.exception(\"UniValue::type_error\"), response :Text, result: Bool);\n+}\n+\n+struct JSONRPCRequest $Proxy.wrap(\"JSONRPCRequest\") {\n+    id @0 :Text;\n+    method @1 :Text $Proxy.name(\"strMethod\");\n+    params @2 :Text;\n+    mode @3 :Int32;\n+    uri @4 :Text $Proxy.name(\"URI\");\n+    authUser @5 :Text;",
      "path": "src/ipc/capnp/chain.capnp",
      "position": 144,
      "original_position": 144,
      "commit_id": "64b833854a34d87cde4e0ca4173d75012c401a7a",
      "original_commit_id": "968f14fc7a634f65f4399dc042a37d4a39f2c703",
      "in_reply_to_id": null,
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Should this include the version as well at this point?",
      "created_at": "2024-11-08T13:05:56Z",
      "updated_at": "2024-11-08T13:11:00Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29409#discussion_r1834376651",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1834376651"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29409"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 144,
      "original_line": 144,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1838145180",
      "pull_request_review_id": 2429667905,
      "id": 1838145180,
      "node_id": "PRRC_kwDOABII585tj96c",
      "diff_hunk": "@@ -0,0 +1,191 @@\n+# Copyright (c) 2024 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+@0x94f21a4864bd2c65;\n+\n+using Cxx = import \"/capnp/c++.capnp\";\n+$Cxx.namespace(\"ipc::capnp::messages\");\n+\n+using Proxy = import \"/mp/proxy.capnp\";\n+$Proxy.include(\"interfaces/chain.h\");\n+$Proxy.include(\"rpc/server.h\");\n+$Proxy.includeTypes(\"ipc/capnp/chain-types.h\");\n+\n+using Common = import \"common.capnp\";\n+using Handler = import \"handler.capnp\";\n+\n+interface Chain $Proxy.wrap(\"interfaces::Chain\") {\n+    destroy @0 (context :Proxy.Context) -> ();\n+    getHeight @1 (context :Proxy.Context) -> (result :Int32, hasResult :Bool);\n+    getBlockHash @2 (context :Proxy.Context, height :Int32) -> (result :Data);\n+    haveBlockOnDisk @3 (context :Proxy.Context, height :Int32) -> (result :Bool);\n+    getTipLocator @4 (context :Proxy.Context) -> (result :Data);",
      "path": "src/ipc/capnp/chain.capnp",
      "position": 23,
      "original_position": 23,
      "commit_id": "64b833854a34d87cde4e0ca4173d75012c401a7a",
      "original_commit_id": "968f14fc7a634f65f4399dc042a37d4a39f2c703",
      "in_reply_to_id": 1834309312,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/29409#discussion_r1834309312\r\n\r\n> Looking at the usage of this endpoint I am wondering if it is even necessary? I.e. instead of getting it first and using it for `chainStateFlushed`, the `chainStateFlushed` implementation could just do that internally.\r\n\r\nCurrent usages are a little unusual because chainStateFlushed() is used in the wallet both to receive notifications from the node about when to flush, but also internally in the wallet to flush its own data. I'm not sure if I understand the exact code change you are suggesting, but it could be reasonable and I also have a PR #29652 which removes getTipLocator and getActiveChainLocator.\r\n\r\n> More generally I have been wondering if it would be a good idea to eventually strongly type these `Data` blobs (and similarly the enums)? [...]\r\n\r\nYes all that makes sense. The tradeoff is just that defining capnproto structs for all the serialized classes adds more code that will need to be maintained, so I think it should probably be done selectively whenever use cases arise, probably by adding new versions of methods using new types. These changes can be implemented incrementally as needed, instead of all up front.",
      "created_at": "2024-11-12T13:55:56Z",
      "updated_at": "2024-11-12T16:27:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29409#discussion_r1838145180",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1838145180"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29409"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 23,
      "original_line": 23,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1838152072",
      "pull_request_review_id": 2429667905,
      "id": 1838152072,
      "node_id": "PRRC_kwDOABII585tj_mI",
      "diff_hunk": "@@ -0,0 +1,191 @@\n+# Copyright (c) 2024 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+@0x94f21a4864bd2c65;\n+\n+using Cxx = import \"/capnp/c++.capnp\";\n+$Cxx.namespace(\"ipc::capnp::messages\");\n+\n+using Proxy = import \"/mp/proxy.capnp\";\n+$Proxy.include(\"interfaces/chain.h\");\n+$Proxy.include(\"rpc/server.h\");\n+$Proxy.includeTypes(\"ipc/capnp/chain-types.h\");\n+\n+using Common = import \"common.capnp\";\n+using Handler = import \"handler.capnp\";\n+\n+interface Chain $Proxy.wrap(\"interfaces::Chain\") {\n+    destroy @0 (context :Proxy.Context) -> ();\n+    getHeight @1 (context :Proxy.Context) -> (result :Int32, hasResult :Bool);\n+    getBlockHash @2 (context :Proxy.Context, height :Int32) -> (result :Data);\n+    haveBlockOnDisk @3 (context :Proxy.Context, height :Int32) -> (result :Bool);\n+    getTipLocator @4 (context :Proxy.Context) -> (result :Data);\n+    getActiveChainLocator @5 (context :Proxy.Context, blockHash :Data) -> (result :Data);\n+    findLocatorFork @6 (context :Proxy.Context, locator :Data) -> (result :Int32, hasResult :Bool);\n+    hasBlockFilterIndex @7 (context :Proxy.Context, filterType :UInt8) -> (result :Bool);\n+    blockFilterMatchesAny @8 (context :Proxy.Context, filterType :UInt8, blockHash :Data, filterSet :List(Data)) -> (result :Bool, hasResult :Bool);\n+    findBlock @9 (context :Proxy.Context, hash :Data, block :FoundBlockParam) -> (block :FoundBlockResult, result :Bool);\n+    findFirstBlockWithTimeAndHeight @10 (context :Proxy.Context, minTime :Int64, minHeight :Int32, block :FoundBlockParam) -> (block :FoundBlockResult, result :Bool);\n+    findAncestorByHeight @11 (context :Proxy.Context, blockHash :Data, ancestorHeight :Int32, ancestor :FoundBlockParam) -> (ancestor :FoundBlockResult, result :Bool);\n+    findAncestorByHash @12 (context :Proxy.Context, blockHash :Data, ancestorHash :Data, ancestor :FoundBlockParam) -> (ancestor :FoundBlockResult, result :Bool);\n+    findCommonAncestor @13 (context :Proxy.Context, blockHash1 :Data, blockHash2 :Data, ancestor :FoundBlockParam, block1 :FoundBlockParam, block2 :FoundBlockParam) -> (ancestor :FoundBlockResult, block1 :FoundBlockResult, block2 :FoundBlockResult, result :Bool);\n+    findCoins @14 (context :Proxy.Context, coins :List(Common.Pair(Data, Data))) -> (coins :List(Common.Pair(Data, Data)));\n+    guessVerificationProgress @15 (context :Proxy.Context, blockHash :Data) -> (result :Float64);\n+    hasBlocks @16 (context :Proxy.Context, blockHash :Data, minHeight :Int32, maxHeight: Int32, hasMaxHeight :Bool) -> (result :Bool);\n+    isRBFOptIn @17 (context :Proxy.Context, tx :Data) -> (result :Int32);\n+    isInMempool @18 (context :Proxy.Context, tx :Data) -> (result :Bool);",
      "path": "src/ipc/capnp/chain.capnp",
      "position": null,
      "original_position": 37,
      "commit_id": "64b833854a34d87cde4e0ca4173d75012c401a7a",
      "original_commit_id": "968f14fc7a634f65f4399dc042a37d4a39f2c703",
      "in_reply_to_id": 1834348410,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/29409#discussion_r1834348410\r\n\r\n> Nit: Shouldn't this be called `txid`?\r\n\r\nNice catch, fixed! Might be a good idea to make sure these names are correct, even though they are just documentation and don't affect behavior.",
      "created_at": "2024-11-12T13:59:24Z",
      "updated_at": "2024-11-12T16:27:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29409#discussion_r1838152072",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1838152072"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29409"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 37,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1838357818",
      "pull_request_review_id": 2429667905,
      "id": 1838357818,
      "node_id": "PRRC_kwDOABII585tkx06",
      "diff_hunk": "@@ -0,0 +1,191 @@\n+# Copyright (c) 2024 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+@0x94f21a4864bd2c65;\n+\n+using Cxx = import \"/capnp/c++.capnp\";\n+$Cxx.namespace(\"ipc::capnp::messages\");\n+\n+using Proxy = import \"/mp/proxy.capnp\";\n+$Proxy.include(\"interfaces/chain.h\");\n+$Proxy.include(\"rpc/server.h\");\n+$Proxy.includeTypes(\"ipc/capnp/chain-types.h\");\n+\n+using Common = import \"common.capnp\";\n+using Handler = import \"handler.capnp\";\n+\n+interface Chain $Proxy.wrap(\"interfaces::Chain\") {\n+    destroy @0 (context :Proxy.Context) -> ();\n+    getHeight @1 (context :Proxy.Context) -> (result :Int32, hasResult :Bool);\n+    getBlockHash @2 (context :Proxy.Context, height :Int32) -> (result :Data);\n+    haveBlockOnDisk @3 (context :Proxy.Context, height :Int32) -> (result :Bool);\n+    getTipLocator @4 (context :Proxy.Context) -> (result :Data);\n+    getActiveChainLocator @5 (context :Proxy.Context, blockHash :Data) -> (result :Data);\n+    findLocatorFork @6 (context :Proxy.Context, locator :Data) -> (result :Int32, hasResult :Bool);\n+    hasBlockFilterIndex @7 (context :Proxy.Context, filterType :UInt8) -> (result :Bool);\n+    blockFilterMatchesAny @8 (context :Proxy.Context, filterType :UInt8, blockHash :Data, filterSet :List(Data)) -> (result :Bool, hasResult :Bool);\n+    findBlock @9 (context :Proxy.Context, hash :Data, block :FoundBlockParam) -> (block :FoundBlockResult, result :Bool);\n+    findFirstBlockWithTimeAndHeight @10 (context :Proxy.Context, minTime :Int64, minHeight :Int32, block :FoundBlockParam) -> (block :FoundBlockResult, result :Bool);\n+    findAncestorByHeight @11 (context :Proxy.Context, blockHash :Data, ancestorHeight :Int32, ancestor :FoundBlockParam) -> (ancestor :FoundBlockResult, result :Bool);\n+    findAncestorByHash @12 (context :Proxy.Context, blockHash :Data, ancestorHash :Data, ancestor :FoundBlockParam) -> (ancestor :FoundBlockResult, result :Bool);\n+    findCommonAncestor @13 (context :Proxy.Context, blockHash1 :Data, blockHash2 :Data, ancestor :FoundBlockParam, block1 :FoundBlockParam, block2 :FoundBlockParam) -> (ancestor :FoundBlockResult, block1 :FoundBlockResult, block2 :FoundBlockResult, result :Bool);\n+    findCoins @14 (context :Proxy.Context, coins :List(Common.Pair(Data, Data))) -> (coins :List(Common.Pair(Data, Data)));\n+    guessVerificationProgress @15 (context :Proxy.Context, blockHash :Data) -> (result :Float64);\n+    hasBlocks @16 (context :Proxy.Context, blockHash :Data, minHeight :Int32, maxHeight: Int32, hasMaxHeight :Bool) -> (result :Bool);\n+    isRBFOptIn @17 (context :Proxy.Context, tx :Data) -> (result :Int32);\n+    isInMempool @18 (context :Proxy.Context, tx :Data) -> (result :Bool);\n+    hasDescendantsInMempool @19 (context :Proxy.Context, txid :Data) -> (result :Bool);\n+    broadcastTransaction @20 (context :Proxy.Context, tx: Data, maxTxFee :Int64, relay :Bool) -> (error: Text, result :Bool);\n+    getTransactionAncestry @21 (context :Proxy.Context, txid :Data) -> (ancestors :UInt64, descendants :UInt64, ancestorsize :UInt64, ancestorfees :Int64);\n+    calculateIndividualBumpFees @22 (context :Proxy.Context, outpoints :List(Data), targetFeerate :Data) -> (result: List(Common.PairInt64(Data)));\n+    calculateCombinedBumpFee @23 (context :Proxy.Context, outpoints :List(Data), targetFeerate :Data) -> (result :Int64, hasResult :Bool);\n+    getPackageLimits @24 (context :Proxy.Context) -> (ancestors :UInt64, descendants :UInt64);\n+    checkChainLimits @25 (context :Proxy.Context, tx :Data) -> (result :Common.ResultVoid);\n+    estimateSmartFee @26 (context :Proxy.Context, numBlocks :Int32, conservative :Bool, wantCalc :Bool) -> (calc :FeeCalculation, result :Data);\n+    estimateMaxBlocks @27 (context :Proxy.Context) -> (result :UInt32);\n+    mempoolMinFee @28 (context :Proxy.Context) -> (result :Data);\n+    relayMinFee @29 (context :Proxy.Context) -> (result :Data);\n+    relayIncrementalFee @30 (context :Proxy.Context) -> (result :Data);\n+    relayDustFee @31 (context :Proxy.Context) -> (result :Data);\n+    havePruned @32 (context :Proxy.Context) -> (result :Bool);\n+    isReadyToBroadcast @33 (context :Proxy.Context) -> (result :Bool);\n+    isInitialBlockDownload @34 (context :Proxy.Context) -> (result :Bool);\n+    shutdownRequested @35 (context :Proxy.Context) -> (result :Bool);\n+    initMessage @36 (context :Proxy.Context, message :Text) -> ();\n+    initWarning @37 (context :Proxy.Context, message :Common.BilingualStr) -> ();\n+    initError @38 (context :Proxy.Context, message :Common.BilingualStr) -> ();\n+    showProgress @39 (context :Proxy.Context, title :Text, progress :Int32, resumePossible :Bool) -> ();\n+    handleNotifications @40 (context :Proxy.Context, notifications :ChainNotifications) -> (result :Handler.Handler);\n+    waitForNotificationsIfTipChanged @41 (context :Proxy.Context, oldTip :Data) -> ();\n+    handleRpc @42 (context :Proxy.Context, command :RPCCommand) -> (result :Handler.Handler);\n+    rpcEnableDeprecated @43 (context :Proxy.Context, method :Text) -> (result :Bool);\n+    rpcRunLater @44 (context :Proxy.Context, name :Text, fn: RunLaterCallback, seconds: Int64) -> ();\n+    getSetting @45 (context :Proxy.Context, name :Text) -> (result :Text);\n+    getSettingsList @46 (context :Proxy.Context, name :Text) -> (result :List(Text));\n+    getRwSetting @47 (context :Proxy.Context, name :Text) -> (result :Text);\n+    updateRwSetting @48 (context :Proxy.Context, name :Text, update: SettingsUpdateCallback) -> (result :Bool);\n+    overwriteRwSetting @49 (context :Proxy.Context, name :Text, value :Text, write :Bool) -> (result :Bool);",
      "path": "src/ipc/capnp/chain.capnp",
      "position": null,
      "original_position": 68,
      "commit_id": "64b833854a34d87cde4e0ca4173d75012c401a7a",
      "original_commit_id": "968f14fc7a634f65f4399dc042a37d4a39f2c703",
      "in_reply_to_id": 1834362068,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/29409#discussion_r1834362068\r\n\r\n> How does this `write` argument here map to the `action` argument in the c++ interface? They seem to have different types.\r\n\r\nThis is a bug, and it should have been caught by the libmultiprocess library. https://github.com/chaincodelabs/libmultiprocess/pull/120 adds a static_assert to ensure that it would result in a compile error if a specified capnproto type is ever not compatible with a c++ enum type.",
      "created_at": "2024-11-12T15:58:26Z",
      "updated_at": "2024-11-12T16:27:40Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29409#discussion_r1838357818",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1838357818"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29409"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": null,
      "original_line": 68,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1838364191",
      "pull_request_review_id": 2429667905,
      "id": 1838364191,
      "node_id": "PRRC_kwDOABII585tkzYf",
      "diff_hunk": "@@ -0,0 +1,191 @@\n+# Copyright (c) 2024 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+@0x94f21a4864bd2c65;\n+\n+using Cxx = import \"/capnp/c++.capnp\";\n+$Cxx.namespace(\"ipc::capnp::messages\");\n+\n+using Proxy = import \"/mp/proxy.capnp\";\n+$Proxy.include(\"interfaces/chain.h\");\n+$Proxy.include(\"rpc/server.h\");\n+$Proxy.includeTypes(\"ipc/capnp/chain-types.h\");\n+\n+using Common = import \"common.capnp\";\n+using Handler = import \"handler.capnp\";\n+\n+interface Chain $Proxy.wrap(\"interfaces::Chain\") {\n+    destroy @0 (context :Proxy.Context) -> ();\n+    getHeight @1 (context :Proxy.Context) -> (result :Int32, hasResult :Bool);\n+    getBlockHash @2 (context :Proxy.Context, height :Int32) -> (result :Data);\n+    haveBlockOnDisk @3 (context :Proxy.Context, height :Int32) -> (result :Bool);\n+    getTipLocator @4 (context :Proxy.Context) -> (result :Data);\n+    getActiveChainLocator @5 (context :Proxy.Context, blockHash :Data) -> (result :Data);\n+    findLocatorFork @6 (context :Proxy.Context, locator :Data) -> (result :Int32, hasResult :Bool);\n+    hasBlockFilterIndex @7 (context :Proxy.Context, filterType :UInt8) -> (result :Bool);\n+    blockFilterMatchesAny @8 (context :Proxy.Context, filterType :UInt8, blockHash :Data, filterSet :List(Data)) -> (result :Bool, hasResult :Bool);\n+    findBlock @9 (context :Proxy.Context, hash :Data, block :FoundBlockParam) -> (block :FoundBlockResult, result :Bool);\n+    findFirstBlockWithTimeAndHeight @10 (context :Proxy.Context, minTime :Int64, minHeight :Int32, block :FoundBlockParam) -> (block :FoundBlockResult, result :Bool);\n+    findAncestorByHeight @11 (context :Proxy.Context, blockHash :Data, ancestorHeight :Int32, ancestor :FoundBlockParam) -> (ancestor :FoundBlockResult, result :Bool);\n+    findAncestorByHash @12 (context :Proxy.Context, blockHash :Data, ancestorHash :Data, ancestor :FoundBlockParam) -> (ancestor :FoundBlockResult, result :Bool);\n+    findCommonAncestor @13 (context :Proxy.Context, blockHash1 :Data, blockHash2 :Data, ancestor :FoundBlockParam, block1 :FoundBlockParam, block2 :FoundBlockParam) -> (ancestor :FoundBlockResult, block1 :FoundBlockResult, block2 :FoundBlockResult, result :Bool);\n+    findCoins @14 (context :Proxy.Context, coins :List(Common.Pair(Data, Data))) -> (coins :List(Common.Pair(Data, Data)));\n+    guessVerificationProgress @15 (context :Proxy.Context, blockHash :Data) -> (result :Float64);\n+    hasBlocks @16 (context :Proxy.Context, blockHash :Data, minHeight :Int32, maxHeight: Int32, hasMaxHeight :Bool) -> (result :Bool);\n+    isRBFOptIn @17 (context :Proxy.Context, tx :Data) -> (result :Int32);\n+    isInMempool @18 (context :Proxy.Context, tx :Data) -> (result :Bool);\n+    hasDescendantsInMempool @19 (context :Proxy.Context, txid :Data) -> (result :Bool);\n+    broadcastTransaction @20 (context :Proxy.Context, tx: Data, maxTxFee :Int64, relay :Bool) -> (error: Text, result :Bool);\n+    getTransactionAncestry @21 (context :Proxy.Context, txid :Data) -> (ancestors :UInt64, descendants :UInt64, ancestorsize :UInt64, ancestorfees :Int64);\n+    calculateIndividualBumpFees @22 (context :Proxy.Context, outpoints :List(Data), targetFeerate :Data) -> (result: List(Common.PairInt64(Data)));\n+    calculateCombinedBumpFee @23 (context :Proxy.Context, outpoints :List(Data), targetFeerate :Data) -> (result :Int64, hasResult :Bool);\n+    getPackageLimits @24 (context :Proxy.Context) -> (ancestors :UInt64, descendants :UInt64);\n+    checkChainLimits @25 (context :Proxy.Context, tx :Data) -> (result :Common.ResultVoid);\n+    estimateSmartFee @26 (context :Proxy.Context, numBlocks :Int32, conservative :Bool, wantCalc :Bool) -> (calc :FeeCalculation, result :Data);\n+    estimateMaxBlocks @27 (context :Proxy.Context) -> (result :UInt32);\n+    mempoolMinFee @28 (context :Proxy.Context) -> (result :Data);\n+    relayMinFee @29 (context :Proxy.Context) -> (result :Data);\n+    relayIncrementalFee @30 (context :Proxy.Context) -> (result :Data);\n+    relayDustFee @31 (context :Proxy.Context) -> (result :Data);\n+    havePruned @32 (context :Proxy.Context) -> (result :Bool);\n+    isReadyToBroadcast @33 (context :Proxy.Context) -> (result :Bool);\n+    isInitialBlockDownload @34 (context :Proxy.Context) -> (result :Bool);\n+    shutdownRequested @35 (context :Proxy.Context) -> (result :Bool);\n+    initMessage @36 (context :Proxy.Context, message :Text) -> ();\n+    initWarning @37 (context :Proxy.Context, message :Common.BilingualStr) -> ();\n+    initError @38 (context :Proxy.Context, message :Common.BilingualStr) -> ();\n+    showProgress @39 (context :Proxy.Context, title :Text, progress :Int32, resumePossible :Bool) -> ();\n+    handleNotifications @40 (context :Proxy.Context, notifications :ChainNotifications) -> (result :Handler.Handler);\n+    waitForNotificationsIfTipChanged @41 (context :Proxy.Context, oldTip :Data) -> ();\n+    handleRpc @42 (context :Proxy.Context, command :RPCCommand) -> (result :Handler.Handler);\n+    rpcEnableDeprecated @43 (context :Proxy.Context, method :Text) -> (result :Bool);\n+    rpcRunLater @44 (context :Proxy.Context, name :Text, fn: RunLaterCallback, seconds: Int64) -> ();\n+    getSetting @45 (context :Proxy.Context, name :Text) -> (result :Text);\n+    getSettingsList @46 (context :Proxy.Context, name :Text) -> (result :List(Text));\n+    getRwSetting @47 (context :Proxy.Context, name :Text) -> (result :Text);\n+    updateRwSetting @48 (context :Proxy.Context, name :Text, update: SettingsUpdateCallback) -> (result :Bool);\n+    overwriteRwSetting @49 (context :Proxy.Context, name :Text, value :Text, write :Bool) -> (result :Bool);\n+    deleteRwSettings @50 (context :Proxy.Context, name :Text, write :Bool) -> (result :Bool);\n+    requestMempoolTransactions @51 (context :Proxy.Context, notifications :ChainNotifications) -> ();\n+    hasAssumedValidChain @52 (context :Proxy.Context) -> (result :Bool);\n+}\n+\n+interface ChainNotifications $Proxy.wrap(\"interfaces::Chain::Notifications\") {\n+    destroy @0 (context :Proxy.Context) -> ();\n+    transactionAddedToMempool @1 (context :Proxy.Context, tx :Data) -> ();\n+    transactionRemovedFromMempool @2 (context :Proxy.Context, tx :Data, reason :Int32) -> ();\n+    blockConnected @3 (context :Proxy.Context, role: UInt32, block :BlockInfo) -> ();",
      "path": "src/ipc/capnp/chain.capnp",
      "position": 78,
      "original_position": 78,
      "commit_id": "64b833854a34d87cde4e0ca4173d75012c401a7a",
      "original_commit_id": "968f14fc7a634f65f4399dc042a37d4a39f2c703",
      "in_reply_to_id": 1834365825,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/29409#discussion_r1834365825\r\n\r\n> Why is the `role` typed as `UInt32` when the other enums are typed as `Int32`?\r\n\r\nNow changed this to `Int32` to be consistent. Probably `UInt32` was used because this parameter was added at a later time than all the other code was written. The exact integer type used to represent the enum doesn't actually matter as long as it is wide enough to hold all the enum values, and as long as round-trip static casts from the enum type to the int type and back return the same enum value. After https://github.com/chaincodelabs/libmultiprocess/pull/120 it should also be a compile error if incompatible types are used",
      "created_at": "2024-11-12T16:02:02Z",
      "updated_at": "2024-11-12T16:28:33Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29409#discussion_r1838364191",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1838364191"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29409"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 78,
      "original_line": 78,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1838369167",
      "pull_request_review_id": 2429667905,
      "id": 1838369167,
      "node_id": "PRRC_kwDOABII585tk0mP",
      "diff_hunk": "@@ -0,0 +1,191 @@\n+# Copyright (c) 2024 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+@0x94f21a4864bd2c65;\n+\n+using Cxx = import \"/capnp/c++.capnp\";\n+$Cxx.namespace(\"ipc::capnp::messages\");\n+\n+using Proxy = import \"/mp/proxy.capnp\";\n+$Proxy.include(\"interfaces/chain.h\");\n+$Proxy.include(\"rpc/server.h\");\n+$Proxy.includeTypes(\"ipc/capnp/chain-types.h\");\n+\n+using Common = import \"common.capnp\";\n+using Handler = import \"handler.capnp\";\n+\n+interface Chain $Proxy.wrap(\"interfaces::Chain\") {\n+    destroy @0 (context :Proxy.Context) -> ();\n+    getHeight @1 (context :Proxy.Context) -> (result :Int32, hasResult :Bool);\n+    getBlockHash @2 (context :Proxy.Context, height :Int32) -> (result :Data);\n+    haveBlockOnDisk @3 (context :Proxy.Context, height :Int32) -> (result :Bool);\n+    getTipLocator @4 (context :Proxy.Context) -> (result :Data);\n+    getActiveChainLocator @5 (context :Proxy.Context, blockHash :Data) -> (result :Data);\n+    findLocatorFork @6 (context :Proxy.Context, locator :Data) -> (result :Int32, hasResult :Bool);\n+    hasBlockFilterIndex @7 (context :Proxy.Context, filterType :UInt8) -> (result :Bool);\n+    blockFilterMatchesAny @8 (context :Proxy.Context, filterType :UInt8, blockHash :Data, filterSet :List(Data)) -> (result :Bool, hasResult :Bool);\n+    findBlock @9 (context :Proxy.Context, hash :Data, block :FoundBlockParam) -> (block :FoundBlockResult, result :Bool);\n+    findFirstBlockWithTimeAndHeight @10 (context :Proxy.Context, minTime :Int64, minHeight :Int32, block :FoundBlockParam) -> (block :FoundBlockResult, result :Bool);\n+    findAncestorByHeight @11 (context :Proxy.Context, blockHash :Data, ancestorHeight :Int32, ancestor :FoundBlockParam) -> (ancestor :FoundBlockResult, result :Bool);\n+    findAncestorByHash @12 (context :Proxy.Context, blockHash :Data, ancestorHash :Data, ancestor :FoundBlockParam) -> (ancestor :FoundBlockResult, result :Bool);\n+    findCommonAncestor @13 (context :Proxy.Context, blockHash1 :Data, blockHash2 :Data, ancestor :FoundBlockParam, block1 :FoundBlockParam, block2 :FoundBlockParam) -> (ancestor :FoundBlockResult, block1 :FoundBlockResult, block2 :FoundBlockResult, result :Bool);\n+    findCoins @14 (context :Proxy.Context, coins :List(Common.Pair(Data, Data))) -> (coins :List(Common.Pair(Data, Data)));\n+    guessVerificationProgress @15 (context :Proxy.Context, blockHash :Data) -> (result :Float64);\n+    hasBlocks @16 (context :Proxy.Context, blockHash :Data, minHeight :Int32, maxHeight: Int32, hasMaxHeight :Bool) -> (result :Bool);\n+    isRBFOptIn @17 (context :Proxy.Context, tx :Data) -> (result :Int32);\n+    isInMempool @18 (context :Proxy.Context, tx :Data) -> (result :Bool);\n+    hasDescendantsInMempool @19 (context :Proxy.Context, txid :Data) -> (result :Bool);\n+    broadcastTransaction @20 (context :Proxy.Context, tx: Data, maxTxFee :Int64, relay :Bool) -> (error: Text, result :Bool);\n+    getTransactionAncestry @21 (context :Proxy.Context, txid :Data) -> (ancestors :UInt64, descendants :UInt64, ancestorsize :UInt64, ancestorfees :Int64);\n+    calculateIndividualBumpFees @22 (context :Proxy.Context, outpoints :List(Data), targetFeerate :Data) -> (result: List(Common.PairInt64(Data)));\n+    calculateCombinedBumpFee @23 (context :Proxy.Context, outpoints :List(Data), targetFeerate :Data) -> (result :Int64, hasResult :Bool);\n+    getPackageLimits @24 (context :Proxy.Context) -> (ancestors :UInt64, descendants :UInt64);\n+    checkChainLimits @25 (context :Proxy.Context, tx :Data) -> (result :Common.ResultVoid);\n+    estimateSmartFee @26 (context :Proxy.Context, numBlocks :Int32, conservative :Bool, wantCalc :Bool) -> (calc :FeeCalculation, result :Data);\n+    estimateMaxBlocks @27 (context :Proxy.Context) -> (result :UInt32);\n+    mempoolMinFee @28 (context :Proxy.Context) -> (result :Data);\n+    relayMinFee @29 (context :Proxy.Context) -> (result :Data);\n+    relayIncrementalFee @30 (context :Proxy.Context) -> (result :Data);\n+    relayDustFee @31 (context :Proxy.Context) -> (result :Data);\n+    havePruned @32 (context :Proxy.Context) -> (result :Bool);\n+    isReadyToBroadcast @33 (context :Proxy.Context) -> (result :Bool);\n+    isInitialBlockDownload @34 (context :Proxy.Context) -> (result :Bool);\n+    shutdownRequested @35 (context :Proxy.Context) -> (result :Bool);\n+    initMessage @36 (context :Proxy.Context, message :Text) -> ();\n+    initWarning @37 (context :Proxy.Context, message :Common.BilingualStr) -> ();\n+    initError @38 (context :Proxy.Context, message :Common.BilingualStr) -> ();\n+    showProgress @39 (context :Proxy.Context, title :Text, progress :Int32, resumePossible :Bool) -> ();\n+    handleNotifications @40 (context :Proxy.Context, notifications :ChainNotifications) -> (result :Handler.Handler);\n+    waitForNotificationsIfTipChanged @41 (context :Proxy.Context, oldTip :Data) -> ();\n+    handleRpc @42 (context :Proxy.Context, command :RPCCommand) -> (result :Handler.Handler);\n+    rpcEnableDeprecated @43 (context :Proxy.Context, method :Text) -> (result :Bool);\n+    rpcRunLater @44 (context :Proxy.Context, name :Text, fn: RunLaterCallback, seconds: Int64) -> ();\n+    getSetting @45 (context :Proxy.Context, name :Text) -> (result :Text);\n+    getSettingsList @46 (context :Proxy.Context, name :Text) -> (result :List(Text));\n+    getRwSetting @47 (context :Proxy.Context, name :Text) -> (result :Text);\n+    updateRwSetting @48 (context :Proxy.Context, name :Text, update: SettingsUpdateCallback) -> (result :Bool);\n+    overwriteRwSetting @49 (context :Proxy.Context, name :Text, value :Text, write :Bool) -> (result :Bool);\n+    deleteRwSettings @50 (context :Proxy.Context, name :Text, write :Bool) -> (result :Bool);\n+    requestMempoolTransactions @51 (context :Proxy.Context, notifications :ChainNotifications) -> ();\n+    hasAssumedValidChain @52 (context :Proxy.Context) -> (result :Bool);\n+}\n+\n+interface ChainNotifications $Proxy.wrap(\"interfaces::Chain::Notifications\") {\n+    destroy @0 (context :Proxy.Context) -> ();\n+    transactionAddedToMempool @1 (context :Proxy.Context, tx :Data) -> ();\n+    transactionRemovedFromMempool @2 (context :Proxy.Context, tx :Data, reason :Int32) -> ();\n+    blockConnected @3 (context :Proxy.Context, role: UInt32, block :BlockInfo) -> ();\n+    blockDisconnected @4 (context :Proxy.Context, block :BlockInfo) -> ();\n+    updatedBlockTip @5 (context :Proxy.Context) -> ();\n+    chainStateFlushed @6 (context :Proxy.Context, role: UInt32, locator :Data) -> ();\n+}\n+\n+interface ChainClient $Proxy.wrap(\"interfaces::ChainClient\") {\n+    destroy @0 (context :Proxy.Context) -> ();\n+    registerRpcs @1 (context :Proxy.Context) -> ();\n+    verify @2 (context :Proxy.Context) -> (result :Bool);\n+    load @3 (context :Proxy.Context) -> (result :Bool);\n+    start @4 (context :Proxy.Context, scheduler :Void) -> ();\n+    flush @5 (context :Proxy.Context) -> ();\n+    stop @6 (context :Proxy.Context) -> ();\n+    setMockTime @7 (context :Proxy.Context, time :Int64) -> ();\n+    schedulerMockForward @8 (context :Proxy.Context, time :Int64) -> ();\n+}\n+\n+struct FeeCalculation $Proxy.wrap(\"FeeCalculation\") {\n+    est @0 :EstimationResult;\n+    reason @1 :Int32;\n+    desiredTarget @2 :Int32;\n+    returnedTarget @3 :Int32;\n+}\n+\n+struct EstimationResult $Proxy.wrap(\"EstimationResult\")\n+{\n+    pass @0 :EstimatorBucket;\n+    fail @1 :EstimatorBucket;\n+    decay @2 :Float64;\n+    scale @3 :UInt32;\n+}\n+\n+struct EstimatorBucket $Proxy.wrap(\"EstimatorBucket\")\n+{\n+    start @0 :Float64;\n+    end @1 :Float64;\n+    withinTarget @2 :Float64;\n+    totalConfirmed @3 :Float64;\n+    inMempool @4 :Float64;\n+    leftMempool @5 :Float64;\n+}\n+\n+struct RPCCommand $Proxy.wrap(\"CRPCCommand\") {\n+   category @0 :Text;\n+   name @1 :Text;\n+   actor @2 :ActorCallback;\n+   argNames @3 :List(RPCArg);\n+   uniqueId @4 :Int64 $Proxy.name(\"unique_id\");\n+}\n+\n+struct RPCArg {\n+   name @0 :Text;\n+   namedOnly @1: Bool;\n+}\n+\n+interface ActorCallback $Proxy.wrap(\"ProxyCallback<CRPCCommand::Actor>\") {\n+    call @0 (context :Proxy.Context, request :JSONRPCRequest, response :Text, lastCallback :Bool) -> (error :Text $Proxy.exception(\"std::exception\"), rpcError :Text $Proxy.exception(\"UniValue\"), typeError :Text $Proxy.exception(\"UniValue::type_error\"), response :Text, result: Bool);\n+}\n+\n+struct JSONRPCRequest $Proxy.wrap(\"JSONRPCRequest\") {\n+    id @0 :Text;\n+    method @1 :Text $Proxy.name(\"strMethod\");\n+    params @2 :Text;\n+    mode @3 :Int32;\n+    uri @4 :Text $Proxy.name(\"URI\");\n+    authUser @5 :Text;",
      "path": "src/ipc/capnp/chain.capnp",
      "position": 144,
      "original_position": 144,
      "commit_id": "64b833854a34d87cde4e0ca4173d75012c401a7a",
      "original_commit_id": "968f14fc7a634f65f4399dc042a37d4a39f2c703",
      "in_reply_to_id": 1834376651,
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "re: https://github.com/bitcoin/bitcoin/pull/29409#discussion_r1834376651\r\n\r\n> Should this include the version as well at this point?\r\n\r\nYes, good catch. Added the version field and added a comment to JSONRPCRequest struct to prevent this type of bug in the future. I think this bug did not matter too much in practice because this capnp struct is only used to forward RPC requests from the node to the wallet and wallet shouldn't respond to requests differently based on JSONRPC version, but it is still a bug in the serialization that should be fixed.",
      "created_at": "2024-11-12T16:05:20Z",
      "updated_at": "2024-11-12T16:29:04Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29409#discussion_r1838369167",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1838369167"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29409"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 144,
      "original_line": 144,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1871523229",
      "pull_request_review_id": 2481936185,
      "id": 1871523229,
      "node_id": "PRRC_kwDOABII585vjS2d",
      "diff_hunk": "@@ -0,0 +1,193 @@\n+# Copyright (c) 2024 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+@0x94f21a4864bd2c65;\n+\n+using Cxx = import \"/capnp/c++.capnp\";\n+$Cxx.namespace(\"ipc::capnp::messages\");\n+\n+using Proxy = import \"/mp/proxy.capnp\";\n+$Proxy.include(\"interfaces/chain.h\");\n+$Proxy.include(\"rpc/server.h\");\n+$Proxy.includeTypes(\"ipc/capnp/chain-types.h\");\n+\n+using Common = import \"common.capnp\";\n+using Handler = import \"handler.capnp\";\n+\n+interface Chain $Proxy.wrap(\"interfaces::Chain\") {\n+    destroy @0 (context :Proxy.Context) -> ();\n+    getHeight @1 (context :Proxy.Context) -> (result :Int32, hasResult :Bool);\n+    getBlockHash @2 (context :Proxy.Context, height :Int32) -> (result :Data);\n+    haveBlockOnDisk @3 (context :Proxy.Context, height :Int32) -> (result :Bool);\n+    getTipLocator @4 (context :Proxy.Context) -> (result :Data);\n+    getActiveChainLocator @5 (context :Proxy.Context, blockHash :Data) -> (result :Data);\n+    findLocatorFork @6 (context :Proxy.Context, locator :Data) -> (result :Int32, hasResult :Bool);\n+    hasBlockFilterIndex @7 (context :Proxy.Context, filterType :UInt8) -> (result :Bool);\n+    blockFilterMatchesAny @8 (context :Proxy.Context, filterType :UInt8, blockHash :Data, filterSet :List(Data)) -> (result :Bool, hasResult :Bool);\n+    findBlock @9 (context :Proxy.Context, hash :Data, block :FoundBlockParam) -> (block :FoundBlockResult, result :Bool);\n+    findFirstBlockWithTimeAndHeight @10 (context :Proxy.Context, minTime :Int64, minHeight :Int32, block :FoundBlockParam) -> (block :FoundBlockResult, result :Bool);\n+    findAncestorByHeight @11 (context :Proxy.Context, blockHash :Data, ancestorHeight :Int32, ancestor :FoundBlockParam) -> (ancestor :FoundBlockResult, result :Bool);\n+    findAncestorByHash @12 (context :Proxy.Context, blockHash :Data, ancestorHash :Data, ancestor :FoundBlockParam) -> (ancestor :FoundBlockResult, result :Bool);\n+    findCommonAncestor @13 (context :Proxy.Context, blockHash1 :Data, blockHash2 :Data, ancestor :FoundBlockParam, block1 :FoundBlockParam, block2 :FoundBlockParam) -> (ancestor :FoundBlockResult, block1 :FoundBlockResult, block2 :FoundBlockResult, result :Bool);\n+    findCoins @14 (context :Proxy.Context, coins :List(Common.Pair(Data, Data))) -> (coins :List(Common.Pair(Data, Data)));\n+    guessVerificationProgress @15 (context :Proxy.Context, blockHash :Data) -> (result :Float64);\n+    hasBlocks @16 (context :Proxy.Context, blockHash :Data, minHeight :Int32, maxHeight: Int32, hasMaxHeight :Bool) -> (result :Bool);\n+    isRBFOptIn @17 (context :Proxy.Context, tx :Data) -> (result :Int32);\n+    isInMempool @18 (context :Proxy.Context, txid :Data) -> (result :Bool);\n+    hasDescendantsInMempool @19 (context :Proxy.Context, txid :Data) -> (result :Bool);\n+    broadcastTransaction @20 (context :Proxy.Context, tx: Data, maxTxFee :Int64, relay :Bool) -> (error: Text, result :Bool);\n+    getTransactionAncestry @21 (context :Proxy.Context, txid :Data) -> (ancestors :UInt64, descendants :UInt64, ancestorsize :UInt64, ancestorfees :Int64);\n+    calculateIndividualBumpFees @22 (context :Proxy.Context, outpoints :List(Data), targetFeerate :Data) -> (result: List(Common.PairInt64(Data)));\n+    calculateCombinedBumpFee @23 (context :Proxy.Context, outpoints :List(Data), targetFeerate :Data) -> (result :Int64, hasResult :Bool);\n+    getPackageLimits @24 (context :Proxy.Context) -> (ancestors :UInt64, descendants :UInt64);\n+    checkChainLimits @25 (context :Proxy.Context, tx :Data) -> (result :Common.ResultVoid);\n+    estimateSmartFee @26 (context :Proxy.Context, numBlocks :Int32, conservative :Bool, wantCalc :Bool) -> (calc :FeeCalculation, result :Data);\n+    estimateMaxBlocks @27 (context :Proxy.Context) -> (result :UInt32);\n+    mempoolMinFee @28 (context :Proxy.Context) -> (result :Data);\n+    relayMinFee @29 (context :Proxy.Context) -> (result :Data);\n+    relayIncrementalFee @30 (context :Proxy.Context) -> (result :Data);\n+    relayDustFee @31 (context :Proxy.Context) -> (result :Data);\n+    havePruned @32 (context :Proxy.Context) -> (result :Bool);\n+    isReadyToBroadcast @33 (context :Proxy.Context) -> (result :Bool);\n+    isInitialBlockDownload @34 (context :Proxy.Context) -> (result :Bool);\n+    shutdownRequested @35 (context :Proxy.Context) -> (result :Bool);\n+    initMessage @36 (context :Proxy.Context, message :Text) -> ();\n+    initWarning @37 (context :Proxy.Context, message :Common.BilingualStr) -> ();\n+    initError @38 (context :Proxy.Context, message :Common.BilingualStr) -> ();\n+    showProgress @39 (context :Proxy.Context, title :Text, progress :Int32, resumePossible :Bool) -> ();\n+    handleNotifications @40 (context :Proxy.Context, notifications :ChainNotifications) -> (result :Handler.Handler);\n+    waitForNotificationsIfTipChanged @41 (context :Proxy.Context, oldTip :Data) -> ();\n+    handleRpc @42 (context :Proxy.Context, command :RPCCommand) -> (result :Handler.Handler);\n+    rpcEnableDeprecated @43 (context :Proxy.Context, method :Text) -> (result :Bool);\n+    rpcRunLater @44 (context :Proxy.Context, name :Text, fn: RunLaterCallback, seconds: Int64) -> ();\n+    getSetting @45 (context :Proxy.Context, name :Text) -> (result :Text);\n+    getSettingsList @46 (context :Proxy.Context, name :Text) -> (result :List(Text));\n+    getRwSetting @47 (context :Proxy.Context, name :Text) -> (result :Text);\n+    updateRwSetting @48 (context :Proxy.Context, name :Text, update: SettingsUpdateCallback) -> (result :Bool);\n+    overwriteRwSetting @49 (context :Proxy.Context, name :Text, value :Text, action :Int32) -> (result :Bool);\n+    deleteRwSettings @50 (context :Proxy.Context, name :Text, action: Int32) -> (result :Bool);\n+    requestMempoolTransactions @51 (context :Proxy.Context, notifications :ChainNotifications) -> ();\n+    hasAssumedValidChain @52 (context :Proxy.Context) -> (result :Bool);\n+}\n+\n+interface ChainNotifications $Proxy.wrap(\"interfaces::Chain::Notifications\") {\n+    destroy @0 (context :Proxy.Context) -> ();\n+    transactionAddedToMempool @1 (context :Proxy.Context, tx :Data) -> ();\n+    transactionRemovedFromMempool @2 (context :Proxy.Context, tx :Data, reason :Int32) -> ();\n+    blockConnected @3 (context :Proxy.Context, role: UInt32, block :BlockInfo) -> ();\n+    blockDisconnected @4 (context :Proxy.Context, block :BlockInfo) -> ();\n+    updatedBlockTip @5 (context :Proxy.Context) -> ();",
      "path": "src/ipc/capnp/chain.capnp",
      "position": 80,
      "original_position": 80,
      "commit_id": "64b833854a34d87cde4e0ca4173d75012c401a7a",
      "original_commit_id": "395d5eed0475558de2c2a66914d5a5814ce38f3c",
      "in_reply_to_id": null,
      "user": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "What is the use for an `updatedBlockTip` notification with no information about the new tip?",
      "created_at": "2024-12-05T14:50:46Z",
      "updated_at": "2024-12-06T19:56:50Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29409#discussion_r1871523229",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1871523229"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29409"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 80,
      "original_line": 80,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1876772189",
      "pull_request_review_id": 2490112192,
      "id": 1876772189,
      "node_id": "PRRC_kwDOABII585v3UVd",
      "diff_hunk": "@@ -0,0 +1,195 @@\n+# Copyright (c) 2024 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+@0x94f21a4864bd2c65;\n+\n+using Cxx = import \"/capnp/c++.capnp\";\n+$Cxx.namespace(\"ipc::capnp::messages\");\n+\n+using Proxy = import \"/mp/proxy.capnp\";\n+$Proxy.include(\"interfaces/chain.h\");\n+$Proxy.include(\"rpc/server.h\");\n+$Proxy.includeTypes(\"ipc/capnp/chain-types.h\");\n+\n+using Common = import \"common.capnp\";\n+using Handler = import \"handler.capnp\";\n+\n+interface Chain $Proxy.wrap(\"interfaces::Chain\") {\n+    destroy @0 (context :Proxy.Context) -> ();\n+    getHeight @1 (context :Proxy.Context) -> (result :Int32, hasResult :Bool);\n+    getBlockHash @2 (context :Proxy.Context, height :Int32) -> (result :Data);\n+    haveBlockOnDisk @3 (context :Proxy.Context, height :Int32) -> (result :Bool);\n+    getTipLocator @4 (context :Proxy.Context) -> (result :Data);\n+    getActiveChainLocator @5 (context :Proxy.Context, blockHash :Data) -> (result :Data);\n+    findLocatorFork @6 (context :Proxy.Context, locator :Data) -> (result :Int32, hasResult :Bool);\n+    hasBlockFilterIndex @7 (context :Proxy.Context, filterType :UInt8) -> (result :Bool);\n+    blockFilterMatchesAny @8 (context :Proxy.Context, filterType :UInt8, blockHash :Data, filterSet :List(Data)) -> (result :Bool, hasResult :Bool);\n+    findBlock @9 (context :Proxy.Context, hash :Data, block :FoundBlockParam) -> (block :FoundBlockResult, result :Bool);\n+    findFirstBlockWithTimeAndHeight @10 (context :Proxy.Context, minTime :Int64, minHeight :Int32, block :FoundBlockParam) -> (block :FoundBlockResult, result :Bool);\n+    findAncestorByHeight @11 (context :Proxy.Context, blockHash :Data, ancestorHeight :Int32, ancestor :FoundBlockParam) -> (ancestor :FoundBlockResult, result :Bool);\n+    findAncestorByHash @12 (context :Proxy.Context, blockHash :Data, ancestorHash :Data, ancestor :FoundBlockParam) -> (ancestor :FoundBlockResult, result :Bool);\n+    findCommonAncestor @13 (context :Proxy.Context, blockHash1 :Data, blockHash2 :Data, ancestor :FoundBlockParam, block1 :FoundBlockParam, block2 :FoundBlockParam) -> (ancestor :FoundBlockResult, block1 :FoundBlockResult, block2 :FoundBlockResult, result :Bool);\n+    findCoins @14 (context :Proxy.Context, coins :List(Common.Pair(Data, Data))) -> (coins :List(Common.Pair(Data, Data)));\n+    guessVerificationProgress @15 (context :Proxy.Context, blockHash :Data) -> (result :Float64);\n+    hasBlocks @16 (context :Proxy.Context, blockHash :Data, minHeight :Int32, maxHeight: Int32, hasMaxHeight :Bool) -> (result :Bool);\n+    isRBFOptIn @17 (context :Proxy.Context, tx :Data) -> (result :Int32);\n+    isInMempool @18 (context :Proxy.Context, txid :Data) -> (result :Bool);\n+    hasDescendantsInMempool @19 (context :Proxy.Context, txid :Data) -> (result :Bool);\n+    broadcastTransaction @20 (context :Proxy.Context, tx: Data, maxTxFee :Int64, relay :Bool) -> (error: Text, result :Bool);\n+    getTransactionAncestry @21 (context :Proxy.Context, txid :Data) -> (ancestors :UInt64, descendants :UInt64, ancestorsize :UInt64, ancestorfees :Int64);\n+    calculateIndividualBumpFees @22 (context :Proxy.Context, outpoints :List(Data), targetFeerate :Data) -> (result: List(Common.PairInt64(Data)));\n+    calculateCombinedBumpFee @23 (context :Proxy.Context, outpoints :List(Data), targetFeerate :Data) -> (result :Int64, hasResult :Bool);",
      "path": "src/ipc/capnp/chain.capnp",
      "position": 42,
      "original_position": 42,
      "commit_id": "64b833854a34d87cde4e0ca4173d75012c401a7a",
      "original_commit_id": "64b833854a34d87cde4e0ca4173d75012c401a7a",
      "in_reply_to_id": null,
      "user": {
        "login": "darosior",
        "id": 22457751,
        "node_id": "MDQ6VXNlcjIyNDU3NzUx",
        "avatar_url": "https://avatars.githubusercontent.com/u/22457751?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/darosior",
        "html_url": "https://github.com/darosior",
        "followers_url": "https://api.github.com/users/darosior/followers",
        "following_url": "https://api.github.com/users/darosior/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/darosior/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/darosior/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
        "organizations_url": "https://api.github.com/users/darosior/orgs",
        "repos_url": "https://api.github.com/users/darosior/repos",
        "events_url": "https://api.github.com/users/darosior/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/darosior/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Why are the `CFeeRate` serialized as `Data` whereas the other `CAmount` are `Int64`?",
      "created_at": "2024-12-09T21:18:51Z",
      "updated_at": "2024-12-09T21:18:51Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29409#discussion_r1876772189",
      "author_association": "MEMBER",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1876772189"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29409"
        }
      },
      "start_line": 41,
      "original_start_line": 41,
      "start_side": "RIGHT",
      "line": 42,
      "original_line": 42,
      "side": "RIGHT"
    },
    {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1876834012",
      "pull_request_review_id": 2490220578,
      "id": 1876834012,
      "node_id": "PRRC_kwDOABII585v3jbc",
      "diff_hunk": "@@ -0,0 +1,193 @@\n+# Copyright (c) 2024 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+@0x94f21a4864bd2c65;\n+\n+using Cxx = import \"/capnp/c++.capnp\";\n+$Cxx.namespace(\"ipc::capnp::messages\");\n+\n+using Proxy = import \"/mp/proxy.capnp\";\n+$Proxy.include(\"interfaces/chain.h\");\n+$Proxy.include(\"rpc/server.h\");\n+$Proxy.includeTypes(\"ipc/capnp/chain-types.h\");\n+\n+using Common = import \"common.capnp\";\n+using Handler = import \"handler.capnp\";\n+\n+interface Chain $Proxy.wrap(\"interfaces::Chain\") {\n+    destroy @0 (context :Proxy.Context) -> ();\n+    getHeight @1 (context :Proxy.Context) -> (result :Int32, hasResult :Bool);\n+    getBlockHash @2 (context :Proxy.Context, height :Int32) -> (result :Data);\n+    haveBlockOnDisk @3 (context :Proxy.Context, height :Int32) -> (result :Bool);\n+    getTipLocator @4 (context :Proxy.Context) -> (result :Data);\n+    getActiveChainLocator @5 (context :Proxy.Context, blockHash :Data) -> (result :Data);\n+    findLocatorFork @6 (context :Proxy.Context, locator :Data) -> (result :Int32, hasResult :Bool);\n+    hasBlockFilterIndex @7 (context :Proxy.Context, filterType :UInt8) -> (result :Bool);\n+    blockFilterMatchesAny @8 (context :Proxy.Context, filterType :UInt8, blockHash :Data, filterSet :List(Data)) -> (result :Bool, hasResult :Bool);\n+    findBlock @9 (context :Proxy.Context, hash :Data, block :FoundBlockParam) -> (block :FoundBlockResult, result :Bool);\n+    findFirstBlockWithTimeAndHeight @10 (context :Proxy.Context, minTime :Int64, minHeight :Int32, block :FoundBlockParam) -> (block :FoundBlockResult, result :Bool);\n+    findAncestorByHeight @11 (context :Proxy.Context, blockHash :Data, ancestorHeight :Int32, ancestor :FoundBlockParam) -> (ancestor :FoundBlockResult, result :Bool);\n+    findAncestorByHash @12 (context :Proxy.Context, blockHash :Data, ancestorHash :Data, ancestor :FoundBlockParam) -> (ancestor :FoundBlockResult, result :Bool);\n+    findCommonAncestor @13 (context :Proxy.Context, blockHash1 :Data, blockHash2 :Data, ancestor :FoundBlockParam, block1 :FoundBlockParam, block2 :FoundBlockParam) -> (ancestor :FoundBlockResult, block1 :FoundBlockResult, block2 :FoundBlockResult, result :Bool);\n+    findCoins @14 (context :Proxy.Context, coins :List(Common.Pair(Data, Data))) -> (coins :List(Common.Pair(Data, Data)));\n+    guessVerificationProgress @15 (context :Proxy.Context, blockHash :Data) -> (result :Float64);\n+    hasBlocks @16 (context :Proxy.Context, blockHash :Data, minHeight :Int32, maxHeight: Int32, hasMaxHeight :Bool) -> (result :Bool);\n+    isRBFOptIn @17 (context :Proxy.Context, tx :Data) -> (result :Int32);\n+    isInMempool @18 (context :Proxy.Context, txid :Data) -> (result :Bool);\n+    hasDescendantsInMempool @19 (context :Proxy.Context, txid :Data) -> (result :Bool);\n+    broadcastTransaction @20 (context :Proxy.Context, tx: Data, maxTxFee :Int64, relay :Bool) -> (error: Text, result :Bool);\n+    getTransactionAncestry @21 (context :Proxy.Context, txid :Data) -> (ancestors :UInt64, descendants :UInt64, ancestorsize :UInt64, ancestorfees :Int64);\n+    calculateIndividualBumpFees @22 (context :Proxy.Context, outpoints :List(Data), targetFeerate :Data) -> (result: List(Common.PairInt64(Data)));\n+    calculateCombinedBumpFee @23 (context :Proxy.Context, outpoints :List(Data), targetFeerate :Data) -> (result :Int64, hasResult :Bool);\n+    getPackageLimits @24 (context :Proxy.Context) -> (ancestors :UInt64, descendants :UInt64);\n+    checkChainLimits @25 (context :Proxy.Context, tx :Data) -> (result :Common.ResultVoid);\n+    estimateSmartFee @26 (context :Proxy.Context, numBlocks :Int32, conservative :Bool, wantCalc :Bool) -> (calc :FeeCalculation, result :Data);\n+    estimateMaxBlocks @27 (context :Proxy.Context) -> (result :UInt32);\n+    mempoolMinFee @28 (context :Proxy.Context) -> (result :Data);\n+    relayMinFee @29 (context :Proxy.Context) -> (result :Data);\n+    relayIncrementalFee @30 (context :Proxy.Context) -> (result :Data);\n+    relayDustFee @31 (context :Proxy.Context) -> (result :Data);\n+    havePruned @32 (context :Proxy.Context) -> (result :Bool);\n+    isReadyToBroadcast @33 (context :Proxy.Context) -> (result :Bool);\n+    isInitialBlockDownload @34 (context :Proxy.Context) -> (result :Bool);\n+    shutdownRequested @35 (context :Proxy.Context) -> (result :Bool);\n+    initMessage @36 (context :Proxy.Context, message :Text) -> ();\n+    initWarning @37 (context :Proxy.Context, message :Common.BilingualStr) -> ();\n+    initError @38 (context :Proxy.Context, message :Common.BilingualStr) -> ();\n+    showProgress @39 (context :Proxy.Context, title :Text, progress :Int32, resumePossible :Bool) -> ();\n+    handleNotifications @40 (context :Proxy.Context, notifications :ChainNotifications) -> (result :Handler.Handler);\n+    waitForNotificationsIfTipChanged @41 (context :Proxy.Context, oldTip :Data) -> ();\n+    handleRpc @42 (context :Proxy.Context, command :RPCCommand) -> (result :Handler.Handler);\n+    rpcEnableDeprecated @43 (context :Proxy.Context, method :Text) -> (result :Bool);\n+    rpcRunLater @44 (context :Proxy.Context, name :Text, fn: RunLaterCallback, seconds: Int64) -> ();\n+    getSetting @45 (context :Proxy.Context, name :Text) -> (result :Text);\n+    getSettingsList @46 (context :Proxy.Context, name :Text) -> (result :List(Text));\n+    getRwSetting @47 (context :Proxy.Context, name :Text) -> (result :Text);\n+    updateRwSetting @48 (context :Proxy.Context, name :Text, update: SettingsUpdateCallback) -> (result :Bool);\n+    overwriteRwSetting @49 (context :Proxy.Context, name :Text, value :Text, action :Int32) -> (result :Bool);\n+    deleteRwSettings @50 (context :Proxy.Context, name :Text, action: Int32) -> (result :Bool);\n+    requestMempoolTransactions @51 (context :Proxy.Context, notifications :ChainNotifications) -> ();\n+    hasAssumedValidChain @52 (context :Proxy.Context) -> (result :Bool);\n+}\n+\n+interface ChainNotifications $Proxy.wrap(\"interfaces::Chain::Notifications\") {\n+    destroy @0 (context :Proxy.Context) -> ();\n+    transactionAddedToMempool @1 (context :Proxy.Context, tx :Data) -> ();\n+    transactionRemovedFromMempool @2 (context :Proxy.Context, tx :Data, reason :Int32) -> ();\n+    blockConnected @3 (context :Proxy.Context, role: UInt32, block :BlockInfo) -> ();\n+    blockDisconnected @4 (context :Proxy.Context, block :BlockInfo) -> ();\n+    updatedBlockTip @5 (context :Proxy.Context) -> ();",
      "path": "src/ipc/capnp/chain.capnp",
      "position": 80,
      "original_position": 80,
      "commit_id": "64b833854a34d87cde4e0ca4173d75012c401a7a",
      "original_commit_id": "395d5eed0475558de2c2a66914d5a5814ce38f3c",
      "in_reply_to_id": 1871523229,
      "user": {
        "login": "TheCharlatan",
        "id": 8421793,
        "node_id": "MDQ6VXNlcjg0MjE3OTM=",
        "avatar_url": "https://avatars.githubusercontent.com/u/8421793?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheCharlatan",
        "html_url": "https://github.com/TheCharlatan",
        "followers_url": "https://api.github.com/users/TheCharlatan/followers",
        "following_url": "https://api.github.com/users/TheCharlatan/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheCharlatan/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheCharlatan/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheCharlatan/subscriptions",
        "organizations_url": "https://api.github.com/users/TheCharlatan/orgs",
        "repos_url": "https://api.github.com/users/TheCharlatan/repos",
        "events_url": "https://api.github.com/users/TheCharlatan/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheCharlatan/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "body": "Adding this here for context: I guess one of the benefits of the `Notifications` and `NotificationsProxy` is avoiding raw pointer types in these interfaces. I went through the exercise of removing the pointer types from the validation interface before. Maybe this could eliminate the need for the logic in the `NotificationsProxy` in the first place. Not having to handle pointer types is also useful for the kernel API, where conveying the semantics of these pointers in the notifications to the using developer is tricky.",
      "created_at": "2024-12-09T22:10:01Z",
      "updated_at": "2024-12-09T22:14:25Z",
      "html_url": "https://github.com/bitcoin/bitcoin/pull/29409#discussion_r1876834012",
      "author_association": "CONTRIBUTOR",
      "_links": {
        "self": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1876834012"
        },
        "pull_request": {
          "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/29409"
        }
      },
      "start_line": null,
      "original_start_line": null,
      "start_side": null,
      "line": 80,
      "original_line": 80,
      "side": "RIGHT"
    }
  ]
}