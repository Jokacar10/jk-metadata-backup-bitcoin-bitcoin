{
  "type": "issue",
  "issue": {
    "id": 3349189106,
    "node_id": "I_kwDOABII587HoJHy",
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/33250",
    "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
    "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/33250/labels%7B/name%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/33250/comments",
    "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/33250/events",
    "html_url": "https://github.com/bitcoin/bitcoin/issues/33250",
    "number": 33250,
    "state": "open",
    "state_reason": null,
    "title": "`feature_bind_extra.py` test fails in `test_runner` if new nodes are added",
    "body": "When new nodes are added to the `feature_bind_extra.py` test, it succeeds if run individually, but fails if run via `test_runner` with the error message:\n\n```\nTestFramework (ERROR): Unexpected exception\nTraceback (most recent call last):\n  File \"/home/node/test/functional/test_framework/test_framework.py\", line 191, in main\n    self.setup()\n  File \"/home/node/test/functional/test_framework/test_framework.py\", line 349, in setup\n    self.setup_network()\n  File \"/home/node/build/test/functional/feature_bind_extra.py\", line 100, in setup_network\n    self.setup_nodes()\n  File \"/home/node/test/functional/test_framework/test_framework.py\", line 462, in setup_nodes\n    self.start_nodes()\n  File \"/home/node/test/functional/test_framework/test_framework.py\", line 603, in start_nodes\n    node.wait_for_rpc_connection()\n  File \"/home/node/test/functional/test_framework/test_node.py\", line 284, in wait_for_rpc_connection\n    raise FailedToStartError(self._node_msg(\ntest_framework.test_node.FailedToStartError: [node 4] bitcoind exited with status 1 during initialization. Error: Unable to bind to 127.0.0.1:13388 on this computer. Bitcoin Core is probably already running.\nError: Failed to listen on any port. Use -listen=0 if you want this.\n```\nI noticed this when creating more tests for #33231\n\nIt seems to be related to multiple nodes concurrently using the same port, but I'm not sure if it's expected behavior or if it should happen.\n\nSpecifically for the `feature_bind_extra.py` test, it can be resolved by reusing the same node. Multiple nodes were being created unnecessarily. I fixed this in the first commit of #33231 (https://github.com/bitcoin/bitcoin/pull/33231/commits/6b448e2eab007c9abd9f6be3c96a533641a73abc). This makes this test more efficient and prevents the error from occurring, but it does not address the underlying problem (if there is one).\n\nTo reproduce the error, that's the patch:\n```diff\ndiff --git a/test/functional/feature_bind_extra.py b/test/functional/feature_bind_extra.py\nindex 6b53de188f..9aac53f064 100755\n--- a/test/functional/feature_bind_extra.py\n+++ b/test/functional/feature_bind_extra.py\n@@ -27,7 +27,7 @@ class BindExtraTest(BitcoinTestFramework):\n         # Avoid any -bind= on the command line. Force the framework to avoid\n         # adding -bind=127.0.0.1.\n         self.bind_to_localhost_only = False\n-        self.num_nodes = 3\n+        self.num_nodes = 6\n \n     def skip_test_if_missing_module(self):\n         # Due to OS-specific network stats queries, we only run on Linux.\n@@ -69,6 +69,33 @@ class BindExtraTest(BitcoinTestFramework):\n         )\n         port += 1\n \n+        # Node1, both -bind=... and -bind=...=onion.\n+        self.expected.append(\n+            [\n+                [f\"-bind=127.0.0.1:{port}\", f\"-bind=127.0.0.1:{port + 1}=onion\"],\n+                [(loopback_ipv4, port), (loopback_ipv4, port + 1)]\n+            ],\n+        )\n+        port += 2\n+\n+        # Node1, both -bind=... and -bind=...=onion.\n+        self.expected.append(\n+            [\n+                [f\"-bind=127.0.0.1:{port}\", f\"-bind=127.0.0.1:{port + 1}=onion\"],\n+                [(loopback_ipv4, port), (loopback_ipv4, port + 1)]\n+            ],\n+        )\n+        port += 2\n+\n+        # Node1, both -bind=... and -bind=...=onion.\n+        self.expected.append(\n+            [\n+                [f\"-bind=127.0.0.1:{port}\", f\"-bind=127.0.0.1:{port + 1}=onion\"],\n+                [(loopback_ipv4, port), (loopback_ipv4, port + 1)]\n+            ],\n+        )\n+        port += 2\n+\n         self.extra_args = list(map(lambda e: e[0], self.expected))\n         self.setup_nodes()\n```\n\n\n",
    "user": {
      "login": "w0xlt",
      "id": 94266259,
      "node_id": "U_kgDOBZ5jkw",
      "avatar_url": "https://avatars.githubusercontent.com/u/94266259?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/w0xlt",
      "html_url": "https://github.com/w0xlt",
      "followers_url": "https://api.github.com/users/w0xlt/followers",
      "following_url": "https://api.github.com/users/w0xlt/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/w0xlt/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/w0xlt/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/w0xlt/subscriptions",
      "organizations_url": "https://api.github.com/users/w0xlt/orgs",
      "repos_url": "https://api.github.com/users/w0xlt/repos",
      "events_url": "https://api.github.com/users/w0xlt/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/w0xlt/received_events",
      "type": "User",
      "site_admin": false,
      "patch_url": null
    },
    "labels": [],
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "locked": false,
    "comments": 0,
    "created_at": "2025-08-24T06:00:37Z",
    "updated_at": "2025-08-24T06:00:37Z"
  },
  "events": []
}