{
  "type": "issue",
  "issue": {
    "id": 2807733549,
    "node_id": "I_kwDOABII586nWp0t",
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31728",
    "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
    "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31728/labels%7B/name%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31728/comments",
    "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31728/events",
    "html_url": "https://github.com/bitcoin/bitcoin/issues/31728",
    "number": 31728,
    "state": "open",
    "state_reason": null,
    "title": "Bug: Non-Ranged Descriptors with Range [0,0] Trigger Unexpected Wallet Errors in `AddWalletDescriptor`",
    "body": "**Summary:**\n\nWhen attempting to add a **non-ranged** descriptor with a start/end range of `[0,0]` via `AddWalletDescriptor`, an error may appear:  \n```\nUpdateWalletDescriptor: new range must include current range = [0,0].\n```\nThis is unexpected for a non-ranged descriptor, as `[0,0]` should effectively mean “no range.” In some cases, changing the end to `1` (i.e. `[0,1]`) circumvents the issue, but that implies a single-index range rather than a truly non-ranged descriptor.\n\nFurther debugging revealed this seems tied to:\n1. **Multiple calls** to `AddWalletDescriptor` for the same descriptor.\n2. **Internal handling of descriptor ranges** (the wallet expects a valid range for ranged descriptors, but still enforces checks on `start/end` even if the descriptor is meant to be non-ranged).\n3. A possible **bug in `UpdateWalletDescriptor`** when it encounters repeated or zero-width ranges.\n\n**What was expected:**\n- Specifying `[0,0]` for a non-ranged descriptor (or not specifying a range at all) should *not* fail.\n- A truly non-ranged descriptor should not require these range checks.\n- `AddWalletDescriptor` should be idempotent\n\n**What actually happens:**\n- Repeatedly adding a descriptor (or calling it in a way that triggers `UpdateWalletDescriptor`) with `[0,0]` can cause the wallet to complain that the “new range must include current range = [0,0]”.\n\n**Why this matters:**\n- Non-ranged descriptor workflows should be consistent and should not require a dummy range.\n- The wallet code should either cleanly ignore range parameters for non-ranged descriptors or handle a `[0,0]` range gracefully.\n\n**Proposed fix or investigation:**\n- Review `AddWalletDescriptor` and `UpdateWalletDescriptor` logic to ensure zero-width (`[0,0]`) or absent ranges are handled properly for non-ranged descriptors.\n- Confirm if the internal code should treat `[0,0]` as a valid non-ranged descriptor or if that scenario should simply be disallowed/ignored in favor of no range parameters at all.\n- Add tests to cover repeatedly adding the same descriptor and verifying correct behavior for non-ranged descriptors.\n- Change the wallet::WalletDescriptor to have `std::optional<std::pair<start,end>>` to differentiate unranged v.s. empty ranged descriptors.\n\nThis appears to be a minor bug, but it can lead to confusion and error messages when using or experimenting with non-ranged descriptors in custom wallet workflows.",
    "user": {
      "login": "JeremyRubin",
      "id": 886523,
      "node_id": "MDQ6VXNlcjg4NjUyMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/886523?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JeremyRubin",
      "html_url": "https://github.com/JeremyRubin",
      "followers_url": "https://api.github.com/users/JeremyRubin/followers",
      "following_url": "https://api.github.com/users/JeremyRubin/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/JeremyRubin/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/JeremyRubin/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
      "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
      "repos_url": "https://api.github.com/users/JeremyRubin/repos",
      "events_url": "https://api.github.com/users/JeremyRubin/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
      "type": "User",
      "site_admin": false,
      "patch_url": null
    },
    "labels": [],
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "locked": false,
    "comments": 0,
    "created_at": "2025-01-23T19:25:03Z",
    "updated_at": "2025-01-23T19:25:03Z"
  },
  "events": []
}