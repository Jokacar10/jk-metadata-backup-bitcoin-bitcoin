{
  "type": "issue",
  "issue": {
    "id": 2902268387,
    "node_id": "I_kwDOABII586s_Rnj",
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32013",
    "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
    "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32013/labels%7B/name%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32013/comments",
    "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32013/events",
    "html_url": "https://github.com/bitcoin/bitcoin/issues/32013",
    "number": 32013,
    "state": "open",
    "state_reason": null,
    "title": "Check if the wallet already contains the descriptor GetDescriptorScriptPubKeyMan",
    "body": "### Is there an existing issue for this?\n\n- [x] I have searched the existing issues\n\n### Current behaviour\n\nIn importdescriptors rpc call when we try import descriptor address we are internally calling ProcessDescriptorImport() method which checking\n\n`            // Check if the wallet already contains the descriptor\n            auto existing_spk_manager = wallet.GetDescriptorScriptPubKeyMan(w_desc);\n            if (existing_spk_manager) {\n                if (!existing_spk_manager->CanUpdateToWalletDescriptor(w_desc, error)) {\n                    throw JSONRPCError(RPC_INVALID_PARAMETER, error);\n                }\n            }`\n\nand below we have \n\n`            // Add descriptor to the wallet\n            auto spk_manager = wallet.AddWalletDescriptor(w_desc, keys, label, desc_internal);\n            if (spk_manager == nullptr) {\n                throw JSONRPCError(RPC_WALLET_ERROR, strprintf(\"Could not add descriptor '%s'\", descriptor));\n            }`\n\nbut in AddWalletDescriptor method again we are checking \n`    auto spk_man = GetDescriptorScriptPubKeyMan(desc);`\n\nBy calling twice we are facing lot of delay when we import address.\n\n> 2025-01-24T03:26:28Z [wt_wallet] ProcessDescriptorImport: GetDescriptorScriptPubKeyMan time 619 milliseconds \n2025-01-24T03:26:28Z [wt_wallet] ProcessDescriptorImport: AddWalletDescriptor time 33 milliseconds \n2025-01-24T03:26:28Z [wt_wallet] operator(): ProcessDescriptorImport time 653 milliseconds \n\nI've made some improvement like using only GetDescriptorScriptPubKeyMan method it is bit faster. Kindly verify this issue so I can create Pull request.\n\n### Expected behaviour\n\nGetDescriptorScriptPubKeyMan  method should be called only once in the importdescriptor call.\n\n### Steps to reproduce\n\n1. call importdescriptors()\n\n[GetDescriptor_time_1.txt](https://github.com/user-attachments/files/19122453/GetDescriptor_time_1.txt)\n\n[Improved_getdescriptor.txt](https://github.com/user-attachments/files/19122456/Improved_getdescriptor.txt)\n\n2. Add debug logs \n`            auto startTime = std::chrono::steady_clock::now();\n            const UniValue result = ProcessDescriptorImport(*pwallet, request, timestamp);\n            auto endTime = std::chrono::steady_clock::now();\n            auto duratioMilliseconds = std::chrono::duration_cast<std::chrono::milliseconds>(endTime-startTime).count();\n            pwallet->WalletLogPrintf(\"%s: ProcessDescriptorImport time %d milliseconds \\n\", __func__, duratioMilliseconds);`\n\n`\n           auto startTime = std::chrono::steady_clock::now();\n            // Check if the wallet already contains the descriptor\n             auto existing_spk_manager = wallet.GetDescriptorScriptPubKeyMan(w_desc);\n            if (existing_spk_manager) {\n                 if (!existing_spk_manager->CanUpdateToWalletDescriptor(w_desc, error)) {\n                     throw JSONRPCError(RPC_INVALID_PARAMETER, error);\n                 }\n             }\n            auto endTime = std::chrono::steady_clock::now();\n            auto duratioMilliseconds = std::chrono::duration_cast<std::chrono::milliseconds>(endTime-startTime).count();\n            pwallet->WalletLogPrintf(\"%s: GetDescriptorScriptPubKeyMantime %d milliseconds \\n\", __func__, duratioMilliseconds);`\n`\n\n` auto startTime = std::chrono::steady_clock::now();\n            // Add descriptor to the wallet\n            auto spk_manager = wallet.AddWalletDescriptor(w_desc, keys, label, desc_internal);\n            if (spk_manager == nullptr) {\n                throw JSONRPCError(RPC_WALLET_ERROR, strprintf(\"Could not add descriptor '%s'\", descriptor));\n            }\n\n            auto endTime = std::chrono::steady_clock::now();\n            auto duratioMilliseconds = std::chrono::duration_cast<std::chrono::milliseconds>(endTime-startTime).count();\n            wallet.WalletLogPrintf(\"%s: AddWalletDescriptor time %d milliseconds \\n\", __func__, duratioMilliseconds);`\n\n### Relevant log output\n\n_No response_\n\n### How did you obtain Bitcoin Core\n\nCompiled from source\n\n### What version of Bitcoin Core are you using?\n\nmaster\n\n### Operating system and version\n\nwsl ubuntu 22.04 LTS\n\n### Machine specifications\n\n_No response_",
    "user": {
      "login": "saikiran57",
      "id": 8953774,
      "node_id": "MDQ6VXNlcjg5NTM3NzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8953774?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/saikiran57",
      "html_url": "https://github.com/saikiran57",
      "followers_url": "https://api.github.com/users/saikiran57/followers",
      "following_url": "https://api.github.com/users/saikiran57/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/saikiran57/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/saikiran57/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/saikiran57/subscriptions",
      "organizations_url": "https://api.github.com/users/saikiran57/orgs",
      "repos_url": "https://api.github.com/users/saikiran57/repos",
      "events_url": "https://api.github.com/users/saikiran57/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/saikiran57/received_events",
      "type": "User",
      "site_admin": false,
      "patch_url": null
    },
    "labels": [],
    "assignees": [],
    "author_association": "NONE",
    "locked": false,
    "comments": 0,
    "created_at": "2025-03-07T07:46:32Z",
    "updated_at": "2025-03-07T07:46:32Z"
  },
  "events": []
}