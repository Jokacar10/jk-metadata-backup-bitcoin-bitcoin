{
  "type": "issue",
  "issue": {
    "id": 2351926361,
    "node_id": "I_kwDOABII586ML4xZ",
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30284",
    "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
    "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30284/labels%7B/name%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30284/comments",
    "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30284/events",
    "html_url": "https://github.com/bitcoin/bitcoin/issues/30284",
    "number": 30284,
    "state": "closed",
    "state_reason": "completed",
    "title": "Mini miner `AncestorFeerateComparator` Signed Integer Overflow",
    "body": "While working on #30079, I noticed that using multiplication to compare fee rates results in a signed integer overflow.\r\nhttps://github.com/bitcoin/bitcoin/blob/fcc3b653dc2bd5683193a836556de07bea4d1b11/src/node/mini_miner.cpp#L191-L195\r\n\r\nThe policy estimator fuzz tests generate transaction fee and sigops values using `ConsumeTxMemPoolEntry`.\r\nhttps://github.com/bitcoin/bitcoin/blob/fcc3b653dc2bd5683193a836556de07bea4d1b11/src/test/fuzz/util/mempool.cpp#L17-L31\r\n \r\nHere https://github.com/bitcoin/bitcoin/blob/fcc3b653dc2bd5683193a836556de07bea4d1b11/src/test/fuzz/policy_estimator.cpp#L47\r\n\r\nWe fuzz test `CBlockPolicyEstimator::processBlock` using these randomly generated transaction fee and size.\r\nhttps://github.com/bitcoin/bitcoin/blob/fcc3b653dc2bd5683193a836556de07bea4d1b11/src/test/fuzz/policy_estimator.cpp#L71-L79\r\n\r\n\r\n#30079 uses mini miner to linearize received block transactions in `CBlockPolicyEstimator::processBlock`\r\n\r\nThis enables the fuzzed  values to reach the mini miner, revealing the overflow.\r\n\r\nA possible is to compare the fee rates using the `CFeeRate` `operator<=`, as I did here https://github.com/bitcoin/bitcoin/pull/30079/commits/ba565be6fae897d43698dfa47b7c90aba6cf88c6 to fix the C.I failure in #30079.\r\n\r\n\r\nHowever, @murchandamus mentioned that the reason for originally using multiplication for the comparison was due to precision loss.\r\n\r\n\r\n\r\n\r\nhttps://cirrus-ci.com/task/5125969122426880?logs=ci#L3239\r\n```Run policy_estimator with args ['/ci_container_base/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/src/test/fuzz/fuzz', '-runs=1', PosixPath('/ci_container_base/ci/scratch/qa-assets/fuzz_seed_corpus/policy_estimator')]INFO: Running with entropic power schedule (0xFF, 100).\r\nINFO: Seed: 1181225158\r\nINFO: Loaded 1 modules   (585279 inline 8-bit counters): 585279 [0x560b0df0fac8, 0x560b0df9e907), \r\nINFO: Loaded 1 PC tables (585279 PCs): 585279 [0x560b0df9e908,0x560b0e88ccf8), \r\nINFO:      973 files found in /ci_container_base/ci/scratch/qa-assets/fuzz_seed_corpus/policy_estimator\r\nINFO: -max_len is not provided; libFuzzer will not generate inputs larger than 1047554 bytes\r\nINFO: seed corpus: files: 973 min: 1b max: 1047554b total: 47876409b rss: 149Mb\r\n#256\tpulse  cov: 3067 ft: 7190 corp: 194/19Kb exec/s: 85 rss: 464Mb\r\nnode/mini_miner.cpp:196:33: runtime error: signed integer overflow: 67333229723135 * 285030 cannot be represented in type 'int64_t' (aka 'long')\r\n    #0 0x560b0b9fa461 in bool node::AncestorFeerateComparator::operator()<std::_Rb_tree_iterator<std::pair<uint256 const, node::MiniMinerMempoolEntry>>>(std::_Rb_tree_iterator<std::pair<uint256 const, node::MiniMinerMempoolEntry>> const&, std::_Rb_tree_iterator<std::pair<uint256 const, node::MiniMinerMempoolEntry>> const&) const::'lambda'(node::MiniMinerMempoolEntry const&)::operator()(node::MiniMinerMempoolEntry const&) const src/node/mini_miner.cpp:196:33\r\n    #1 0x560b0b9f9dbe in bool node::AncestorFeerateComparator::operator()<std::_Rb_tree_iterator<std::pair<uint256 const, node::MiniMinerMempoolEntry>>>(std::_Rb_tree_iterator<std::pair<uint256 const, node::MiniMinerMempoolEntry>> const&, std::_Rb_tree_iterator<std::pair<uint256 const, node::MiniMinerMempoolEntry>> const&) const src/node/mini_miner.cpp:200:28\r\n    #2 0x560b0b9fb0ff in bool __gnu_cxx::__ops::_Iter_comp_iter<node::AncestorFeerateComparator>::operator()<__gnu_cxx::__normal_iterator<std::_Rb_tree_iterator<std::pair<uint256 const, node::MiniMinerMempoolEntry>>*, std::vector<std::_Rb_tree_iterator<std::pair<uint256 const, node::MiniMinerMempoolEntry>>, std::allocator<std::_Rb_tree_iterator<std::pair<uint256 const, node::MiniMinerMempoolEntry>>>>>, __gnu_cxx::__normal_iterator<std::_Rb_tree_iterator<std::pair<uint256 const, node::MiniMinerMempoolEntry>>*, std::vector<std::_Rb_tree_iterator<std::pair<uint256 const, node::MiniMinerMempoolEntry>>, std::allocator<std::_Rb_tree_iterator<std::pair<uint256 const, node::MiniMinerMempoolEntry>>>>>>(__gnu_cxx::__normal_iterator<std::_Rb_tree_iterator<std::pair<uint256 const, node::MiniMinerMempoolEntry>>*, std::vector<std::_Rb_tree_iterator<std::pair<uint256 const, node::MiniMinerMempoolEntry>>, std::allocator<std::_Rb_tree_iterator<std::pair<uint256 const, node::MiniMinerMempoolEntry>>>>>, __gnu_cxx::__normal_iterator<std::_Rb_tree_iterator<std::pair<uint256 const, node::MiniMinerMempoolEntry>>*, std::vector<std::_Rb_tree_iterator<std::pair<uint256 const, node::MiniMinerMempoolEntry>>, std::allocator<std::_Rb_tree_iterator<std::pair<uint256 const, node::MiniMinerMempoolEntry>>>>>) /usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/predefined_ops.h:158:23\r\n    #3 0x560b0b9fb0ff in void std::__insertion_sort<__gnu_cxx::__normal_iterator<std::_Rb_tree_iterator<std::pair<uint256 const, node::MiniMinerMempoolEntry>>*, std::vector<std::_Rb_tree_iterator<std::pair<uint256 const, node::MiniMinerMempoolEntry>>, std::allocator<std::_Rb_tree_iterator<std::pair<uint256 const, node::MiniMinerMempoolEntry>>>>>, __gnu_cxx::__ops::_Iter_comp_iter<node::AncestorFeerateComparator>>(__gnu_cxx::__normal_iterator<std::_Rb_tree_iterator<std::pair<uint256 const, node::MiniMinerMempoolEntry>>*, std::vector<std::_Rb_tree_iterator<std::pair<uint256 const, node::MiniMinerMempoolEntry>>, std::allocator<std::_Rb_tree_iterator<std::pair<uint256 const, node::MiniMinerMempoolEntry>>>>>, __gnu_cxx::__normal_iterator<std::_Rb_tree_iterator<std::pair<uint256 const, node::MiniMinerMempoolEntry>>*, std::vector<std::_Rb_tree_iterator<std::pair<uint256 const, node::MiniMinerMempoolEntry>>, std::allocator<std::_Rb_tree_iterator<std::pair<uint256 const, node::MiniMinerMempoolEntry>>>>>, __gnu_cxx::__ops::_Iter_comp_iter<node::AncestorFeerateComparator>) /usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_algo.h:1819:8\r\n    #4 0x560b0b9f074f in void std::__sort<__gnu_cxx::__normal_iterator<std::_Rb_tree_iterator<std::pair<uint256 const, node::MiniMinerMempoolEntry>>*, std::vector<std::_Rb_tree_iterator<std::pair<uint256 const, node::MiniMinerMempoolEntry>>, std::allocator<std::_Rb_tree_iterator<std::pair<uint256 const, node::MiniMinerMempoolEntry>>>>>, __gnu_cxx::__ops::_Iter_comp_iter<node::AncestorFeerateComparator>>(__gnu_cxx::__normal_iterator<std::_Rb_tree_iterator<std::pair<uint256 const, node::MiniMinerMempoolEntry>>*, std::vector<std::_Rb_tree_iterator<std::pair<uint256 const, node::MiniMinerMempoolEntry>>, std::allocator<std::_Rb_tree_iterator<std::pair<uint256 const, node::MiniMinerMempoolEntry>>>>>, __gnu_cxx::__normal_iterator<std::_Rb_tree_iterator<std::pair<uint256 const, node::MiniMinerMempoolEntry>>*, std::vector<std::_Rb_tree_iterator<std::pair<uint256 const, node::MiniMinerMempoolEntry>>, std::allocator<std::_Rb_tree_iterator<std::pair<uint256 const, node::MiniMinerMempoolEntry>>>>>, __gnu_cxx::__ops::_Iter_comp_iter<node::AncestorFeerateComparator>) /usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_algo.h:1950:4\r\n    #5 0x560b0b9f074f in void std::sort<__gnu_cxx::__normal_iterator<std::_Rb_tree_iterator<std::pair<uint256 const, node::MiniMinerMempoolEntry>>*, std::vector<std::_Rb_tree_iterator<std::pair<uint256 const, node::MiniMinerMempoolEntry>>, std::allocator<std::_Rb_tree_iterator<std::pair<uint256 const, node::MiniMinerMempoolEntry>>>>>, node::AncestorFeerateComparator>(__gnu_cxx::__normal_iterator<std::_Rb_tree_iterator<std::pair<uint256 const, node::MiniMinerMempoolEntry>>*, std::vector<std::_Rb_tree_iterator<std::pair<uint256 const, node::MiniMinerMempoolEntry>>, std::allocator<std::_Rb_tree_iterator<std::pair<uint256 const, node::MiniMinerMempoolEntry>>>>>, __gnu_cxx::__normal_iterator<std::_Rb_tree_iterator<std::pair<uint256 const, node::MiniMinerMempoolEntry>>*, std::vector<std::_Rb_tree_iterator<std::pair<uint256 const, node::MiniMinerMempoolEntry>>, std::allocator<std::_Rb_tree_iterator<std::pair<uint256 const, node::MiniMinerMempoolEntry>>>>>, node::AncestorFeerateComparator) /usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_algo.h:4894:7\r\n    #6 0x560b0b9f074f in node::MiniMiner::BuildMockTemplate(std::optional<CFeeRate>) src/node/mini_miner.cpp:263:9\r\n    #7 0x560b0b9f24d2 in node::MiniMiner::Linearize() src/node/mini_miner.cpp:320:5\r\n    #8 0x560b0c0fcecd in LinearizeTransactions(std::vector<RemovedMempoolTransactionInfo, std::allocator<RemovedMempoolTransactionInfo>> const&) src/policy/fees_util.cpp:66:61\r\n    #9 0x560b0ba50884 in CBlockPolicyEstimator::removeCPFPdParentTxs(std::vector<RemovedMempoolTransactionInfo, std::allocator<RemovedMempoolTransactionInfo>> const&) src/policy/fees.cpp:668:41\r\n    #10 0x560b0ba4d92b in CBlockPolicyEstimator::processBlock(std::vector<RemovedMempoolTransactionInfo, std::allocator<RemovedMempoolTransactionInfo>> const&, unsigned int) src/policy/fees.cpp:711:5\r\n    #11 0x560b0b29d292 in policy_estimator_fuzz_target(Span<unsigned char const>)::$_1::operator()() const src/test/fuzz/policy_estimator.cpp:78:40\r\n    #12 0x560b0b29d292 in unsigned long CallOneOf<policy_estimator_fuzz_target(Span<unsigned char const>)::$_0, policy_estimator_fuzz_target(Span<unsigned char const>)::$_1, policy_estimator_fuzz_target(Span<unsigned char const>)::$_2, policy_estimator_fuzz_target(Span<unsigned char const>)::$_3>(FuzzedDataProvider&, policy_estimator_fuzz_target(Span<unsigned char const>)::$_0, policy_estimator_fuzz_target(Span<unsigned char const>)::$_1, policy_estimator_fuzz_target(Span<unsigned char const>)::$_2, policy_estimator_fuzz_target(Span<unsigned char const>)::$_3) src/./test/fuzz/util.h:42:27\r\n    #13 0x560b0b29d292 in policy_estimator_fuzz_target(Span<unsigned char const>) src/test/fuzz/policy_estimator.cpp:38:9\r\n    #14 0x560b0b41be8d in std::function<void (Span<unsigned char const>)>::operator()(Span<unsigned char const>) const /usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/std_function.h:591:9\r\n    #15 0x560b0b41be8d in LLVMFuzzerTestOneInput src/test/fuzz/fuzz.cpp:201:5\r\n    #16 0x560b0ad42044 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) (/ci_container_base/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/src/test/fuzz/fuzz+0x1abb044) (BuildId: 38c5692016408502c695f631cd9bdad2a9744d28)\r\n    #17 0x560b0ad41739 in fuzzer::Fuzzer::RunOne(unsigned char const*, unsigned long, bool, fuzzer::InputInfo*, bool, bool*) (/ci_container_base/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/src/test/fuzz/fuzz+0x1aba739) (BuildId: 38c5692016408502c695f631cd9bdad2a9744d28)\r\n    #18 0x560b0ad43356 in fuzzer::Fuzzer::ReadAndExecuteSeedCorpora(std::vector<fuzzer::SizedFile, std::allocator<fuzzer::SizedFile>>&) (/ci_container_base/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/src/test/fuzz/fuzz+0x1abc356) (BuildId: 38c5692016408502c695f631cd9bdad2a9744d28)\r\n    #19 0x560b0ad43867 in fuzzer::Fuzzer::Loop(std::vector<fuzzer::SizedFile, std::allocator<fuzzer::SizedFile>>&) (/ci_container_base/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/src/test/fuzz/fuzz+0x1abc867) (BuildId: 38c5692016408502c695f631cd9bdad2a9744d28)\r\n    #20 0x560b0ad30d5f in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) (/ci_container_base/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/src/test/fuzz/fuzz+0x1aa9d5f) (BuildId: 38c5692016408502c695f631cd9bdad2a9744d28)\r\n    #21 0x560b0ad5b3e6 in main (/ci_container_base/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/src/test/fuzz/fuzz+0x1ad43e6) (BuildId: 38c5692016408502c695f631cd9bdad2a9744d28)\r\n    #22 0x7f432cb5e1c9  (/lib/x86_64-linux-gnu/libc.so.6+0x2a1c9) (BuildId: 08134323d00289185684a4cd177d202f39c2a5f3)\r\n    #23 0x7f432cb5e28a in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2a28a) (BuildId: 08134323d00289185684a4cd177d202f39c2a5f3)\r\n    #24 0x560b0ad25d44 in _start (/ci_container_base/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/src/test/fuzz/fuzz+0x1a9ed44) (BuildId: 38c5692016408502c695f631cd9bdad2a9744d28)\r\nSUMMARY: UndefinedBehaviorSanitizer: signed-integer-overflow node/mini_miner.cpp:196:33 \r\nMS: 0 ; base unit: 0000000000000000000000000000000000000000\r\nartifact_prefix='./'; Test unit written to ./crash-2315c89458602360eb93362328da5c0ef21f9864\r\nTraceback (most recent call last):\r\n  File \"/ci_container_base/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/test/fuzz/test_runner.py\", line 411, in <module>\r\n    main()\r\n  File \"/ci_container_base/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/test/fuzz/test_runner.py\", line 199, in main\r\n    run_once(\r\n  File \"/ci_container_base/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/test/fuzz/test_runner.py\", line 376, in run_once\r\n    assert len(done_stat) == 1\r\n           ^^^^^^^^^^^^^^^^^^^\r\nAssertionError\r\n\r\n```",
    "user": {
      "login": "ismaelsadeeq",
      "id": 48946461,
      "node_id": "MDQ6VXNlcjQ4OTQ2NDYx",
      "avatar_url": "https://avatars.githubusercontent.com/u/48946461?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ismaelsadeeq",
      "html_url": "https://github.com/ismaelsadeeq",
      "followers_url": "https://api.github.com/users/ismaelsadeeq/followers",
      "following_url": "https://api.github.com/users/ismaelsadeeq/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/ismaelsadeeq/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/ismaelsadeeq/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/ismaelsadeeq/subscriptions",
      "organizations_url": "https://api.github.com/users/ismaelsadeeq/orgs",
      "repos_url": "https://api.github.com/users/ismaelsadeeq/repos",
      "events_url": "https://api.github.com/users/ismaelsadeeq/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/ismaelsadeeq/received_events",
      "type": "User",
      "site_admin": false,
      "patch_url": null
    },
    "labels": [
      {
        "id": 62963516,
        "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
        "name": "Tests",
        "color": "d4c5f9",
        "default": false
      }
    ],
    "assignees": [],
    "author_association": "MEMBER",
    "locked": true,
    "comments": 1,
    "closed_at": "2024-07-15T08:59:49Z",
    "closed_by": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false,
      "patch_url": null
    },
    "created_at": "2024-06-13T19:40:57Z",
    "updated_at": "2025-07-15T11:39:52Z"
  },
  "events": [
    {
      "event": "mentioned",
      "id": 13151982182,
      "node_id": "MEE_lADOABII586ML4xZzwAAAAMP61Jm",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13151982182",
      "actor": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-13T19:40:58Z"
    },
    {
      "event": "subscribed",
      "id": 13151982199,
      "node_id": "SE_lADOABII586ML4xZzwAAAAMP61J3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13151982199",
      "actor": {
        "login": "murchandamus",
        "id": 4060799,
        "node_id": "MDQ6VXNlcjQwNjA3OTk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/murchandamus",
        "html_url": "https://github.com/murchandamus",
        "followers_url": "https://api.github.com/users/murchandamus/followers",
        "following_url": "https://api.github.com/users/murchandamus/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/murchandamus/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/murchandamus/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/murchandamus/subscriptions",
        "organizations_url": "https://api.github.com/users/murchandamus/orgs",
        "repos_url": "https://api.github.com/users/murchandamus/repos",
        "events_url": "https://api.github.com/users/murchandamus/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/murchandamus/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-13T19:40:58Z"
    },
    {
      "event": "labeled",
      "id": 13212950776,
      "node_id": "LE_lADOABII586ML4xZzwAAAAMTjaD4",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13212950776",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-06-19T09:01:02Z",
      "label": {
        "name": "Tests",
        "color": "d4c5f9"
      }
    },
    {
      "event": "commented",
      "id": 2217978085,
      "node_id": "IC_kwDOABII586EM6jl",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2217978085",
      "actor": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-07-09T15:08:17Z",
      "updated_at": "2024-07-09T15:25:09Z",
      "author_association": "MEMBER",
      "body": "Ah, I think #30412 might fix this since `FeeFrac::Mul` handles the overflow? ~I'm not sure how to get the input from that CI task so I can check.~ Edit: nvm, got it\r\nEdit: yay it does fix it! See https://github.com/bitcoin/bitcoin/pull/30079/commits/b1b28a21e185dfbc0c75f92ac55401a9ba8a5b08#r1670728220",
      "user": {
        "login": "glozow",
        "id": 25183001,
        "node_id": "MDQ6VXNlcjI1MTgzMDAx",
        "avatar_url": "https://avatars.githubusercontent.com/u/25183001?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/glozow",
        "html_url": "https://github.com/glozow",
        "followers_url": "https://api.github.com/users/glozow/followers",
        "following_url": "https://api.github.com/users/glozow/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/glozow/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/glozow/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
        "organizations_url": "https://api.github.com/users/glozow/orgs",
        "repos_url": "https://api.github.com/users/glozow/repos",
        "events_url": "https://api.github.com/users/glozow/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/glozow/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/30284#issuecomment-2217978085",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/30284"
    },
    {
      "event": "closed",
      "id": 13502349943,
      "node_id": "CE_lADOABII586ML4xZzwAAAAMkzYJ3",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13502349943",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "01ed4927f09fc8408bd81b8286303dfeefd0523f",
      "commit_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/01ed4927f09fc8408bd81b8286303dfeefd0523f",
      "created_at": "2024-07-15T08:59:49Z"
    },
    {
      "event": "referenced",
      "id": 13502367334,
      "node_id": "REFE_lADOABII586ML4xZzwAAAAMkzcZm",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/13502367334",
      "actor": {
        "login": "fanquake",
        "id": 863730,
        "node_id": "MDQ6VXNlcjg2MzczMA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fanquake",
        "html_url": "https://github.com/fanquake",
        "followers_url": "https://api.github.com/users/fanquake/followers",
        "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
        "organizations_url": "https://api.github.com/users/fanquake/orgs",
        "repos_url": "https://api.github.com/users/fanquake/repos",
        "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/fanquake/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": "01ed4927f09fc8408bd81b8286303dfeefd0523f",
      "commit_url": "https://api.github.com/repos/fanquake/bitcoin/commits/01ed4927f09fc8408bd81b8286303dfeefd0523f",
      "created_at": "2024-07-15T09:01:12Z"
    },
    {
      "event": "locked",
      "id": 18636560225,
      "node_id": "LOE_lADOABII586ML4xZzwAAAARW01dh",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/18636560225",
      "actor": {
        "login": "bitcoin",
        "id": 528860,
        "node_id": "MDEyOk9yZ2FuaXphdGlvbjUyODg2MA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/528860?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/bitcoin",
        "html_url": "https://github.com/bitcoin",
        "followers_url": "https://api.github.com/users/bitcoin/followers",
        "following_url": "https://api.github.com/users/bitcoin/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/bitcoin/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/bitcoin/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/bitcoin/subscriptions",
        "organizations_url": "https://api.github.com/users/bitcoin/orgs",
        "repos_url": "https://api.github.com/users/bitcoin/repos",
        "events_url": "https://api.github.com/users/bitcoin/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/bitcoin/received_events",
        "type": "Organization",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-07-15T11:39:52Z"
    }
  ]
}