{
  "type": "issue",
  "issue": {
    "id": 3006832053,
    "node_id": "I_kwDOABII586zOJ21",
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32311",
    "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
    "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32311/labels%7B/name%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32311/comments",
    "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32311/events",
    "html_url": "https://github.com/bitcoin/bitcoin/issues/32311",
    "number": 32311,
    "state": "open",
    "state_reason": null,
    "title": "Critical Discrepancy: Bitcoin Core Node Sees UTXO via scantxoutset, BUT listunspent & Sparrow Wallet Fail; Address Undrivable from LND Key?",
    "body": "Hello LND Developers and Community,\nI'm facing a highly unusual and critical issue where on-chain funds associated with a past LND channel closure are inaccessible, despite my Bitcoin Core node (v29.0.0, RPi5, fully synced after fresh IBD, txindex=1) confirming the UTXO's existence via scantxoutset. However, both listunspent and external wallet software (Sparrow) fail to see this UTXO, and crucially, the address holding the funds cannot be derived from my LND root key using standard methods.\nSystem & History:\nLND: v0.18.5-beta (upgraded from v0.5.2-beta). Confirmed only one wallet.db used throughout.\nBitcoin Core: v29.0.0 (RPi5), fully synced post-IBD, txindex=1 reports synced: true. Datadir /mnt/hdd/bitcoin.\nChannel History: Opened Mar 2019 (LND v0.5.2, Funding Tx: 7060...9d71), later force-closed by peer.\nSweep Transaction: On Apr 1, 2024 (Block 837257), Tx 4c0407b1188e0ba39313b1d9c87c49f6c81d99aa2839026c8af8c989ce102244 spent the channel output, sending ~0.01495 BTC to P2WPKH address bc1qt728qplpuh6d98evkl4a990zdhwpwvur6qg8qz.\nOn-Chain Verification: Explorers confirm this UTXO (4c04...:0) exists and is unspent at bc1qt7...g8qz.\nThe Core Problem & Contradictions:\nAfter a full IBD and ensuring txindex is synced on my Bitcoin Core node:\ngetrawtransaction 4c04... true SUCCEEDS: The node knows the history of the funding transaction.\nscantxoutset start '[\"addr(bc1qt7...)\"]' SUCCEEDS and RETURNS THE UTXO: This directly confirms that the node's chainstate (UTXO set) database IS CORRECT and contains the unspent output for bc1qt7...g8qz.\n{\n  \"success\": true, ...\n  \"unspents\": [ { \"txid\": \"4c04...\", \"vout\": 0, ... \"address\": \"bc1qt7...\", \"amount\": 0.01495437 ... } ],\n  \"total_amount\": 0.01495437\n}\nUse code [with caution](https://support.google.com/legal/answer/13505487).\nJson\nlistunspent ... '[\"bc1qt7...\"]' (using -rpcwallet=\"\" or other loaded wallets) returns []: Despite the UTXO existing in the chainstate, the wallet-specific RPC call fails to list it.\nSparrow Wallet (fresh install, connected to this node) shows 0 balance: When importing the confirmed LND root xprv and configuring for BIP84 (m/84'/0'/0', Native Segwit P2WPKH), Sparrow completes scanning but shows 0 balance and lists no UTXOs, failing to see the UTXO that the node knows exists (per scantxoutset).\nParallel Wallet Derivation Failure:\nUsing the confirmed root xprv (extracted from the correct wallet.db via chantools showrootkey), extensive checks with offline tools (bip39-standalone.html) on standard BIP84 paths (m/84'/0'/0'/0/* and m/84'/0'/0'/1/*) failed to derive the address bc1qt728qplpuh6d98evkl4a990zdhwpwvur6qg8qz after checking millions of addresses.\nCurrent Status & Urgent Questions:\nI have on-chain funds at bc1qt7...g8qz that my node fundamentally knows about (per scantxoutset), but which are inaccessible via standard wallet RPCs (listunspent) and external wallets (Sparrow). Compounding this is the failure to derive this specific address from the LND root key using standard BIP84 paths.\nSeeking expert help on:\nWhy would listunspent (even with the correct wallet specified) and external wallets like Sparrow fail to see a UTXO when scantxoutset on the same node confirms its existence in the UTXO set? Is this a known Core bug, an issue with how wallets query non-owned addresses, or something else?\nGiven the derivation failure, is it possible for LND (esp. after major version jumps) to sweep funds to an address not derivable via standard BIP84 paths from the aezeed root key? Could a bug or specific state lead to using a different derivation scheme or even a key unrelated to the main wallet for sweep outputs?\nAre there any advanced methods or tools (LND debug commands, specific chantools usage, alternative wallet software known to handle edge cases) that could either:\na) Force Sparrow/LND to recognize the UTXO based on the node's chainstate confirmation?\nb) Help definitively trace the derivation path (even if non-standard) used to generate bc1qt7...g8qz from my wallet.db/xprv?\nThis situation seems highly anomalous. Any insights or guidance would be extremely appreciated.\nThank you.",
    "user": {
      "login": "vicortar",
      "id": 16437485,
      "node_id": "MDQ6VXNlcjE2NDM3NDg1",
      "avatar_url": "https://avatars.githubusercontent.com/u/16437485?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vicortar",
      "html_url": "https://github.com/vicortar",
      "followers_url": "https://api.github.com/users/vicortar/followers",
      "following_url": "https://api.github.com/users/vicortar/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/vicortar/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/vicortar/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/vicortar/subscriptions",
      "organizations_url": "https://api.github.com/users/vicortar/orgs",
      "repos_url": "https://api.github.com/users/vicortar/repos",
      "events_url": "https://api.github.com/users/vicortar/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/vicortar/received_events",
      "type": "User",
      "site_admin": false,
      "patch_url": null
    },
    "labels": [],
    "assignees": [],
    "author_association": "NONE",
    "locked": false,
    "comments": 0,
    "created_at": "2025-04-20T06:06:17Z",
    "updated_at": "2025-04-20T06:06:17Z"
  },
  "events": []
}