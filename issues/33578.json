{
  "type": "issue",
  "issue": {
    "id": 3496636282,
    "node_id": "I_kwDOABII587Qam96",
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/33578",
    "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
    "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/33578/labels%7B/name%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/33578/comments",
    "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/33578/events",
    "html_url": "https://github.com/bitcoin/bitcoin/issues/33578",
    "number": 33578,
    "state": "open",
    "state_reason": null,
    "title": "CanDirectFetch degrades HB compact block relay if blocks are rare",
    "body": "[`CanDirectFetch`](https://github.com/bitcoin/bitcoin/blob/b510893d00760083ac36948747aa6ebd84656192/src/net_processing.cpp#L1324) returns true when a node's local time is within 200 minutes of that node's tip time. When receiving a `CMPCTBLOCK` message from a peer, the node will [first check](https://github.com/bitcoin/bitcoin/blob/b510893d00760083ac36948747aa6ebd84656192/src/net_processing.cpp#L4428) if there is an in-flight block request for the block hash. If the block is not already requested, then the node calls `CanDirectFetch` to see if we're close to tip. If `CanDirectFetch` is false, then the node won't process the compact block. In the extreme case of no blocks being found on the network for 200 minutes (infinitesimally small), high-bandwidth compact block relay will be degraded. Also possible is if miners set nTime to the minimum that MTP would allow, but honest miners would be able to march MTP forward more.\n\n@instagibbs pointed out offline that instead of checking if the tip time is recent, the node could check whether the time in the header is recent. This change would allow a miner to send compact blocks to a node that is not synced and hasn't requested the block by setting the nTime artificially high, but they would need to produce a valid header with enough PoW while this node is likely also advancing their height at the same time (making this unlikely). This has the nice benefit of not degrading high-bandwidth compact block relay though.\n\nMotivated by https://github.com/bitcoin/bitcoin/issues/31962#issuecomment-3356659498 and https://github.com/bitcoin/bitcoin/issues/31962#issuecomment-3365361040.",
    "user": {
      "login": "Crypt-iQ",
      "id": 15145615,
      "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
      "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Crypt-iQ",
      "html_url": "https://github.com/Crypt-iQ",
      "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
      "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
      "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
      "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
      "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
      "type": "User",
      "site_admin": false,
      "patch_url": null
    },
    "labels": [],
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "locked": false,
    "comments": 0,
    "created_at": "2025-10-08T19:30:24Z",
    "updated_at": "2025-10-08T19:33:52Z"
  },
  "events": []
}