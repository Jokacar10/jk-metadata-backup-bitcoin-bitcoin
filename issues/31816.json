{
  "type": "issue",
  "issue": {
    "id": 2838030708,
    "node_id": "I_kwDOABII586pKOl0",
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31816",
    "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
    "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31816/labels%7B/name%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31816/comments",
    "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31816/events",
    "html_url": "https://github.com/bitcoin/bitcoin/issues/31816",
    "number": 31816,
    "state": "open",
    "state_reason": null,
    "title": "Memory-only wallet (for faucets)",
    "body": "### Please describe the feature you'd like to see added.\n\nCurrently I do following regularly every couple of days in order to refresh faucet wallets and reclaim megabytes of disk space:\n\n```sh\ncd ~/.bitcoin/signet/wallets\nbitcoin-cli -signet createwallet name false true\n# blank with private-keys enabled\ncd name\ndt=../listdescriptors-true.txt\nA=$(sed 's/\"timestamp\".*$/\"timestamp\":\"now\",/' $dt | jq -rc .descriptors)\nbitcoin-cli importdescriptors $A\n```\n\nIt works well for [me](https://alt.signetfaucet.com/) (in connection with another `readlink` [hack](https://www.catb.org/jargon/html/) allowing me to use symlinks for wallet entry path) but I am wondering about a feature, a new option to `createwallet` RPC that would create a wallet which does not keep track of spent transacrions, only what is now in blocks (chainstate) and mempool.\n\n### Is your feature related to a problem, if so please describe it.\n\nWhen writing a faucet I first realized there is no point in playing privacy here since the amount of wallet data tracking all the new addresses (incl. random new \"change\" addresses) can grow huge and soon make the faucet unusable.\n\n### Describe the solution you'd like\n\nI would like `wallet.dat` sqlite in this mode to not track the historical transactions other thatn confirmed unspent ones, everything else would stay as normal wallet with or without private keys.\n\n### Describe any alternatives you've considered\n\nBefore I was doing also `scantxoutset` without any wallet. It actually provided me with unspent outputs that were confirmed in blocks and then I could just `signrawtransactionwithkey`. But using a wallet has many advantages, I just imagine this new memory-only (\"light mode\") would be helpful.\n\n### Please leave any additional context\n\nCurrently there are following HTTP-served faucets I know of:\n\nIgnoring the dying Testnet3 now.\n\nOn Signet:\n\n- https://signetfaucet.com/\n- https://alt.signetfaucet.com/\n\nOn [Testnet4](https://testnet4.com/):\n\n- https://mempool.space/testnet4/faucet\n- https://coinfaucet.eu/en/btc-testnet4/\n- https://testnet4.anyone.eu.org/ \\*\n- https://faucet.testnet4.dev/\n\n\\* Testnet4 faucet on anyone.eu.org is generally the same as alt.signetfaucet.com but not kept in a lockstep so it does not do Cloudflare Turnstile or TRUC replacements yet.",
    "user": {
      "login": "jsarenik",
      "id": 244565,
      "node_id": "MDQ6VXNlcjI0NDU2NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/244565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jsarenik",
      "html_url": "https://github.com/jsarenik",
      "followers_url": "https://api.github.com/users/jsarenik/followers",
      "following_url": "https://api.github.com/users/jsarenik/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/jsarenik/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/jsarenik/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/jsarenik/subscriptions",
      "organizations_url": "https://api.github.com/users/jsarenik/orgs",
      "repos_url": "https://api.github.com/users/jsarenik/repos",
      "events_url": "https://api.github.com/users/jsarenik/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/jsarenik/received_events",
      "type": "User",
      "site_admin": false,
      "patch_url": null
    },
    "labels": [
      {
        "id": 64583,
        "node_id": "MDU6TGFiZWw2NDU4Mw==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Feature",
        "name": "Feature",
        "color": "7cf575",
        "default": false
      }
    ],
    "assignees": [],
    "author_association": "NONE",
    "locked": false,
    "comments": 0,
    "created_at": "2025-02-07T12:21:31Z",
    "updated_at": "2025-02-07T12:21:31Z"
  },
  "events": [
    {
      "event": "labeled",
      "id": 16224334910,
      "node_id": "LE_lADOABII586pKOl0zwAAAAPHC7Q-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16224334910",
      "actor": {
        "login": "jsarenik",
        "id": 244565,
        "node_id": "MDQ6VXNlcjI0NDU2NQ==",
        "avatar_url": "https://avatars.githubusercontent.com/u/244565?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/jsarenik",
        "html_url": "https://github.com/jsarenik",
        "followers_url": "https://api.github.com/users/jsarenik/followers",
        "following_url": "https://api.github.com/users/jsarenik/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/jsarenik/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/jsarenik/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/jsarenik/subscriptions",
        "organizations_url": "https://api.github.com/users/jsarenik/orgs",
        "repos_url": "https://api.github.com/users/jsarenik/repos",
        "events_url": "https://api.github.com/users/jsarenik/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/jsarenik/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-02-07T12:21:31Z",
      "label": {
        "name": "Feature",
        "color": "7cf575"
      }
    }
  ]
}