{
  "type": "issue",
  "issue": {
    "id": 3417196483,
    "node_id": "I_kwDOABII587LrkfD",
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/33389",
    "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
    "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/33389/labels%7B/name%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/33389/comments",
    "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/33389/events",
    "html_url": "https://github.com/bitcoin/bitcoin/issues/33389",
    "number": 33389,
    "state": "open",
    "state_reason": null,
    "title": "RFC: Bitcoin Core Node `BlockTemplateManager`",
    "body": "Bitcoin Core Node `BlockTemplateManager`  main use should be handling block template creation for other components of the node.\nIt should use the low-level block assembler to do that. This `BlockTemplateManager` should be initialized with a pointer to the mempool and a `ChainstateManager` reference. It should have access to the default block creation options and be instantiated during node startup and destroyed when the node is shutting down.\nThis `BlockTemplateManager` should be available via the node interfaces.\n\nDuring instantiation of `BlockTemplateManager`,  it should create an instance of the `BlockAssembler` and subscribe to the validation interface `BlockConnected` notification.\n\nOther components like the Mining interface (`waitNext`, `createNewBlock`), Peer Manager #33191, and Fee Estimation with the mempool #30157 will request a template with their respective block creation options and the number of seconds of how fresh they want the template to be.\n\nThe `BlockTemplateManager` will maintain a vector of previously built block templates as caches and check if there is a template match within the interval specified by the client. If there is, it will return the template; else it will build a new one and add it to the cache.\n\nWhenever a new block is connected, the cache is cleared.\n\n<details>\n<summary>This is the overall flow</summary>\n\n<img width=\"2872\" height=\"1004\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/5b855932-305c-46b6-9947-74a03afbf2d3\" />  \n\n</details>\n\n**Future Improvement**\n\n1. Detect the fee increase in the mempool and create a new template based on that information, not just using a time interval. See discussion here:\n   [https://github.com/bitcoin/bitcoin/pull/31283#discussion\\_r1937451223](https://github.com/bitcoin/bitcoin/pull/31283#discussion_r1937451223)\n   After this, it should be possible to add a push-based technique to the `BlockTemplateManager` where you can make a subscription to get a notification when a better template is available in the mempool or when the chain tip changes. This can effectively be used in `waitNext` and make it better than the current approach, which constantly calls `createBlockTemplate` every second and checks if it is a better template.\n\n2. Low-priority, nice-to-have: prioritize clients; the mining interface should be served first before other components. (This is low-priority because of cache and template sharing between components. If a component calls BlockTemplateManager with the same config before the mining interface, the only overhead should be the shared pointer copy, which is negligible, I think. E.g., mempool-based fee estimation has the same config as the default configs for the mining interface. However, Peer Manager seems to have a diverging config; hence the priority will result in serving it faster and will have measurable improvement.)\n3.  Reuse Block Template with different Config as mentioned by @ajtowns \n    > One thing that might be interesting to think about is whether a cached template can be reused despite different block creation options. I think in practice all the options can be boiled down to \"maximum total weight\" and \"minimum effective feerate\", in which case if you had a 995 kvB template (ie 1MvB with 5kvB reserved), and had a request for a 300 kvB template, you could conceivably quickly generate the latter from the former, without needing to touch the mempool. That could probably be done particularly quickly if you kept a simplified dependency graph of the txs in the template, so that once you had to start dropping some txs, you could easily figure out which ones were missing parents and no longer sensible to consider. (Dealing with a different minimum effective feerate probably requires caching each txs' effective feerate, and with cpfp considerations is probably difficult to do accurately unless you keep the ancestor information or the cluster mempool chunking information).\n\n**FAQ**\n1. Is this useful?\nThe current approach of components each creating its instance of block assembler and effectively its own caching mechanism, as shown in #31664 and #33191, results in duplicate code and does not allow for better resource usage between the components.\n - <details>\n   <summary>See Image</summary>\n   <img width=\"2872\" height=\"2404\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/0e2be732-79b6-4deb-ba61-690e9f80eff8\" />  \n   </details>\n       Using the `BlockTemplateManager` will result in better utilization of resources in the node and avoid wasted work in some cases. Generally, I think this is a better design and allows for sharing of code and the future improvements above.\n\n  2. Is there a POC?\n   Yes, I've attempted this and have a branch here: [https://github.com/ismaelsadeeq/bitcoin/tree/09-2025-minerman](https://github.com/ismaelsadeeq/bitcoin/tree/09-2025-minerman) which has the mining interface `createNewBlock` using the `BlockTemplateManager`.\n \\#30157 will fit in nicely and reduce a large portion of mempool forecaster code, which was the caching code: [https://github.com/ismaelsadeeq/bitcoin/commit/ba9b5876ae453315b57af09654d5b12b664e897a](https://github.com/ismaelsadeeq/bitcoin/commit/ba9b5876ae453315b57af09654d5b12b664e897a)\n \\#33191 will also fit in nicely; see: [https://github.com/ismaelsadeeq/bitcoin/commit/10bd8920fd259aa47d4b96037a2302d7ae6ea41f](https://github.com/ismaelsadeeq/bitcoin/commit/10bd8920fd259aa47d4b96037a2302d7ae6ea41f)\n\n\n",
    "user": {
      "login": "ismaelsadeeq",
      "id": 48946461,
      "node_id": "MDQ6VXNlcjQ4OTQ2NDYx",
      "avatar_url": "https://avatars.githubusercontent.com/u/48946461?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ismaelsadeeq",
      "html_url": "https://github.com/ismaelsadeeq",
      "followers_url": "https://api.github.com/users/ismaelsadeeq/followers",
      "following_url": "https://api.github.com/users/ismaelsadeeq/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/ismaelsadeeq/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/ismaelsadeeq/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/ismaelsadeeq/subscriptions",
      "organizations_url": "https://api.github.com/users/ismaelsadeeq/orgs",
      "repos_url": "https://api.github.com/users/ismaelsadeeq/repos",
      "events_url": "https://api.github.com/users/ismaelsadeeq/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/ismaelsadeeq/received_events",
      "type": "User",
      "site_admin": false,
      "patch_url": null
    },
    "labels": [],
    "assignees": [],
    "author_association": "MEMBER",
    "locked": false,
    "comments": 4,
    "created_at": "2025-09-15T09:55:15Z",
    "updated_at": "2025-09-16T14:42:17Z"
  },
  "events": [
    {
      "event": "commented",
      "id": 3293358522,
      "node_id": "IC_kwDOABII587ETKm6",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3293358522",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-09-15T18:08:36Z",
      "updated_at": "2025-09-15T18:08:36Z",
      "author_association": "CONTRIBUTOR",
      "body": "Another link to the POC branch: https://github.com/bitcoin/bitcoin/compare/master...ismaelsadeeq:bitcoin:09-2025-minerman\n\nThis seems like a good idea. The actual change here doesn't seem very big and it seems like it could avoid some wasted memory and wasted work. It does seem like `BlockTemplateManager` is currently duplicating some logic in `WaitAndCreateNewBlock`, but I think the idea would be to replace it?\n\nThis idea also seems like it might relate to https://github.com/bitcoin/bitcoin/issues/31109 (if that issue is not already resolved by having having BlockTemplate::waitNext()).\n\nAnother minor piece of feedback is I think `shared_ptr<CBlockTemplate>` should be replaced by `shared_ptr<const CBlockTemplate>` in the branch to prevent callers from making changes to shared templates.\n\n\n\n",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/33389#issuecomment-3293358522",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/33389"
    },
    {
      "event": "commented",
      "id": 3295505510,
      "node_id": "IC_kwDOABII587EbWxm",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3295505510",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-09-16T05:37:48Z",
      "updated_at": "2025-09-16T05:37:48Z",
      "author_association": "CONTRIBUTOR",
      "body": "> [net: Provide block templates to peers on request #33191](https://github.com/bitcoin/bitcoin/pull/33191) will also fit in nicely; see: [ismaelsadeeq@10bd892](https://github.com/ismaelsadeeq/bitcoin/commit/10bd8920fd259aa47d4b96037a2302d7ae6ea41f)\n\nI don't understand this -- peer template sharing seems a really bad fit for a template manager for three reasons:\n\n * the shared templates are probably oversized (2MvB instead of 1MvB) so aren't directly useful to reuse in other contexts (and would be harmful if directly reused, as they would obviously be consensus invalid)\n * we probably want to retain knowledge about precisely when the template was generated to avoid leaking more precise information about when we added a tx to the mempool [[ref]](https://github.com/bitcoin/bitcoin/pull/33191#issuecomment-3194906991)\n * the shared templates for peers are cached even after they're no longer current in order to still be able to reply to requests and potentially to aid compact block reconstruction; so a different caching strategy compared to BlockTemplateManager's is needed anyway\n\nSo as far as I can see these two features don't really get a lot of benefit from each other.\n\nIn an ideal world, I think some of this is better done via cluster mempool -- ie if we're tracking the approximate feerate of the top 1MvB of mempool txs directly via the mempool (as per https://github.com/bitcoin/bitcoin/pull/31283#discussion_r1937550966), then perhaps the fee estimation stuff won't need to invoke createblock at all.\n\nOverall, this seems like a fine idea; at the very least the `static` variables inside `getblocktemplate` always seemed a bit tacky to me, and unifying gbt and the mining interface seems sensible. This seems worth doing even if it's only useful for gbt and the mining interface to me.\n\n> will request a template with their respective block creation options and the number of seconds of how fresh they want the template to be.\n\nOne thing that might be interesting to think about is whether a cached template can be reused despite different block creation options. I think in practice all the options can be boiled down to \"maximum total weight\" and \"minimum effective feerate\", in which case if you had a 995 kvB template (ie 1MvB with 5kvB reserved), and had a request for a 300 kvB template, you could conceivably quickly generate the latter from the former, without needing to touch the mempool. That could probably be done particularly quickly if you kept a simplified dependency graph of the txs in the template, so that once you had to start dropping some txs, you could easily figure out which ones were missing parents and no longer sensible to consider. (Dealing with a different minimum effective feerate probably requires caching each txs' effective feerate, and with cpfp considerations is probably difficult to do accurately unless you keep the ancestor information or the cluster mempool chunking information).\n\nI'd be tempted to call this `BlockTemplateCache` rather than `..Manager` personally, but ymmv.",
      "user": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/33389#issuecomment-3295505510",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/33389"
    },
    {
      "event": "commented",
      "id": 3297095317,
      "node_id": "IC_kwDOABII587Eha6V",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3297095317",
      "actor": {
        "login": "ismaelsadeeq",
        "id": 48946461,
        "node_id": "MDQ6VXNlcjQ4OTQ2NDYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/48946461?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ismaelsadeeq",
        "html_url": "https://github.com/ismaelsadeeq",
        "followers_url": "https://api.github.com/users/ismaelsadeeq/followers",
        "following_url": "https://api.github.com/users/ismaelsadeeq/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ismaelsadeeq/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ismaelsadeeq/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ismaelsadeeq/subscriptions",
        "organizations_url": "https://api.github.com/users/ismaelsadeeq/orgs",
        "repos_url": "https://api.github.com/users/ismaelsadeeq/repos",
        "events_url": "https://api.github.com/users/ismaelsadeeq/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ismaelsadeeq/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-09-16T09:34:57Z",
      "updated_at": "2025-09-16T09:34:57Z",
      "author_association": "MEMBER",
      "body": "Thanks for taking a look.\n\n@ryanofsky wrote\n\n> It does seem like BlockTemplateManager is currently duplicating some logic in WaitAndCreateNewBlock, but I think the idea would be to replace it?\n\nFor now I think it won’t exactly replace it; instead,\n\n```cpp\n            auto new_tmpl{BlockAssembler{\n                chainman.ActiveChainstate(),\n                mempool,\n                assemble_options}\n                              .CreateNewBlock()};\n```\n\nshould be replaced with\n\n```cpp\nauto interval = std::chrono::seconds{0s};\nauto new_tmpl = minerman.GetBlockTemplate(assemble_options, interval);\n```\n\nsuch that other components apart from peer manager, as @ajtowns mentioned, can reuse this template since it is very consistent and fresh.\n\nThe logic should be replaced when F.1 1 has been implemented.\n\n> This idea also seems like it might relate to #31109 (if that issue is not already resolved by having having BlockTemplate::waitNext()).\n\nYes, if I understand correctly, F.I 1 solves part of the issue, which is deciding that the mempool fees have increased to the point where we should create a new template (it will just change internally without the CBT calls each second, to users of waitNext() nothing changes I think).\n\n> Another minor piece of feedback is I think shared\\_ptr<CBlockTemplate> should be replaced by shared\\_ptr<const CBlockTemplate> in the branch to prevent callers from making changes to shared templates.\n\nThanks, I will update.\n\n@ajtowns wrote\n\n> the shared templates are probably oversized (2MvB instead of 1MvB) so aren't directly useful to reuse in other contexts (and would be harmful if directly reused, as they would obviously be consensus invalid)\n\nYes, this is correct. But it will benefit from it in the F.I is added (there should be no point in creating a new template when nothing change in the previous one). As of now, it is not benefiting from the cache, and other components won’t benefit from it either (CAVEAT: when your idea is added other components will benefit).\n\n> One thing that might be interesting to think about is whether a cached template can be reused despite different block creation options.\n\nThis is the CAVEAT i mentioned above. I will add that to the list of F.I's.\n\n> we probably want to retain knowledge about precisely when the template was generated to avoid leaking more precise information about when we added a tx to the mempool \\[ref]\n\nThis is trivial to return, because the time of creation is the main trigger for new block template generation.\n\n> the shared templates for peers are cached even after they're no longer current in order to still be able to reply to requests and potentially to aid compact block reconstruction; so a different caching strategy compared to BlockTemplateManager's is needed anyway\n\nI don’t think this means an overlap. `BlockTemplateManager` also doesn't clear when it is not current; it clears when the tip changes. You should be able to ask for all block templates with a particular config and get a list with the time of creation.\n\n> In an ideal world, I think some of this is better done via cluster mempool -- ie if we're tracking the approximate feerate of the top 1MvB of mempool txs directly via the mempool (as per #31283 (comment)), then perhaps the fee estimation stuff won't need to invoke createblock at all.\n\nHmm, yes, that’s correct, and that will be better because the fee estimation only needs the package fee rate data anyway.\nAlthough I am not sure about the concrete approach to do this yet, I will think about it a bit more and also would like to know what @sipa  thinks about this.\n\n> That could probably be done particularly quickly if you kept a simplified dependency graph of the txs in the template, so that once you had to start dropping some txs, you could easily figure out which ones were missing parents and no longer sensible to consider. (Dealing with a different minimum effective feerate probably requires caching each txs' effective feerate, and with cpfp considerations is probably difficult to do accurately unless you keep the ancestor information or the cluster mempool chunking information).\n\nThis is a nice idea 👍🏾 , I will add it to the list of future improvements.\n",
      "user": {
        "login": "ismaelsadeeq",
        "id": 48946461,
        "node_id": "MDQ6VXNlcjQ4OTQ2NDYx",
        "avatar_url": "https://avatars.githubusercontent.com/u/48946461?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ismaelsadeeq",
        "html_url": "https://github.com/ismaelsadeeq",
        "followers_url": "https://api.github.com/users/ismaelsadeeq/followers",
        "following_url": "https://api.github.com/users/ismaelsadeeq/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ismaelsadeeq/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ismaelsadeeq/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ismaelsadeeq/subscriptions",
        "organizations_url": "https://api.github.com/users/ismaelsadeeq/orgs",
        "repos_url": "https://api.github.com/users/ismaelsadeeq/repos",
        "events_url": "https://api.github.com/users/ismaelsadeeq/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ismaelsadeeq/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/33389#issuecomment-3297095317",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/33389"
    },
    {
      "event": "mentioned",
      "id": 19721379964,
      "node_id": "MEE_lADOABII587LrkfDzwAAAASXfGB8",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/19721379964",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-09-16T09:34:59Z"
    },
    {
      "event": "subscribed",
      "id": 19721380010,
      "node_id": "SE_lADOABII587LrkfDzwAAAASXfGCq",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/19721380010",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-09-16T09:34:59Z"
    },
    {
      "event": "mentioned",
      "id": 19721380067,
      "node_id": "MEE_lADOABII587LrkfDzwAAAASXfGDj",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/19721380067",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-09-16T09:34:59Z"
    },
    {
      "event": "subscribed",
      "id": 19721380085,
      "node_id": "SE_lADOABII587LrkfDzwAAAASXfGD1",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/19721380085",
      "actor": {
        "login": "sipa",
        "id": 548488,
        "node_id": "MDQ6VXNlcjU0ODQ4OA==",
        "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sipa",
        "html_url": "https://github.com/sipa",
        "followers_url": "https://api.github.com/users/sipa/followers",
        "following_url": "https://api.github.com/users/sipa/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/sipa/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/sipa/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
        "organizations_url": "https://api.github.com/users/sipa/orgs",
        "repos_url": "https://api.github.com/users/sipa/repos",
        "events_url": "https://api.github.com/users/sipa/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/sipa/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-09-16T09:34:59Z"
    },
    {
      "event": "mentioned",
      "id": 19721380117,
      "node_id": "MEE_lADOABII587LrkfDzwAAAASXfGEV",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/19721380117",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-09-16T09:34:59Z"
    },
    {
      "event": "subscribed",
      "id": 19721380145,
      "node_id": "SE_lADOABII587LrkfDzwAAAASXfGEx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/19721380145",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-09-16T09:35:00Z"
    },
    {
      "event": "mentioned",
      "id": 19721485421,
      "node_id": "MEE_lADOABII587LrkfDzwAAAASXffxt",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/19721485421",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-09-16T09:40:04Z"
    },
    {
      "event": "subscribed",
      "id": 19721485439,
      "node_id": "SE_lADOABII587LrkfDzwAAAASXffx_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/19721485439",
      "actor": {
        "login": "ajtowns",
        "id": 127186,
        "node_id": "MDQ6VXNlcjEyNzE4Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ajtowns",
        "html_url": "https://github.com/ajtowns",
        "followers_url": "https://api.github.com/users/ajtowns/followers",
        "following_url": "https://api.github.com/users/ajtowns/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ajtowns/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ajtowns/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
        "organizations_url": "https://api.github.com/users/ajtowns/orgs",
        "repos_url": "https://api.github.com/users/ajtowns/repos",
        "events_url": "https://api.github.com/users/ajtowns/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ajtowns/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-09-16T09:40:04Z"
    },
    {
      "event": "commented",
      "id": 3299100671,
      "node_id": "IC_kwDOABII587EpEf_",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/3299100671",
      "actor": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-09-16T14:42:17Z",
      "updated_at": "2025-09-16T14:42:17Z",
      "author_association": "CONTRIBUTOR",
      "body": "Interesting discussion. Especially interesting to know about possibility of leaking transaction information if creation times aren't tracked and used correctly. And to know how this could take more advantage of cluster mempool. I also like idea of calling this BlockTemplateCache instead of BlockTemplateManager to give it more focus.\n\nOverall, notion of a shared cache seems useful. In terms of the implementation approach, I think it'd be nice if new code were integrated with existing code sooner rather than later (for example if waitNext could call this in the same PR it was introduced, or if this could be used to replace static BlockAssembler variables) to avoid having duplicate functionality, and make sure the new code is well tested and the interface is practically useful.\n\n> F.I 1\n\nNote: in case anybody else was confused by this, F.I refers the \"Future Improvements\" section of the OP.",
      "user": {
        "login": "ryanofsky",
        "id": 7133040,
        "node_id": "MDQ6VXNlcjcxMzMwNDA=",
        "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/ryanofsky",
        "html_url": "https://github.com/ryanofsky",
        "followers_url": "https://api.github.com/users/ryanofsky/followers",
        "following_url": "https://api.github.com/users/ryanofsky/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/ryanofsky/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/ryanofsky/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
        "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
        "repos_url": "https://api.github.com/users/ryanofsky/repos",
        "events_url": "https://api.github.com/users/ryanofsky/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/33389#issuecomment-3299100671",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/33389"
    }
  ]
}