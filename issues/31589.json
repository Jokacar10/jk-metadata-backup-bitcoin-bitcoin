{
  "type": "issue",
  "issue": {
    "id": 2765361630,
    "node_id": "I_kwDOABII586k1BHe",
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31589",
    "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
    "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31589/labels%7B/name%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31589/comments",
    "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31589/events",
    "html_url": "https://github.com/bitcoin/bitcoin/issues/31589",
    "number": 31589,
    "state": "open",
    "state_reason": null,
    "title": "P2TR Spending Bug - Signing Transaction Failed",
    "body": "### Is there an existing issue for this?\r\n\r\n- [X] I have searched the existing issues\r\n\r\n### Current behaviour\r\n\r\nSome Segwit Version 1 Addresses generated with [Achow101's Rust-Vanitygen](https://github.com/achow101/rust-vanitygen) cause an issue when spending coins using them. Generally, the \"Signing transaction failed\" error occurs and the transaction is not created. Though, a workaround still allows to spend the coins.\r\n\r\nI don't know if the issue is exclusive to P2TR, but never encountered such problems with Vanity Version 0 Addresses in the past... I also did not encounter such issue with P2TR Addresses directly generated in Bitcoin Core with `getnewaddress` or so.\r\n\r\nMaybe it is the same issue as #5828, which was however not been reported with a concrete and reproducible example, and was closed since long... If so, then it would mean that other Address Types may be affected as TapRoot did not exist at this time. I have not found other duplicates, but sorry if I missed one...\r\n\r\n### Expected behaviour\r\n\r\nBeing able to spend using these Addresses without workarounds.\r\n\r\n### Steps to reproduce\r\n\r\n* Optional: Generate a Vanity P2TR Address with the [Achow101's Rust-Vanitygen](https://github.com/achow101/rust-vanitygen), modding it or converting the Private Key from Mainnet to Testnet if necessary. Some Addresses will work, others exhibit the present issue... It seems that there is a significant proportion falling in the second case...\r\n* For convenience, you can simply use this one made for this Bug Report:\r\n```\r\ninternal_privkey: cNKAo2ZRsaWKcP481cEfj3astPyBrfq56JBtLeRhHUvTSuk2z4MR\r\ninternal_pubkey: ac414af4b822d67307fe81bef0a72ddf0be9e6ff129eb1270b1168126f619619\r\nAddress: tb1ptestamfzz5zguhrad6xuf7afua0csz5m6k2qclpnpkvsl20t856sxz2d89\r\n```\r\n* Import the Address, for example in Testnet4 via the Bitcoin-Qt Console: \r\n```\r\nimportdescriptors '[{\"desc\": \"tr(cNKAo2ZRsaWKcP481cEfj3astPyBrfq56JBtLeRhHUvTSuk2z4MR)#vhsk8sfh\", \"timestamp\":0}]'\r\n```\r\n* Optional: get some coins from a Testnet4 Faucet (or any other source) for this tb1ptestamfzz5zguhrad6xuf7afua0csz5m6k2qclpnpkvsl20t856sxz2d89 Address. When I submitted the Issue, there were some coins left...\r\n* Optional: Send some amount involving this Address. Immediately after importing the Address, it appears that there is no particular issue. See Transaction [a301d660523de70542d30490052f9e04ba3f9b5e26482745c7dbdc952802f103](https://mempool.space/testnet4/tx/a301d660523de70542d30490052f9e04ba3f9b5e26482745c7dbdc952802f103).\r\n* Restart Bitcoin Core, and try sending again some amount. The interface now shows a \"Signing transaction failed\" dialog followed by \"Transaction creation failed!\". Or, in the Console,\r\n```\r\nsendtoaddress tb1qn9rvr53m7qvrpysx48svuxsgahs88xfsskx367 0.0001\r\nSigning transaction failed (code -6)\r\n```\r\n* However, if a new Wallet is created, and the Descriptor is imported again as above, sending coins is possible again (until Bitcoin Core is restarted again). The process can be repeated to further reuse the Address (which is obviously not practical).\r\n\r\n### Relevant log output\r\n\r\n_No response_\r\n\r\n### How did you obtain Bitcoin Core\r\n\r\nCompiled from source\r\n\r\n### What version of Bitcoin Core are you using?\r\n\r\nmaster@228aba2c4d9ac0b2ca3edd3c2cdf0a92e55f669b\r\n\r\n### Operating system and version\r\n\r\nDebian 13 Testing\r\n\r\n### Machine specifications\r\n\r\n_No response_",
    "user": {
      "login": "Pttn",
      "id": 28868425,
      "node_id": "MDQ6VXNlcjI4ODY4NDI1",
      "avatar_url": "https://avatars.githubusercontent.com/u/28868425?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Pttn",
      "html_url": "https://github.com/Pttn",
      "followers_url": "https://api.github.com/users/Pttn/followers",
      "following_url": "https://api.github.com/users/Pttn/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/Pttn/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/Pttn/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/Pttn/subscriptions",
      "organizations_url": "https://api.github.com/users/Pttn/orgs",
      "repos_url": "https://api.github.com/users/Pttn/repos",
      "events_url": "https://api.github.com/users/Pttn/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/Pttn/received_events",
      "type": "User",
      "site_admin": false,
      "patch_url": null
    },
    "labels": [],
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "locked": false,
    "comments": 1,
    "created_at": "2025-01-02T02:04:22Z",
    "updated_at": "2025-01-02T04:12:58Z"
  },
  "events": [
    {
      "event": "commented",
      "id": 2567270082,
      "node_id": "IC_kwDOABII586ZBW7C",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2567270082",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-01-02T04:12:57Z",
      "updated_at": "2025-01-02T04:12:57Z",
      "author_association": "MEMBER",
      "body": "It looks like this is due to the pubkey evenness bit. The internal key is `03`, and this information is known and in memory after importing. But after reloading the wallet, the evenness bit is lost and since the public descriptor stored in the wallet only has the xonly pubkey, so it defaults to `02`. Then the signing code is looking for the privkey to the `02` pubkey rather than the `03`, is unable to find it, and therefore fails to sign.\r\n\r\nThis should only be a problem for tr() descriptors with a non-BIP32 key. This isn't a problem for the automatically generated descriptors because those all use BIP 32 derivation. Since this also only is an issue for `03` pubkeys, the issue should only happen half of the time.",
      "user": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/31589#issuecomment-2567270082",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31589"
    }
  ]
}