{
  "type": "issue",
  "issue": {
    "id": 2927699406,
    "node_id": "I_kwDOABII586ugSXO",
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32089",
    "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
    "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32089/labels%7B/name%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32089/comments",
    "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32089/events",
    "html_url": "https://github.com/bitcoin/bitcoin/issues/32089",
    "number": 32089,
    "state": "open",
    "state_reason": null,
    "title": "Failure to run Fuzz tests when running with corpus",
    "body": "### Is there an existing issue for this?\n\n- [x] I have searched the existing issues\n\n### Current behaviour\n\nWhen running the fuzz tests with fuzz corpus raises an error \n```\nFUZZ=process_message build_fuzz/bin/fuzz qa-assets/fuzz_corpora/process_message/                                               ─╯\nINFO: Running with entropic power schedule (0xFF, 100).\nINFO: Seed: 64371175\nINFO: Loaded 1 modules   (1252320 inline 8-bit counters): 1252320 [0x1061c8000, 0x1062f9be0), \nINFO: Loaded 1 PC tables (1252320 PCs): 1252320 [0x1062f9be0,0x1076159e0), \n=================================================================\n==36574==ERROR: AddressSanitizer: container-overflow on address 0x60800002c268 at pc 0x000102074ef4 bp 0x00016ddd26e0 sp 0x00016ddd26d8\nWRITE of size 8 at 0x60800002c268 thread T0\n    #0 0x000102074ef0 in std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__init_copy_ctor_external(char const*, unsigned long)+0x1c4 (fuzz:arm64+0x100048ef0)\n    #1 0x0001057b34f8 in fuzzer::ListFilesInDirRecursive(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, long*, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>>*, bool)+0x26c (fuzz:arm64+0x1037874f8)\n    #2 0x0001057b27c0 in fuzzer::GetSizedFilesFromDir(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, std::__1::vector<fuzzer::SizedFile, std::__1::allocator<fuzzer::SizedFile>>*)+0x2c (fuzz:arm64+0x1037867c0)\n    #3 0x0001057ae338 in fuzzer::ReadCorpora(std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>> const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>> const&)+0x4c (fuzz:arm64+0x103782338)\n    #4 0x0001057ae1a0 in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long))+0x1dbc (fuzz:arm64+0x1037821a0)\n    #5 0x0001057c1aa8 in main+0x24 (fuzz:arm64+0x103795aa8)\n    #6 0x00018ce70270  (<unknown module>)\n    #7 0xf3547ffffffffffc  (<unknown module>)\n\n0x60800002c268 is located 72 bytes inside of 96-byte region [0x60800002c220,0x60800002c280)\nallocated by thread T0 here:\n    #0 0x0001094d92c4 in _Znwm+0x6c (libclang_rt.asan_osx_dynamic.dylib:arm64+0x612c4)\n    #1 0x0001025f0a5c in std::__1::__split_buffer<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>&)+0xf0 (fuzz:arm64+0x1005c4a5c)\n    #2 0x000102943a48 in std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>* std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>>::__push_back_slow_path<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&)+0x244 (fuzz:arm64+0x100917a48)\n    #3 0x0001057b3468 in fuzzer::ListFilesInDirRecursive(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, long*, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>>*, bool)+0x1dc (fuzz:arm64+0x103787468)\n    #4 0x0001057b27c0 in fuzzer::GetSizedFilesFromDir(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, std::__1::vector<fuzzer::SizedFile, std::__1::allocator<fuzzer::SizedFile>>*)+0x2c (fuzz:arm64+0x1037867c0)\n    #5 0x0001057ae338 in fuzzer::ReadCorpora(std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>> const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>> const&)+0x4c (fuzz:arm64+0x103782338)\n    #6 0x0001057ae1a0 in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long))+0x1dbc (fuzz:arm64+0x1037821a0)\n    #7 0x0001057c1aa8 in main+0x24 (fuzz:arm64+0x103795aa8)\n    #8 0x00018ce70270  (<unknown module>)\n    #9 0xf3547ffffffffffc  (<unknown module>)\n\nHINT: if you don't care about these errors you may set ASAN_OPTIONS=detect_container_overflow=0.\nIf you suspect a false positive see also: https://github.com/google/sanitizers/wiki/AddressSanitizerContainerOverflow.\nSUMMARY: AddressSanitizer: container-overflow (fuzz:arm64+0x100048ef0) in std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__init_copy_ctor_external(char const*, unsigned long)+0x1c4\nShadow bytes around the buggy address:\n  0x60800002bf80: fa fa fa fa fd fd fd fd fd fd fd fd fd fd fd fd\n  0x60800002c000: fa fa fa fa 00 00 00 00 00 00 00 00 00 00 00 fa\n  0x60800002c080: fa fa fa fa fd fd fd fd fd fd fd fd fd fd fd fd\n  0x60800002c100: fa fa fa fa 00 00 00 00 00 00 00 00 00 00 00 fa\n  0x60800002c180: fa fa fa fa fd fd fd fd fd fd fd fd fd fd fd fd\n=>0x60800002c200: fa fa fa fa 00 00 00 00 00 00 00 00 00[fc]fc fc\n  0x60800002c280: fa fa fa fa 00 00 00 00 00 00 00 00 00 00 00 fa\n  0x60800002c300: fa fa fa fa 00 00 00 00 00 00 00 00 00 00 00 00\n  0x60800002c380: fa fa fa fa 00 00 00 00 00 00 00 00 00 00 00 fa\n  0x60800002c400: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x60800002c480: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n==36574==ABORTING\n[3]    36574 abort      FUZZ=process_message build_fuzz/bin/fuzz \n\n```\n\nwhen running with without corpus , the fuzz test runs fine.\n```\n FUZZ=process_message build_fuzz/bin/fuzz                                                                                       ─╯\nINFO: Running with entropic power schedule (0xFF, 100).\nINFO: Seed: 85124989\nINFO: Loaded 1 modules   (1252320 inline 8-bit counters): 1252320 [0x10672c000, 0x10685dbe0), \nINFO: Loaded 1 PC tables (1252320 PCs): 1252320 [0x10685dbe0,0x107b799e0), \nINFO: -max_len is not provided; libFuzzer will not generate inputs larger than 4096 bytes\nINFO: A corpus is not provided, starting from an empty corpus\n#2      INITED cov: 2748 ft: 2747 corp: 1/1b exec/s: 0 rss: 193Mb\n#6      NEW    cov: 2754 ft: 2848 corp: 2/2b lim: 4 exec/s: 0 rss: 193Mb L: 1/1 MS: 4 ChangeBinInt-ChangeBit-CopyPart-ChangeByte-\n#8      NEW    cov: 2754 ft: 2851 corp: 3/4b lim: 4 exec/s: 0 rss: 194Mb L: 2/2 MS: 2 CopyPart-InsertByte-\n#11     NEW    cov: 2757 ft: 2858 corp: 4/5b lim: 4 exec/s: 0 rss: 194Mb L: 1/2 MS: 3 ChangeBit-ChangeBinInt-ChangeBit-\n#26     NEW    cov: 2757 ft: 2859 corp: 5/7b lim: 4 exec/s: 0 rss: 194Mb L: 2/2 MS: 5 CrossOver-ChangeBit-ChangeByte-CrossOver-CrossOver-\n#27     NEW    cov: 2758 ft: 2878 corp: 6/8b lim: 4 exec/s: 0 rss: 194Mb L: 1/2 MS: 1 ChangeByte-\n#53     NEW    cov: 2758 ft: 2879 corp: 7/12b lim: 4 exec/s: 0 rss: 195Mb L: 4/4 MS: 1 CopyPart-\n#278    NEW    cov: 2759 ft: 2881 corp: 8/17b lim: 6 exec/s: 0 rss: 198Mb L: 5/5 MS: 5 ShuffleBytes-ChangeByte-EraseBytes-CrossOver-CrossOver-\n#364    NEW    cov: 2759 ft: 2882 corp: 9/18b lim: 6 exec/s: 0 rss: 200Mb L: 1/5 MS: 1 ChangeByte-\n#615    NEW    cov: 2759 ft: 2890 corp: 10/20b lim: 8 exec/s: 0 rss: 204Mb L: 2/5 MS: 1 InsertByte-\n#657    NEW    cov: 2759 ft: 2892 corp: 11/27b lim: 8 exec/s: 0 rss: 204Mb L: 7/7 MS: 2 ChangeByte-CopyPart-\n#692    NEW    cov: 2759 ft: 2893 corp: 12/34b lim: 8 exec/s: 0 rss: 205Mb L: 7/7 MS: 5 InsertRepeatedBytes-InsertByte-EraseBytes-ChangeBinInt-InsertRepeatedBytes-\n#1013   NEW    cov: 2759 ft: 2895 corp: 13/45b lim: 11 exec/s: 0 rss: 210Mb L: 11/11 MS: 1 InsertRepeatedBytes-\n#1341   NEW    cov: 2764 ft: 2901 corp: 14/58b lim: 14 exec/s: 0 rss: 215Mb L: 13/13 MS: 3 ChangeByte-InsertRepeatedBytes-InsertRepeatedBytes-\n#1347   NEW    cov: 2765 ft: 2902 corp: 15/61b lim: 14 exec/s: 0 rss: 215Mb L: 3/13 MS: 1 CrossOver-\n#1378   NEW    cov: 2765 ft: 2905 corp: 16/75b lim: 14 exec/s: 0 rss: 216Mb L: 14/14 MS: 1 InsertByte-\n#1716   NEW    cov: 2765 ft: 2908 corp: 17/91b lim: 17 exec/s: 0 rss: 221Mb L: 16/16 MS: 3 CrossOver-InsertRepeatedBytes-InsertRepeatedBytes-\n#1754   NEW    cov: 2765 ft: 2911 corp: 18/106b lim: 17 exec/s: 0 rss: 222Mb L: 15/16 MS: 3 InsertByte-ChangeBit-CopyPart-\n#1982   NEW    cov: 2766 ft: 2912 corp: 19/110b lim: 17 exec/s: 0 rss: 226Mb L: 4/16 MS: 3 ChangeBit-EraseBytes-ChangeBit-\n#2405   NEW    cov: 2767 ft: 2915 corp: 20/130b lim: 21 exec/s: 0 rss: 232Mb L: 20/20 MS: 3 InsertByte-InsertRepeatedBytes-InsertRepeatedBytes-\n#2418   NEW    cov: 2769 ft: 2917 corp: 21/151b lim: 21 exec/s: 0 rss: 233Mb L: 21/21 MS: 3 InsertRepeatedBytes-InsertByte-CrossOver-\n#2629   REDUCE cov: 2769 ft: 2917 corp: 21/150b lim: 21 exec/s: 0 rss: 236Mb L: 6/21 MS: 1 EraseBytes-\n        NEW_FUNC[1/19]: 0x0001034cb5bc in CNetAddr::IsRFC1918() const+0x0 (fuzz:arm64+0x100f3b5bc)\n        NEW_FUNC[2/19]: 0x0001034cbd94 in CNetAddr::IsRFC2544() const+0x0 (fuzz:arm64+0x100f3bd94)\n#3051   NEW    cov: 2881 ft: 3227 corp: 22/173b lim: 25 exec/s: 0 rss: 244Mb L: 23/23 MS: 2 InsertRepeatedBytes-InsertRepeatedBytes-\n#3071   REDUCE cov: 2881 ft: 3227 corp: 22/170b lim: 25 exec/s: 0 rss: 244Mb L: 3/23 MS: 5 ChangeBit-CrossOver-CMP-CrossOver-EraseBytes- DE: \"\\377\\377\\377\\377\"-\n        NEW_FUNC[1/11]: 0x0001025a7a5c in std::__1::vector<unsigned char, std::__1::allocator<unsigned char>>::shrink_to_fit()+0x0 (fuzz:arm64+0x100017a5c)\n        NEW_FUNC[2/11]: 0x0001025a8070 in std::__1::vector<unsigned char, \n```\n\n### Expected behaviour\n\nTo run the fuzz tests without any error and relevant log output.\n\n### Steps to reproduce\n\n```shell\ngit clone https://github.com/bitcoin-core/qa-assets\ncmake --preset=libfuzzer \\\n   -DCMAKE_C_COMPILER=\"$(brew --prefix llvm)/bin/clang\" \\\n   -DCMAKE_CXX_COMPILER=\"$(brew --prefix llvm)/bin/clang++\" \\\n   -DCMAKE_EXE_LINKER_FLAGS=\"-fuse-ld=lld\"\n\ncmake --build build_fuzz -j$(sysctl -n hw.ncpu)\nFUZZ=process_message build_fuzz/bin/fuzz qa-assets/fuzz_corpora/process_message/      \n```\n\n\n\n### Relevant log output\n\nNA\n\n### How did you obtain Bitcoin Core\n\nCompiled from source\n\n### What version of Bitcoin Core are you using?\n\nmaster @83a9e55ae1 \n\n### Operating system and version\n\nMacOS 15.3.1 \n\n### Machine specifications\n\n_No response_",
    "user": {
      "login": "Prabhat1308",
      "id": 94048855,
      "node_id": "U_kgDOBZsSVw",
      "avatar_url": "https://avatars.githubusercontent.com/u/94048855?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Prabhat1308",
      "html_url": "https://github.com/Prabhat1308",
      "followers_url": "https://api.github.com/users/Prabhat1308/followers",
      "following_url": "https://api.github.com/users/Prabhat1308/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/Prabhat1308/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/Prabhat1308/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/Prabhat1308/subscriptions",
      "organizations_url": "https://api.github.com/users/Prabhat1308/orgs",
      "repos_url": "https://api.github.com/users/Prabhat1308/repos",
      "events_url": "https://api.github.com/users/Prabhat1308/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/Prabhat1308/received_events",
      "type": "User",
      "site_admin": false,
      "patch_url": null
    },
    "labels": [
      {
        "id": 234879,
        "node_id": "MDU6TGFiZWwyMzQ4Nzk=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/macOS",
        "name": "macOS",
        "description": "",
        "color": "660000",
        "default": false
      },
      {
        "id": 62963516,
        "node_id": "MDU6TGFiZWw2Mjk2MzUxNg==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests",
        "name": "Tests",
        "color": "d4c5f9",
        "default": false
      },
      {
        "id": 159815356,
        "node_id": "MDU6TGFiZWwxNTk4MTUzNTY=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Upstream",
        "name": "Upstream",
        "color": "bfd4f2",
        "default": false
      }
    ],
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "locked": false,
    "comments": 19,
    "created_at": "2025-03-18T09:05:09Z",
    "updated_at": "2025-04-08T18:14:23Z"
  },
  "events": [
    {
      "event": "commented",
      "id": 2732222228,
      "node_id": "IC_kwDOABII586i2mcU",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2732222228",
      "actor": {
        "login": "Prabhat1308",
        "id": 94048855,
        "node_id": "U_kgDOBZsSVw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94048855?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Prabhat1308",
        "html_url": "https://github.com/Prabhat1308",
        "followers_url": "https://api.github.com/users/Prabhat1308/followers",
        "following_url": "https://api.github.com/users/Prabhat1308/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Prabhat1308/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Prabhat1308/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Prabhat1308/subscriptions",
        "organizations_url": "https://api.github.com/users/Prabhat1308/orgs",
        "repos_url": "https://api.github.com/users/Prabhat1308/repos",
        "events_url": "https://api.github.com/users/Prabhat1308/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Prabhat1308/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-18T09:08:51Z",
      "updated_at": "2025-03-18T09:10:51Z",
      "author_association": "CONTRIBUTOR",
      "body": "I tried running with the \n```\nASAN_OPTIONS=detect_container_overflow=0 FUZZ=process_message build_fuzz/bin/fuzz qa-assets/fuzz_corpora/process_message/\n```\nIt crashes with the following log \n```\nINFO: Running with entropic power schedule (0xFF, 100).\nINFO: Seed: 917199606\nINFO: Loaded 1 modules   (1252320 inline 8-bit counters): 1252320 [0x109024000, 0x109155be0), \nINFO: Loaded 1 PC tables (1252320 PCs): 1252320 [0x109155be0,0x10a4719e0), \nINFO:     4126 files found in qa-assets/fuzz_corpora/process_message/\nINFO: -max_len is not provided; libFuzzer will not generate inputs larger than 981836 bytes\nINFO: seed corpus: files: 4126 min: 1b max: 981836b total: 141648651b rss: 195Mb\nlibc++abi: terminating due to uncaught exception of type std::__1::ios_base::failure: DataStream::read(): end of data: unspecified iostream_category error\n==36931== ERROR: libFuzzer: deadly signal\n    #0 0x00010c34d248 in __sanitizer_print_stack_trace+0x28 (libclang_rt.asan_osx_dynamic.dylib:arm64+0x5d248)\n    #1 0x00010861d0a4 in fuzzer::PrintStackTrace()+0x2c (fuzz:arm64+0x1037950a4)\n    #2 0x000108610a58 in fuzzer::Fuzzer::CrashCallback()+0x54 (fuzz:arm64+0x103788a58)\n    #3 0x00018d226de0 in _sigtramp+0x34 (libsystem_platform.dylib:arm64+0x3de0)\n    #4 0x9e2380018d1eff6c  (<unknown module>)\n    #5 0xc23900018d0fc904  (<unknown module>)\n    #6 0x493e80018d1a6448  (<unknown module>)\n    #7 0x166a80018d194a20  (<unknown module>)\n    #8 0xfc5480018ce3d3f0  (<unknown module>)\n    #9 0x135b80018d1a570c  (<unknown module>)\n    #10 0xd05000018d1a8cd8  (<unknown module>)\n    #11 0x633f80018d1a8c80  (<unknown module>)\n    #12 0x9a7e0001050aac24  (<unknown module>)\n    #13 0x0001050bf008 in unsigned long long ReadCompactSize<DataStream>(DataStream&, bool)+0x110 (fuzz:arm64+0x100237008)\n    #14 0x000107720fbc in void VectorFormatter<DefaultFormatter>::Unser<DataStream, std::__1::vector<CInv, std::__1::allocator<CInv>>>(DataStream&, std::__1::vector<CInv, std::__1::allocator<CInv>>&)+0x1e8 (fuzz:arm64+0x102898fbc)\n    #15 0x000107652d3c in (anonymous namespace)::PeerManagerImpl::ProcessMessage(CNode&, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, DataStream&, std::__1::chrono::duration<long long, std::__1::ratio<1l, 1000000l>>, std::__1::atomic<bool> const&)+0x3cb4 (fuzz:arm64+0x1027cad3c)\n    #16 0x00010767f794 in (anonymous namespace)::PeerManagerImpl::ProcessMessages(CNode*, std::__1::atomic<bool>&)+0x24b0 (fuzz:arm64+0x1027f7794)\n    #17 0x000105647fa0 in process_message_fuzz_target(std::__1::span<unsigned char const, 18446744073709551615ul>)+0xaf8 (fuzz:arm64+0x1007bffa0)\n    #18 0x000105b366ec in LLVMFuzzerTestOneInput+0x198 (fuzz:arm64+0x100cae6ec)\n    #19 0x000108612004 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long)+0x12c (fuzz:arm64+0x10378a004)\n    #20 0x000108611884 in fuzzer::Fuzzer::RunOne(unsigned char const*, unsigned long, bool, fuzzer::InputInfo*, bool, bool*)+0x3c (fuzz:arm64+0x103789884)\n    #21 0x0001086133c4 in fuzzer::Fuzzer::ReadAndExecuteSeedCorpora(std::__1::vector<fuzzer::SizedFile, std::__1::allocator<fuzzer::SizedFile>>&)+0x470 (fuzz:arm64+0x10378b3c4)\n    #22 0x0001086137fc in fuzzer::Fuzzer::Loop(std::__1::vector<fuzzer::SizedFile, std::__1::allocator<fuzzer::SizedFile>>&)+0x98 (fuzz:arm64+0x10378b7fc)\n    #23 0x00010860a1b4 in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long))+0x1dd0 (fuzz:arm64+0x1037821b4)\n    #24 0x00010861daa8 in main+0x24 (fuzz:arm64+0x103795aa8)\n    #25 0x00018ce70270  (<unknown module>)\n    #26 0x475cfffffffffffc  (<unknown module>)\n\nNOTE: libFuzzer has rudimentary signal handlers.\n      Combine libFuzzer with AddressSanitizer or similar for better crash reports.\nSUMMARY: libFuzzer: deadly signal\nMS: 0 ; base unit: 0000000000000000000000000000000000000000\n0x67,0x65,0x74,0x64,0x61,0x74,0x61,0x0,0x0,0x0,0x0,0x0,0x0,0x80,0x91,0x28,0x67,0x1,0x5c,0x9,0x5c,0x78,0x1,0x0,0x5e,0x78,0xc0,0x87,0x27,0xd8,0x9c,0xff,0xff,0xff,0xff,0x0,0xff,0xff,0x0,0x47,0x8b,0x0,0x82,0x7d,0x8b,0x7d,0x82,0x7d,0x82,0x1,0x0,0x0,0x0,0xa1,0x7d,0x82,0x7d,0xff,0xff,0xe9,0x7d,0x0,0x8b,0x8b,0x0,0x82,0xff,0xff,0x7d,0x7e,0x7d,0x82,0x1,0x0,0x0,0x0,0x73,0x65,0x6e,0x64,0x61,0x64,0x64,0x1c,0x0,0xb5,\ngetdata\\000\\000\\000\\000\\000\\000\\200\\221(g\\001\\\\\\011\\\\x\\001\\000^x\\300\\207'\\330\\234\\377\\377\\377\\377\\000\\377\\377\\000G\\213\\000\\202}\\213}\\202}\\202\\001\\000\\000\\000\\241}\\202}\\377\\377\\351}\\000\\213\\213\\000\\202\\377\\377}~}\\202\\001\\000\\000\\000sendadd\\034\\000\\265\nartifact_prefix='./'; Test unit written to ./crash-88926609e7277110e77b9c19c108b9df4835d6e7\nBase64: Z2V0ZGF0YQAAAAAAAICRKGcBXAlceAEAXnjAhyfYnP////8A//8AR4sAgn2LfYJ9ggEAAAChfYJ9///pfQCLiwCC//99fn2CAQAAAHNlbmRhZGQcALU=\n```\n\nhowever this seems to be specific to `process_message` target only . when I run it with `tx_package_eval` this works fine.\n\n```\nASAN_OPTIONS=detect_container_overflow=0 FUZZ=tx_package_eval build_fuzz/bin/fuzz  qa-assets/fuzz_corpora/tx_package_eval \n```\n```\nINFO: Running with entropic power schedule (0xFF, 100).\nINFO: Seed: 1122799189\nINFO: Loaded 1 modules   (1252320 inline 8-bit counters): 1252320 [0x106cdc000, 0x106e0dbe0), \nINFO: Loaded 1 PC tables (1252320 PCs): 1252320 [0x106e0dbe0,0x1081299e0), \nINFO:     2435 files found in qa-assets/fuzz_corpora/tx_package_eval\nINFO: -max_len is not provided; libFuzzer will not generate inputs larger than 999203 bytes\nINFO: seed corpus: files: 2435 min: 1b max: 999203b total: 112736936b rss: 192Mb\n#1024   pulse  cov: 12171 ft: 64557 corp: 629/83Kb exec/s: 256 rss: 286Mb\n```",
      "user": {
        "login": "Prabhat1308",
        "id": 94048855,
        "node_id": "U_kgDOBZsSVw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94048855?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Prabhat1308",
        "html_url": "https://github.com/Prabhat1308",
        "followers_url": "https://api.github.com/users/Prabhat1308/followers",
        "following_url": "https://api.github.com/users/Prabhat1308/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Prabhat1308/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Prabhat1308/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Prabhat1308/subscriptions",
        "organizations_url": "https://api.github.com/users/Prabhat1308/orgs",
        "repos_url": "https://api.github.com/users/Prabhat1308/repos",
        "events_url": "https://api.github.com/users/Prabhat1308/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Prabhat1308/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/32089#issuecomment-2732222228",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32089"
    },
    {
      "event": "commented",
      "id": 2733144415,
      "node_id": "IC_kwDOABII586i6Hlf",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2733144415",
      "actor": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-18T13:03:03Z",
      "updated_at": "2025-03-18T13:05:20Z",
      "author_association": "CONTRIBUTOR",
      "body": "I could reproduce it following the same steps on MacOS 14.3\n\n```\nFUZZ=process_message build_fuzz/bin/fuzz qa-assets/fuzz_corpora/process_message/\nfuzz(56832,0x1e31a5c40) malloc: nano zone abandoned due to inability to reserve vm space.\nINFO: Running with entropic power schedule (0xFF, 100).\nINFO: Seed: 2192399851\nINFO: Loaded 1 modules   (1252322 inline 8-bit counters): 1252322 [0x104c38000, 0x104d69be2),\nINFO: Loaded 1 PC tables (1252322 PCs): 1252322 [0x104d69be8,0x106085a08),\n=================================================================\n==56832==ERROR: AddressSanitizer: container-overflow on address 0x60800002ca68 at pc 0x000100adcef4 bp 0x00016f36aa20 sp 0x00016f36aa18\nWRITE of size 8 at 0x60800002ca68 thread T0\n    #0 0x000100adcef0 in std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__init_copy_ctor_external(char const*, unsigned long)+0x1c4 (fuzz:arm64+0x100048ef0)\n    #1 0x00010421b5bc in fuzzer::ListFilesInDirRecursive(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, long*, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>>*, bool)+0x26c (fuzz:arm64+0x1037875bc)\n    #2 0x00010421a884 in fuzzer::GetSizedFilesFromDir(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, std::__1::vector<fuzzer::SizedFile, std::__1::allocator<fuzzer::SizedFile>>*)+0x2c (fuzz:arm64+0x103786884)\n    #3 0x0001042163fc in fuzzer::ReadCorpora(std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>> const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>> const&)+0x4c (fuzz:arm64+0x1037823fc)\n    #4 0x000104216264 in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long))+0x1dbc (fuzz:arm64+0x103782264)\n    #5 0x000104229b6c in main+0x24 (fuzz:arm64+0x103795b6c)\n    #6 0x00018c5590dc  (<unknown module>)\n    #7 0x9f697ffffffffffc  (<unknown module>)\n```\n\nFor reference: https://github.com/google/sanitizers/wiki/AddressSanitizerContainerOverflow#false-positives",
      "user": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/32089#issuecomment-2733144415",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32089"
    },
    {
      "event": "labeled",
      "id": 16833083096,
      "node_id": "LE_lADOABII586ugSXOzwAAAAPrVHbY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16833083096",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-18T13:08:13Z",
      "label": {
        "name": "macOS",
        "color": "660000"
      }
    },
    {
      "event": "labeled",
      "id": 16833083109,
      "node_id": "LE_lADOABII586ugSXOzwAAAAPrVHbl",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16833083109",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-18T13:08:13Z",
      "label": {
        "name": "Tests",
        "color": "d4c5f9"
      }
    },
    {
      "event": "labeled",
      "id": 16833083122,
      "node_id": "LE_lADOABII586ugSXOzwAAAAPrVHby",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/16833083122",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-18T13:08:13Z",
      "label": {
        "name": "Upstream",
        "color": "bfd4f2"
      }
    },
    {
      "event": "commented",
      "id": 2733160346,
      "node_id": "IC_kwDOABII586i6Lea",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2733160346",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-18T13:08:57Z",
      "updated_at": "2025-03-18T13:08:57Z",
      "author_association": "MEMBER",
      "body": "I presume the `libfuzzer-nosan` preset works fine?",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/32089#issuecomment-2733160346",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32089"
    },
    {
      "event": "commented",
      "id": 2733185782,
      "node_id": "IC_kwDOABII586i6Rr2",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2733185782",
      "actor": {
        "login": "Prabhat1308",
        "id": 94048855,
        "node_id": "U_kgDOBZsSVw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94048855?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Prabhat1308",
        "html_url": "https://github.com/Prabhat1308",
        "followers_url": "https://api.github.com/users/Prabhat1308/followers",
        "following_url": "https://api.github.com/users/Prabhat1308/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Prabhat1308/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Prabhat1308/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Prabhat1308/subscriptions",
        "organizations_url": "https://api.github.com/users/Prabhat1308/orgs",
        "repos_url": "https://api.github.com/users/Prabhat1308/repos",
        "events_url": "https://api.github.com/users/Prabhat1308/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Prabhat1308/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-18T13:16:20Z",
      "updated_at": "2025-03-18T13:16:20Z",
      "author_association": "CONTRIBUTOR",
      "body": "> I presume the `libfuzzer-nosan` preset works fine?\n\nWorks fine. I do get these warning though on the start of the run .\n```\nWARNING: Failed to find function \"__sanitizer_acquire_crash_state\". Reason dlsym(RTLD_DEFAULT, __sanitizer_acquire_crash_state): symbol not found.\nWARNING: Failed to find function \"__sanitizer_print_stack_trace\". Reason dlsym(RTLD_DEFAULT, __sanitizer_print_stack_trace): symbol not found.\nWARNING: Failed to find function \"__sanitizer_set_death_callback\". Reason dlsym(RTLD_DEFAULT, __sanitizer_set_death_callback): symbol not found.\n```",
      "user": {
        "login": "Prabhat1308",
        "id": 94048855,
        "node_id": "U_kgDOBZsSVw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94048855?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Prabhat1308",
        "html_url": "https://github.com/Prabhat1308",
        "followers_url": "https://api.github.com/users/Prabhat1308/followers",
        "following_url": "https://api.github.com/users/Prabhat1308/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Prabhat1308/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Prabhat1308/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Prabhat1308/subscriptions",
        "organizations_url": "https://api.github.com/users/Prabhat1308/orgs",
        "repos_url": "https://api.github.com/users/Prabhat1308/repos",
        "events_url": "https://api.github.com/users/Prabhat1308/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Prabhat1308/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/32089#issuecomment-2733185782",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32089"
    },
    {
      "event": "commented",
      "id": 2734905310,
      "node_id": "IC_kwDOABII586jA1fe",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2734905310",
      "actor": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-18T22:51:05Z",
      "updated_at": "2025-03-18T22:51:05Z",
      "author_association": "CONTRIBUTOR",
      "body": "Worth adding this \"false positive\" information to the documentation?",
      "user": {
        "login": "brunoerg",
        "id": 19480819,
        "node_id": "MDQ6VXNlcjE5NDgwODE5",
        "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/brunoerg",
        "html_url": "https://github.com/brunoerg",
        "followers_url": "https://api.github.com/users/brunoerg/followers",
        "following_url": "https://api.github.com/users/brunoerg/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/brunoerg/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/brunoerg/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
        "organizations_url": "https://api.github.com/users/brunoerg/orgs",
        "repos_url": "https://api.github.com/users/brunoerg/repos",
        "events_url": "https://api.github.com/users/brunoerg/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/brunoerg/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/32089#issuecomment-2734905310",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32089"
    },
    {
      "event": "commented",
      "id": 2737863589,
      "node_id": "IC_kwDOABII586jMHul",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2737863589",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-19T19:35:38Z",
      "updated_at": "2025-03-19T19:35:38Z",
      "author_association": "MEMBER",
      "body": "> libc++abi: terminating due to uncaught exception of type std::__1::ios_base::failure: DataStream::read(): end of data: unspecified iostream_category error\n\nThis looks like an upstream packaging bug or asan bug on your platform, given that it passes fine when asan is disabled on your platform.",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/32089#issuecomment-2737863589",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32089"
    },
    {
      "event": "commented",
      "id": 2756991853,
      "node_id": "IC_kwDOABII586kVFtt",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2756991853",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-27T07:24:25Z",
      "updated_at": "2025-03-27T07:24:25Z",
      "author_association": "MEMBER",
      "body": "Does the issue happen with all clang versions from brew? (clang-16 to clang-20)?\n\nDoes the issue happen when compiling clang from source?",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/32089#issuecomment-2756991853",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32089"
    },
    {
      "event": "commented",
      "id": 2757479417,
      "node_id": "IC_kwDOABII586kW8v5",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2757479417",
      "actor": {
        "login": "Prabhat1308",
        "id": 94048855,
        "node_id": "U_kgDOBZsSVw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94048855?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Prabhat1308",
        "html_url": "https://github.com/Prabhat1308",
        "followers_url": "https://api.github.com/users/Prabhat1308/followers",
        "following_url": "https://api.github.com/users/Prabhat1308/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Prabhat1308/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Prabhat1308/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Prabhat1308/subscriptions",
        "organizations_url": "https://api.github.com/users/Prabhat1308/orgs",
        "repos_url": "https://api.github.com/users/Prabhat1308/repos",
        "events_url": "https://api.github.com/users/Prabhat1308/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Prabhat1308/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-03-27T10:10:20Z",
      "updated_at": "2025-03-27T11:04:32Z",
      "author_association": "CONTRIBUTOR",
      "body": "I suspect this issue is because of the `-DCMAKE_EXE_LINKER_FLAGS=\"-fuse-ld=lld\"` flag.\n\nOther than my default llvm19 , I used llvm@18 downloaded via brew which comes with clang 18 I used 2 different configs\n\n```\nmake --preset=libfuzzer \\                                                                                                       \n    -DCMAKE_C_COMPILER=\"$(brew --prefix llvm@18)/bin/clang\" \\\n    -DCMAKE_CXX_COMPILER=\"$(brew --prefix llvm@18)/bin/clang++\" \\\n    -DAPPEND_LDFLAGS=\"-Wl,-no_warn_duplicate_libraries\" \\\n    -DCMAKE_EXE_LINKER_FLAGS=\"$LDFLAGS\"\n```\n\n<details>\n<summary> Output </summary>\n\n```\n\n/opt/homebrew/opt/llvm@18/bin/../include/c++/v1/variant:495:12: runtime error: call to function decltype(auto) std::__1::__variant_detail::__visitation::__base::__dispatcher<0ul, 0ul>::__dispatch[abi:ne180100]<void std::__1::__variant_detail::__ctor<std::__1::__variant_detail::__traits<RPCArg::Optional, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, UniValue>>::__generic_construct[abi:ne180100]<std::__1::__variant_detail::__move_constructor<std::__1::__variant_detail::__traits<RPCArg::Optional, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, UniValue>, (std::__1::__variant_detail::_Trait)1>>(std::__1::__variant_detail::__ctor<std::__1::__variant_detail::__traits<RPCArg::Optional, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, UniValue>>&, std::__1::__variant_detail::__move_constructor<std::__1::__variant_detail::__traits<RPCArg::Optional, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, UniValue>, (std::__1::__variant_detail::_Trait)1>&&)::'lambda'(std::__1::__variant_detail::__move_constructor<std::__1::__variant_detail::__traits<RPCArg::Optional, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, UniValue>, (std::__1::__variant_detail::_Trait)1>&, auto&&)&&, std::__1::__variant_detail::__base<(std::__1::__variant_detail::_Trait)1, RPCArg::Optional, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, UniValue>&, std::__1::__variant_detail::__base<(std::__1::__variant_detail::_Trait)1, RPCArg::Optional, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, UniValue>&&>(std::__1::__variant_detail::__move_constructor<std::__1::__variant_detail::__traits<RPCArg::Optional, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, UniValue>, (std::__1::__variant_detail::_Trait)1>, std::__1::__variant_detail::__base<(std::__1::__variant_detail::_Trait)1, RPCArg::Optional, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, UniValue>&, std::__1::__variant_detail::__base<(std::__1::__variant_detail::_Trait)1, RPCArg::Optional, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, UniValue>&&) through pointer to incorrect function type 'void (*)((lambda at /opt/homebrew/opt/llvm@18/bin/../include/c++/v1/variant:814:11) &&, std::__variant_detail::__base<std::__variant_detail::_Trait::_Available, RPCArg::Optional, std::string, UniValue> &, std::__variant_detail::__base<std::__variant_detail::_Trait::_Available, RPCArg::Optional, std::string, UniValue> &&)'\nvariant:532: note: decltype(auto) std::__1::__variant_detail::__visitation::__base::__dispatcher<0ul, 0ul>::__dispatch[abi:ne180100]<void std::__1::__variant_detail::__ctor<std::__1::__variant_detail::__traits<RPCArg::Optional, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, UniValue>>::__generic_construct[abi:ne180100]<std::__1::__variant_detail::__move_constructor<std::__1::__variant_detail::__traits<RPCArg::Optional, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, UniValue>, (std::__1::__variant_detail::_Trait)1>>(std::__1::__variant_detail::__ctor<std::__1::__variant_detail::__traits<RPCArg::Optional, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, UniValue>>&, std::__1::__variant_detail::__move_constructor<std::__1::__variant_detail::__traits<RPCArg::Optional, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, UniValue>, (std::__1::__variant_detail::_Trait)1>&&)::'lambda'(std::__1::__variant_detail::__move_constructor<std::__1::__variant_detail::__traits<RPCArg::Optional, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, UniValue>, (std::__1::__variant_detail::_Trait)1>&, auto&&)&&, std::__1::__variant_detail::__base<(std::__1::__variant_detail::_Trait)1, RPCArg::Optional, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, UniValue>&, std::__1::__variant_detail::__base<(std::__1::__variant_detail::_Trait)1, RPCArg::Optional, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, UniValue>&&>(std::__1::__variant_detail::__move_constructor<std::__1::__variant_detail::__traits<RPCArg::Optional, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, UniValue>, (std::__1::__variant_detail::_Trait)1>, std::__1::__variant_detail::__base<(std::__1::__variant_detail::_Trait)1, RPCArg::Optional, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, UniValue>&, std::__1::__variant_detail::__base<(std::__1::__variant_detail::_Trait)1, RPCArg::Optional, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, UniValue>&&) defined here\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior /opt/homebrew/opt/llvm@18/bin/../include/c++/v1/variant:495:12 \n/Users/prabhatverma/projects/bitcoin/src/rpc/server.h:100:15: runtime error: call to function getblockchaininfo() through pointer to incorrect function type 'RPCHelpMan (*)()'\nblockchain.cpp:1291: note: getblockchaininfo() defined here\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior /Users/prabhatverma/projects/bitcoin/src/rpc/server.h:100:15 \n/Users/prabhatverma/projects/bitcoin/src/rpc/server.h:102:15: runtime error: call to function getblockchaininfo() through pointer to incorrect function type 'RPCHelpMan (*)()'\nblockchain.cpp:1291: note: getblockchaininfo() defined here\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior /Users/prabhatverma/projects/bitcoin/src/rpc/server.h:102:15 \n/Users/prabhatverma/projects/bitcoin/src/tinyformat.h:544:13: runtime error: call to function void tinyformat::detail::FormatArg::formatImpl<char [13]>(std::__1::basic_ostream<char, std::__1::char_traits<char>>&, char const*, char const*, int, void const*) through pointer to incorrect function type 'void (*)(std::ostream &, const char *, const char *, int, const void *)'\ntinyformat.h:558: note: void tinyformat::detail::FormatArg::formatImpl<char [13]>(std::__1::basic_ostream<char, std::__1::char_traits<char>>&, char const*, char const*, int, void const*) defined here\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior /Users/prabhatverma/projects/bitcoin/src/tinyformat.h:544:13 \nINFO: Running with entropic power schedule (0xFF, 100).\nINFO: Seed: 1206976568\nINFO: Loaded 1 modules   (1257184 inline 8-bit counters): 1257184 [0x103ed4a48, 0x104007928), \nINFO: Loaded 1 PC tables (1257184 PCs): 1257184 [0x104007928,0x105336728), \nINFO:     4374 files found in qa-assets/fuzz_corpora/process_message/\nINFO: -max_len is not provided; libFuzzer will not generate inputs larger than 981836 bytes\nINFO: seed corpus: files: 4374 min: 1b max: 981836b total: 152590538b rss: 195Mb\n#2048   pulse  cov: 14987 ft: 33197 corp: 969/143Kb exec/s: 1024 rss: 435Mb\n#4096   pulse  cov: 17387 ft: 57266 corp: 1814/795Kb exec/s: 1024 rss: 435Mb\n^C==35105== libFuzzer: run interrupted; exiting\n\n```\n</details>\n\nThis is what the initial response was before this [PR](https://github.com/bitcoin/bitcoin/pull/31954) where the exe flag was added .\n\nUsing the new config with llvm@18\n```\ncmake --preset=libfuzzer \\\n    -DCMAKE_C_COMPILER=\"$(brew --prefix llvm@18)/bin/clang\" \\\n    -DCMAKE_CXX_COMPILER=\"$(brew --prefix llvm@18)/bin/clang++\" \\\n    -DCMAKE_EXE_LINKER_FLAGS=\"-fuse-ld=lld\"\n```\n\n<details>\n<summary>Output</summary>\n\n```\n\n/opt/homebrew/opt/llvm@18/bin/../include/c++/v1/variant:495:12: runtime error: call to function decltype(auto) std::__1::__variant_detail::__visitation::__base::__dispatcher<0ul, 0ul>::__dispatch[abi:ne180100]<void std::__1::__variant_detail::__ctor<std::__1::__variant_detail::__traits<RPCArg::Optional, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, UniValue>>::__generic_construct[abi:ne180100]<std::__1::__variant_detail::__move_constructor<std::__1::__variant_detail::__traits<RPCArg::Optional, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, UniValue>, (std::__1::__variant_detail::_Trait)1>>(std::__1::__variant_detail::__ctor<std::__1::__variant_detail::__traits<RPCArg::Optional, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, UniValue>>&, std::__1::__variant_detail::__move_constructor<std::__1::__variant_detail::__traits<RPCArg::Optional, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, UniValue>, (std::__1::__variant_detail::_Trait)1>&&)::'lambda'(std::__1::__variant_detail::__move_constructor<std::__1::__variant_detail::__traits<RPCArg::Optional, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, UniValue>, (std::__1::__variant_detail::_Trait)1>&, auto&&)&&, std::__1::__variant_detail::__base<(std::__1::__variant_detail::_Trait)1, RPCArg::Optional, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, UniValue>&, std::__1::__variant_detail::__base<(std::__1::__variant_detail::_Trait)1, RPCArg::Optional, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, UniValue>&&>(std::__1::__variant_detail::__move_constructor<std::__1::__variant_detail::__traits<RPCArg::Optional, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, UniValue>, (std::__1::__variant_detail::_Trait)1>, std::__1::__variant_detail::__base<(std::__1::__variant_detail::_Trait)1, RPCArg::Optional, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, UniValue>&, std::__1::__variant_detail::__base<(std::__1::__variant_detail::_Trait)1, RPCArg::Optional, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, UniValue>&&) through pointer to incorrect function type 'void (*)((lambda at /opt/homebrew/opt/llvm@18/bin/../include/c++/v1/variant:814:11) &&, std::__variant_detail::__base<std::__variant_detail::_Trait::_Available, RPCArg::Optional, std::string, UniValue> &, std::__variant_detail::__base<std::__variant_detail::_Trait::_Available, RPCArg::Optional, std::string, UniValue> &&)'\n(fuzz:arm64+0x101536194): note: decltype(auto) std::__1::__variant_detail::__visitation::__base::__dispatcher<0ul, 0ul>::__dispatch[abi:ne180100]<void std::__1::__variant_detail::__ctor<std::__1::__variant_detail::__traits<RPCArg::Optional, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, UniValue>>::__generic_construct[abi:ne180100]<std::__1::__variant_detail::__move_constructor<std::__1::__variant_detail::__traits<RPCArg::Optional, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, UniValue>, (std::__1::__variant_detail::_Trait)1>>(std::__1::__variant_detail::__ctor<std::__1::__variant_detail::__traits<RPCArg::Optional, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, UniValue>>&, std::__1::__variant_detail::__move_constructor<std::__1::__variant_detail::__traits<RPCArg::Optional, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, UniValue>, (std::__1::__variant_detail::_Trait)1>&&)::'lambda'(std::__1::__variant_detail::__move_constructor<std::__1::__variant_detail::__traits<RPCArg::Optional, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, UniValue>, (std::__1::__variant_detail::_Trait)1>&, auto&&)&&, std::__1::__variant_detail::__base<(std::__1::__variant_detail::_Trait)1, RPCArg::Optional, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, UniValue>&, std::__1::__variant_detail::__base<(std::__1::__variant_detail::_Trait)1, RPCArg::Optional, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, UniValue>&&>(std::__1::__variant_detail::__move_constructor<std::__1::__variant_detail::__traits<RPCArg::Optional, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, UniValue>, (std::__1::__variant_detail::_Trait)1>, std::__1::__variant_detail::__base<(std::__1::__variant_detail::_Trait)1, RPCArg::Optional, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, UniValue>&, std::__1::__variant_detail::__base<(std::__1::__variant_detail::_Trait)1, RPCArg::Optional, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, UniValue>&&) defined here\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior /opt/homebrew/opt/llvm@18/bin/../include/c++/v1/variant:495:12 \n/Users/prabhatverma/projects/bitcoin/src/rpc/server.h:100:15: runtime error: call to function getblockchaininfo() through pointer to incorrect function type 'RPCHelpMan (*)()'\n(fuzz:arm64+0x1020d8d8c): note: getblockchaininfo() defined here\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior /Users/prabhatverma/projects/bitcoin/src/rpc/server.h:100:15 \n/Users/prabhatverma/projects/bitcoin/src/rpc/server.h:102:15: runtime error: call to function getblockchaininfo() through pointer to incorrect function type 'RPCHelpMan (*)()'\n(fuzz:arm64+0x1020d8d8c): note: getblockchaininfo() defined here\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior /Users/prabhatverma/projects/bitcoin/src/rpc/server.h:102:15 \n/Users/prabhatverma/projects/bitcoin/src/tinyformat.h:544:13: runtime error: call to function void tinyformat::detail::FormatArg::formatImpl<char [13]>(std::__1::basic_ostream<char, std::__1::char_traits<char>>&, char const*, char const*, int, void const*) through pointer to incorrect function type 'void (*)(std::ostream &, const char *, const char *, int, const void *)'\n(fuzz:arm64+0x100b9c7cc): note: void tinyformat::detail::FormatArg::formatImpl<char [13]>(std::__1::basic_ostream<char, std::__1::char_traits<char>>&, char const*, char const*, int, void const*) defined here\nSUMMARY: UndefinedBehaviorSanitizer: undefined-behavior /Users/prabhatverma/projects/bitcoin/src/tinyformat.h:544:13 \nINFO: Running with entropic power schedule (0xFF, 100).\nINFO: Seed: 1461236862\nINFO: Loaded 1 modules   (1257184 inline 8-bit counters): 1257184 [0x107780000, 0x1078b2ee0), \nINFO: Loaded 1 PC tables (1257184 PCs): 1257184 [0x1078b2ee0,0x108be1ce0), \n=================================================================\n==41097==ERROR: AddressSanitizer: container-overflow on address 0x60800002c268 at pc 0x000104784be4 bp 0x00016b6c2710 sp 0x00016b6c2708\nWRITE of size 8 at 0x60800002c268 thread T0\n    #0 0x104784be0 in std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__init_copy_ctor_external(char const*, unsigned long)+0x2b4 (fuzz:arm64+0x100048be0)\n    #1 0x106ed8d2c in fuzzer::ListFilesInDirRecursive(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, long*, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>>*, bool)+0x21c (fuzz:arm64+0x10279cd2c)\n    #2 0x106ed80dc in fuzzer::GetSizedFilesFromDir(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, std::__1::vector<fuzzer::SizedFile, std::__1::allocator<fuzzer::SizedFile>>*)+0x2c (fuzz:arm64+0x10279c0dc)\n    #3 0x106ed3848 in fuzzer::ReadCorpora(std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>> const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>> const&)+0x4c (fuzz:arm64+0x102797848)\n    #4 0x106ed36b0 in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long))+0x1c80 (fuzz:arm64+0x1027976b0)\n    #5 0x106ee7848 in main+0x24 (fuzz:arm64+0x1027ab848)\n    #6 0x18ce70270  (<unknown module>)\n    #7 0x1a2c7ffffffffffc  (<unknown module>)\n\n0x60800002c268 is located 72 bytes inside of 96-byte region [0x60800002c220,0x60800002c280)\nallocated by thread T0 here:\n    #0 0x10a7ececc in _Znwm+0x6c (libclang_rt.asan_osx_dynamic.dylib:arm64+0x60ecc)\n    #1 0x104cad68c in std::__1::__split_buffer<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>&>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>&)+0xf0 (fuzz:arm64+0x10057168c)\n    #2 0x104f26814 in std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>* std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>>::__push_back_slow_path<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&)+0x230 (fuzz:arm64+0x1007ea814)\n    #3 0x106ed8cb8 in fuzzer::ListFilesInDirRecursive(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, long*, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>>*, bool)+0x1a8 (fuzz:arm64+0x10279ccb8)\n    #4 0x106ed80dc in fuzzer::GetSizedFilesFromDir(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> const&, std::__1::vector<fuzzer::SizedFile, std::__1::allocator<fuzzer::SizedFile>>*)+0x2c (fuzz:arm64+0x10279c0dc)\n    #5 0x106ed3848 in fuzzer::ReadCorpora(std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>> const&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>> const&)+0x4c (fuzz:arm64+0x102797848)\n    #6 0x106ed36b0 in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long))+0x1c80 (fuzz:arm64+0x1027976b0)\n    #7 0x106ee7848 in main+0x24 (fuzz:arm64+0x1027ab848)\n    #8 0x18ce70270  (<unknown module>)\n    #9 0x1a2c7ffffffffffc  (<unknown module>)\n\nHINT: if you don't care about these errors you may set ASAN_OPTIONS=detect_container_overflow=0.\nIf you suspect a false positive see also: https://github.com/google/sanitizers/wiki/AddressSanitizerContainerOverflow.\nSUMMARY: AddressSanitizer: container-overflow (fuzz:arm64+0x100048be0) in std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__init_copy_ctor_external(char const*, unsigned long)+0x2b4\nShadow bytes around the buggy address:\n  0x60800002bf80: fa fa fa fa fd fd fd fd fd fd fd fd fd fd fd fd\n  0x60800002c000: fa fa fa fa 00 00 00 00 00 00 00 00 00 00 00 fa\n  0x60800002c080: fa fa fa fa fd fd fd fd fd fd fd fd fd fd fd fd\n  0x60800002c100: fa fa fa fa 00 00 00 00 00 00 00 00 00 00 00 fa\n  0x60800002c180: fa fa fa fa fd fd fd fd fd fd fd fd fd fd fd fd\n=>0x60800002c200: fa fa fa fa 00 00 00 00 00 00 00 00 00[fc]fc fc\n  0x60800002c280: fa fa fa fa 00 00 00 00 00 00 00 00 00 00 00 fa\n  0x60800002c300: fa fa fa fa 00 00 00 00 00 00 00 00 00 00 00 00\n  0x60800002c380: fa fa fa fa 00 00 00 00 00 00 00 00 00 00 00 fa\n  0x60800002c400: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x60800002c480: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n==41097==ABORTING\n[2]    41097 abort      FUZZ=process_message build_fuzz/bin/fuzz \n\n```\n</details>\n\nAlthough not completely sure if this is the right config since runtime errors still appears but the bug is introduced in llvm18 also because of this. \n\nCan reproduce this with llvm16 too using\n```\ncmake --preset=libfuzzer \\                                                                                                 \n    -DCMAKE_C_COMPILER=\"$(brew --prefix llvm@16)/bin/clang\" \\\n    -DCMAKE_CXX_COMPILER=\"$(brew --prefix llvm@16)/bin/clang++\" \\\n    -DCMAKE_EXE_LINKER_FLAGS=\"-fuse-ld=lld\"\n```\n\n\n",
      "user": {
        "login": "Prabhat1308",
        "id": 94048855,
        "node_id": "U_kgDOBZsSVw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94048855?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Prabhat1308",
        "html_url": "https://github.com/Prabhat1308",
        "followers_url": "https://api.github.com/users/Prabhat1308/followers",
        "following_url": "https://api.github.com/users/Prabhat1308/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Prabhat1308/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Prabhat1308/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Prabhat1308/subscriptions",
        "organizations_url": "https://api.github.com/users/Prabhat1308/orgs",
        "repos_url": "https://api.github.com/users/Prabhat1308/repos",
        "events_url": "https://api.github.com/users/Prabhat1308/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Prabhat1308/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/32089#issuecomment-2757479417",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32089"
    },
    {
      "event": "commented",
      "id": 2773231856,
      "node_id": "IC_kwDOABII586lTCjw",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2773231856",
      "actor": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-02T17:18:19Z",
      "updated_at": "2025-04-02T17:18:19Z",
      "author_association": "CONTRIBUTOR",
      "body": "I was able to run the fuzz tests with sanitizers + corpus on macOS 15.4 with the following:\n```console\ncmake -B build -DCMAKE_C_COMPILER=\"clang\" -DCMAKE_CXX_COMPILER=\"clang++\" -DBUILD_FOR_FUZZING=ON -DSANITIZERS=\"undefined,address,fuzzer\"\ncmake --build build -j8\nFUZZ=process_message build/bin/fuzz process-message-corpus\n```\n\nI did get some ubsan errors before it started fuzzing, but then it worked smoothly after that. My `clang` is aliased to brew-installed clang and I didn't need to use `-fuse-ld=lld`.",
      "user": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/32089#issuecomment-2773231856",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32089"
    },
    {
      "event": "commented",
      "id": 2773265571,
      "node_id": "IC_kwDOABII586lTKyj",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2773265571",
      "actor": {
        "login": "Prabhat1308",
        "id": 94048855,
        "node_id": "U_kgDOBZsSVw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94048855?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Prabhat1308",
        "html_url": "https://github.com/Prabhat1308",
        "followers_url": "https://api.github.com/users/Prabhat1308/followers",
        "following_url": "https://api.github.com/users/Prabhat1308/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Prabhat1308/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Prabhat1308/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Prabhat1308/subscriptions",
        "organizations_url": "https://api.github.com/users/Prabhat1308/orgs",
        "repos_url": "https://api.github.com/users/Prabhat1308/repos",
        "events_url": "https://api.github.com/users/Prabhat1308/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Prabhat1308/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-02T17:34:59Z",
      "updated_at": "2025-04-02T17:35:27Z",
      "author_association": "CONTRIBUTOR",
      "body": "> I was able to run the fuzz tests with sanitizers + corpus on macOS 15.4 with the following:\n> \n> cmake -B build -DCMAKE_C_COMPILER=\"clang\" -DCMAKE_CXX_COMPILER=\"clang++\" -DBUILD_FOR_FUZZING=ON -DSANITIZERS=\"undefined,address,fuzzer\"\n> cmake --build build -j8\n> FUZZ=process_message build/bin/fuzz process-message-corpus\n> I did get some ubsan errors before it started fuzzing, but then it worked smoothly after that. My `clang` is aliased to brew-installed clang and I didn't need to use `-fuse-ld=lld`.\n\nI am running on macOS with 15.3.1 and running your command I get linker error while building. Can you share more about your clang versions and other dependencies ?\n",
      "user": {
        "login": "Prabhat1308",
        "id": 94048855,
        "node_id": "U_kgDOBZsSVw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94048855?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Prabhat1308",
        "html_url": "https://github.com/Prabhat1308",
        "followers_url": "https://api.github.com/users/Prabhat1308/followers",
        "following_url": "https://api.github.com/users/Prabhat1308/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Prabhat1308/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Prabhat1308/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Prabhat1308/subscriptions",
        "organizations_url": "https://api.github.com/users/Prabhat1308/orgs",
        "repos_url": "https://api.github.com/users/Prabhat1308/repos",
        "events_url": "https://api.github.com/users/Prabhat1308/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Prabhat1308/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/32089#issuecomment-2773265571",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32089"
    },
    {
      "event": "commented",
      "id": 2773308034,
      "node_id": "IC_kwDOABII586lTVKC",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2773308034",
      "actor": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-02T17:55:12Z",
      "updated_at": "2025-04-02T17:55:12Z",
      "author_association": "CONTRIBUTOR",
      "body": "> I am running on macOS with 15.3.1 and running your command I get linker error while building. Can you share more about your clang versions and other dependencies ?\n\nI'm using clang 18.1.8, what linker errors are you getting?\n\n<details>\n<summary>Output of the `cmake -B build` step </summary>\n<br>\n\n```console\neugenesiegel@Eugenes-MacBook-Air-2 bitcoin % cmake -B build -DCMAKE_C_COMPILER=\"clang\" -DCMAKE_CXX_COMPILER=\"clang++\" -DBUILD_FOR_FUZZING=ON -DSANITIZERS=\"undefined,address,fuzzer\"\nCMake Warning at CMakeLists.txt:216 (message):\n  BUILD_FOR_FUZZING=ON will disable all other targets and force\n  BUILD_FUZZ_BINARY=ON.\n\n\n-- Performing Test CXX_SUPPORTS__FSANITIZE_UNDEFINED_ADDRESS_FUZZER_NO_LINK\n-- Performing Test CXX_SUPPORTS__FSANITIZE_UNDEFINED_ADDRESS_FUZZER_NO_LINK - Success\n-- Performing Test LINKER_SUPPORTS__FSANITIZE_UNDEFINED_ADDRESS_FUZZER_NO_LINK_6231\n-- Performing Test LINKER_SUPPORTS__FSANITIZE_UNDEFINED_ADDRESS_FUZZER_NO_LINK_6231 - Success\n-- Could NOT find Python3 (missing: Python3_EXECUTABLE Interpreter) (Required is at least version \"3.10\")\n    Reason given by package: \n        Interpreter: Wrong version for the interpreter \"/usr/bin/python3\"\n\n-- Could NOT find Doxygen (missing: DOXYGEN_EXECUTABLE dot) \n\nConfiguring secp256k1 subtree...\n-- Could NOT find Valgrind (missing: Valgrind_INCLUDE_DIR Valgrind_WORKS) \n\n\nsecp256k1 configure summary\n===========================\nBuild artifacts:\n  library type ........................ Static\nOptional modules:\n  ECDH ................................ OFF\n  ECDSA pubkey recovery ............... ON\n  extrakeys ........................... ON\n  schnorrsig .......................... ON\n  musig ............................... OFF\n  ElligatorSwift ...................... ON\nParameters:\n  ecmult window size .................. 15\n  ecmult gen table size ............... 86 KiB\nOptional features:\n  assembly ............................ OFF\n  external callbacks .................. OFF\nOptional binaries:\n  benchmark ........................... OFF\n  noverify_tests ...................... OFF\n  tests ............................... OFF\n  exhaustive tests .................... OFF\n  ctime_tests ......................... OFF\n  examples ............................ OFF\n\nCross compiling ....................... FALSE\nValgrind .............................. OFF\nPreprocessor defined macros ........... ENABLE_MODULE_ELLSWIFT=1 ENABLE_MODULE_SCHNORRSIG=1 ENABLE_MODULE_EXTRAKEYS=1 ENABLE_MODULE_RECOVERY=1 ECMULT_WINDOW_SIZE=15 COMB_BLOCKS=43 COMB_TEETH=6\nC compiler ............................ Clang 18.1.8, /opt/homebrew/Cellar/llvm@18/18.1.8/bin/clang\nCFLAGS ................................ \nCompile options ....................... -pedantic -Wall -Wcast-align -Wconditional-uninitialized -Wextra -Wnested-externs -Wno-long-long -Wno-overlength-strings -Wno-unused-function -Wreserved-identifier -Wshadow -Wstrict-prototypes -Wundef\nBuild type:\n - CMAKE_BUILD_TYPE ................... RelWithDebInfo\n - CFLAGS ............................. -O2 -g \n - LDFLAGS for executables ............ \n - LDFLAGS for shared libraries ....... \nSECP256K1_APPEND_CFLAGS ............... -fsanitize=undefined,address,fuzzer-no-link\nSECP256K1_APPEND_LDFLAGS .............. -fsanitize=undefined,address,fuzzer-no-link\n\n\n\nConfigure summary\n=================\nExecutables:\n  bitcoind ............................ OFF\n  bitcoin-node (multiprocess) ......... OFF\n  bitcoin-qt (GUI) .................... OFF\n  bitcoin-gui (GUI, multiprocess) ..... OFF\n  bitcoin-cli ......................... OFF\n  bitcoin-tx .......................... OFF\n  bitcoin-util ........................ OFF\n  bitcoin-wallet ...................... OFF\n  bitcoin-chainstate (experimental) ... OFF\n  libbitcoinkernel (experimental) ..... OFF\nOptional features:\n  wallet support ...................... ON\n   - legacy wallets (Berkeley DB) ..... OFF\n  external signer ..................... OFF\n  ZeroMQ .............................. OFF\n  USDT tracing ........................ OFF\n  QR code (GUI) ....................... OFF\n  DBus (GUI, Linux only) .............. OFF\nTests:\n  test_bitcoin ........................ OFF\n  test_bitcoin-qt ..................... OFF\n  bench_bitcoin ....................... OFF\n  fuzz binary ......................... ON\n\nCross compiling ....................... FALSE\nC++ compiler .......................... Clang 18.1.8, /opt/homebrew/Cellar/llvm@18/18.1.8/bin/clang++\nCMAKE_BUILD_TYPE ...................... RelWithDebInfo\nPreprocessor defined macros ........... FUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION OBJC_OLD_DISPATCH_PROTOTYPES=0\nC++ compiler flags .................... -O2 -g -std=c++20 -fPIC -fdebug-prefix-map=/Users/eugenesiegel/btc/bitcoin/src=. -fmacro-prefix-map=/Users/eugenesiegel/btc/bitcoin/src=. -fsanitize=undefined,address,fuzzer-no-link -Wall -Wextra -Wgnu -Wformat -Wformat-security -Wvla -Wshadow-field -Wthread-safety -Wloop-analysis -Wredundant-decls -Wunused-member-function -Wdate-time -Wconditional-uninitialized -Woverloaded-virtual -Wsuggest-override -Wimplicit-fallthrough -Wunreachable-code -Wdocumentation -Wself-assign -Wundef -Wno-unused-parameter -U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=3 -Wstack-protector -fstack-protector-all -mbranch-protection=bti\nLinker flags .......................... -O2 -g -Wl,-dead_strip -Wl,-dead_strip_dylibs -Wl,-headerpad_max_install_names -fsanitize=undefined,address,fuzzer-no-link -fstack-protector-all -Wl,-fixup_chains -fPIE -Xlinker -pie\n\nNOTE: The summary above may not exactly match the final applied build flags\n      if any additional CMAKE_* or environment variables have been modified.\n      To see the exact flags applied, build with the --verbose option.\n\nAttempt to harden executables ......... ON\nTreat compiler warnings as errors ..... OFF\nUse ccache for compiling .............. OFF\n\n\n  ******\n\nCMake Warning at CMakeLists.txt:702 (message):\n  Minimum required Python not found.  Utils and rpcauth tests are disabled.\n\n\n  ******\n\n-- Configuring done (0.6s)\n-- Generating done (0.1s)\n-- Build files have been written to: /Users/eugenesiegel/btc/bitcoin/build\n```\n\n</details>",
      "user": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/32089#issuecomment-2773308034",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32089"
    },
    {
      "event": "commented",
      "id": 2773325328,
      "node_id": "IC_kwDOABII586lTZYQ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2773325328",
      "actor": {
        "login": "Prabhat1308",
        "id": 94048855,
        "node_id": "U_kgDOBZsSVw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94048855?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Prabhat1308",
        "html_url": "https://github.com/Prabhat1308",
        "followers_url": "https://api.github.com/users/Prabhat1308/followers",
        "following_url": "https://api.github.com/users/Prabhat1308/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Prabhat1308/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Prabhat1308/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Prabhat1308/subscriptions",
        "organizations_url": "https://api.github.com/users/Prabhat1308/orgs",
        "repos_url": "https://api.github.com/users/Prabhat1308/repos",
        "events_url": "https://api.github.com/users/Prabhat1308/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Prabhat1308/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-02T18:02:25Z",
      "updated_at": "2025-04-02T18:02:25Z",
      "author_association": "CONTRIBUTOR",
      "body": "> > I am running on macOS with 15.3.1 and running your command I get linker error while building. Can you share more about your clang versions and other dependencies ?\n> \n> I'm using clang 18.1.8, what linker errors are you getting?\n> \n> Output of the `cmake -B build` step\n\nThe error is when I run `cmake --build build -j$(sysctl -n hw.ncpu)`\n\n<details>\n<summary>Output</summary>\n\n```\n[  0%] Building CXX object src/crypto/CMakeFiles/bitcoin_crypto.dir/aes.cpp.o\n...\n...\n...\n[100%] Linking CXX executable ../../../bin/fuzz\nld: warning: ignoring duplicate libraries: '-lc++', '../../../lib/libbitcoin_common.a', '../../../lib/libbitcoin_util.a', '../../libleveldb.a', '../../libminisketch.a', '../../secp256k1/lib/libsecp256k1.a', '../../univalue/libunivalue.a'\nld: multiple errors: invalid r_symbolnum=1 in '/Users/prabhatverma/projects/bitcoin/build/src/test/fuzz/CMakeFiles/fuzz.dir/overflow.cpp.o'; invalid r_symbolnum=1 in '../../../lib/libbitcoin_cli.a[2](stdin.cpp.o)'; invalid r_symbolnum=1 in '../../libcrc32c.a[4](crc32c_arm64.cc.o)'; invalid r_symbolnum=1 in '../../libcrc32c.a[3](crc32c_portable.cc.o)'; invalid r_symbolnum=1 in '../../libcrc32c.a[2](crc32c.cc.o)'; invalid r_symbolnum=1 in '../../../lib/libbitcoin_consensus.a[11](script_error.cpp.o)'; invalid r_symbolnum=18 in '../../../lib/libbitcoin_crypto.a[19](sha256_arm_shani.cpp.o)'; invalid r_symbolnum=1 in '../../../lib/libbitcoin_crypto.a[15](sha3.cpp.o)'; invalid r_symbolnum=1 in '../../libleveldb.a[37](logging.cc.o)'; invalid r_symbolnum=1 in '../../libleveldb.a[35](hash.cc.o)'; invalid r_symbolnum=1 in '../../../lib/libbitcoin_crypto.a[10](poly1305.cpp.o)'; invalid r_symbolnum=1 in '../../../lib/libbitcoin_crypto.a[5](hex_base.cpp.o)'; invalid r_symbolnum=1 in '../../../lib/libbitcoin_util.a[29](randomenv.cpp.o)'; invalid r_symbolnum=1 in '../../../lib/libtest_util.a[13](str.cpp.o)'; invalid r_symbolnum=1 in '../../libleveldb.a[31](crc32c.cc.o)'; invalid r_symbolnum=1 in '../../libleveldb.a[27](bloom.cc.o)'; invalid r_symbolnum=1 in '../../../lib/libbitcoin_consensus.a[5](hash.cpp.o)'; invalid r_symbolnum=1 in '../../../lib/libbitcoin_util.a[27](logging.cpp.o)'; invalid r_symbolnum=1 in '../../../lib/libbitcoin_util.a[24](threadnames.cpp.o)'; invalid r_symbolnum=1 in '../../libleveldb.a[8](filename.cc.o)'; invalid r_symbolnum=1 in '../../../lib/libtest_util.a[5](index.cpp.o)'; invalid r_symbolnum=1 in '../../../lib/libbitcoin_util.a[16](serfloat.cpp.o)'; invalid r_symbolnum=1 in '../../../lib/libtest_util.a[3](coins.cpp.o)'; invalid r_symbolnum=1 in '../../../lib/libbitcoin_util.a[15](readwritefile.cpp.o)'; invalid r_symbolnum=1 in '../../../lib/libbitcoin_util.a[14](rbf.cpp.o)'; invalid r_symbolnum=1 in '../../../lib/libbitcoin_common.a[48](parsing.cpp.o)'; invalid r_symbolnum=1 in '../../../lib/libbitcoin_util.a[9](feefrac.cpp.o)'; invalid r_symbolnum=1 in '../../libleveldb.a[2](builder.cc.o)'; invalid r_symbolnum=1 in '../../../lib/libbitcoin_util.a[6](chaintype.cpp.o)'; invalid r_symbolnum=1 in '../../../lib/libbitcoin_common.a[43](request.cpp.o)'; invalid r_symbolnum=1 in '../../../lib/libbitcoin_common.a[39](pow.cpp.o)'; invalid r_symbolnum=1 in '../../../lib/libbitcoin_node.a[85](torcontrol.cpp.o)'; invalid r_symbolnum=1 in '../../../lib/libbitcoin_common.a[31](merkleblock.cpp.o)'; invalid r_symbolnum=1 in '../../../lib/libbitcoin_common.a[25](deploymentinfo.cpp.o)'; invalid r_symbolnum=1 in '../../../lib/libbitcoin_common.a[22](compressor.cpp.o)'; invalid r_symbolnum=1 in '../../../lib/libbitcoin_common.a[21](url.cpp.o)'; invalid r_symbolnum=1 in '../../../lib/libbitcoin_common.a[17](run_command.cpp.o)'; invalid r_symbolnum=1 in '../../../lib/libbitcoin_node.a[64](fees_args.cpp.o)'; invalid r_symbolnum=1 in '../../../lib/libbitcoin_node.a[53](peerman_args.cpp.o)'; invalid r_symbolnum=1 in '../../../lib/libbitcoin_node.a[50](miner.cpp.o)'; invalid r_symbolnum=1 in '../../../lib/libbitcoin_node.a[49](mempool_persist_args.cpp.o)'; invalid r_symbolnum=1 in '../../../lib/libbitcoin_node.a[42](database_args.cpp.o)'; invalid r_symbolnum=1 in '../../../lib/libbitcoin_node.a[40](connection_types.cpp.o)'; invalid r_symbolnum=1 in '../../../lib/libbitcoin_node.a[39](coins_view_args.cpp.o)'; invalid r_symbolnum=1 in '../../../lib/libbitcoin_node.a[38](coin.cpp.o)'; invalid r_symbolnum=1 in '../../../lib/libbitcoin_node.a[37](chainstatemanager_args.cpp.o)'; invalid r_symbolnum=1 in '../../../lib/libbitcoin_node.a[35](caches.cpp.o)'; invalid r_symbolnum=1 in '../../../lib/libbitcoin_node.a[33](blockmanager_args.cpp.o)'; invalid r_symbolnum=3 in '../../../lib/libbitcoin_node.a[30](net_processing.cpp.o)'; invalid r_symbolnum=1 in '../../../lib/libbitcoin_node.a[27](mempool_removal_reason.cpp.o)'; invalid r_symbolnum=1 in '../../../lib/libbitcoin_node.a[22](checks.cpp.o)'; invalid r_symbolnum=1 in '../../../lib/libbitcoin_node.a[21](chain.cpp.o)'\nclang++: error: linker command failed with exit code 1 (use -v to see invocation)\nmake[2]: *** [bin/fuzz] Error 1\nmake[1]: *** [src/test/fuzz/CMakeFiles/fuzz.dir/all] Error 2\nmake: *** [all] Error 2\n```\n</details>",
      "user": {
        "login": "Prabhat1308",
        "id": 94048855,
        "node_id": "U_kgDOBZsSVw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94048855?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Prabhat1308",
        "html_url": "https://github.com/Prabhat1308",
        "followers_url": "https://api.github.com/users/Prabhat1308/followers",
        "following_url": "https://api.github.com/users/Prabhat1308/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Prabhat1308/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Prabhat1308/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Prabhat1308/subscriptions",
        "organizations_url": "https://api.github.com/users/Prabhat1308/orgs",
        "repos_url": "https://api.github.com/users/Prabhat1308/repos",
        "events_url": "https://api.github.com/users/Prabhat1308/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Prabhat1308/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/32089#issuecomment-2773325328",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32089"
    },
    {
      "event": "commented",
      "id": 2775798921,
      "node_id": "IC_kwDOABII586lc1SJ",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2775798921",
      "actor": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-03T13:29:49Z",
      "updated_at": "2025-04-03T13:29:49Z",
      "author_association": "CONTRIBUTOR",
      "body": "What version of `ld` are you using?",
      "user": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/32089#issuecomment-2775798921",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32089"
    },
    {
      "event": "commented",
      "id": 2776108518,
      "node_id": "IC_kwDOABII586leA3m",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2776108518",
      "actor": {
        "login": "Prabhat1308",
        "id": 94048855,
        "node_id": "U_kgDOBZsSVw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94048855?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Prabhat1308",
        "html_url": "https://github.com/Prabhat1308",
        "followers_url": "https://api.github.com/users/Prabhat1308/followers",
        "following_url": "https://api.github.com/users/Prabhat1308/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Prabhat1308/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Prabhat1308/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Prabhat1308/subscriptions",
        "organizations_url": "https://api.github.com/users/Prabhat1308/orgs",
        "repos_url": "https://api.github.com/users/Prabhat1308/repos",
        "events_url": "https://api.github.com/users/Prabhat1308/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Prabhat1308/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-03T15:08:04Z",
      "updated_at": "2025-04-03T15:08:04Z",
      "author_association": "CONTRIBUTOR",
      "body": "> What version of `ld` are you using?\n\n16.0.0",
      "user": {
        "login": "Prabhat1308",
        "id": 94048855,
        "node_id": "U_kgDOBZsSVw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94048855?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Prabhat1308",
        "html_url": "https://github.com/Prabhat1308",
        "followers_url": "https://api.github.com/users/Prabhat1308/followers",
        "following_url": "https://api.github.com/users/Prabhat1308/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Prabhat1308/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Prabhat1308/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Prabhat1308/subscriptions",
        "organizations_url": "https://api.github.com/users/Prabhat1308/orgs",
        "repos_url": "https://api.github.com/users/Prabhat1308/repos",
        "events_url": "https://api.github.com/users/Prabhat1308/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Prabhat1308/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/32089#issuecomment-2776108518",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32089"
    },
    {
      "event": "commented",
      "id": 2776227923,
      "node_id": "IC_kwDOABII586leeBT",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2776227923",
      "actor": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-03T15:43:07Z",
      "updated_at": "2025-04-03T15:43:07Z",
      "author_association": "CONTRIBUTOR",
      "body": "> 16.0.0\n\nThis matches my `ld` -- can you share the output of the configure step when running the above command?",
      "user": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/32089#issuecomment-2776227923",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32089"
    },
    {
      "event": "commented",
      "id": 2776245517,
      "node_id": "IC_kwDOABII586leiUN",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2776245517",
      "actor": {
        "login": "Prabhat1308",
        "id": 94048855,
        "node_id": "U_kgDOBZsSVw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94048855?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Prabhat1308",
        "html_url": "https://github.com/Prabhat1308",
        "followers_url": "https://api.github.com/users/Prabhat1308/followers",
        "following_url": "https://api.github.com/users/Prabhat1308/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Prabhat1308/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Prabhat1308/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Prabhat1308/subscriptions",
        "organizations_url": "https://api.github.com/users/Prabhat1308/orgs",
        "repos_url": "https://api.github.com/users/Prabhat1308/repos",
        "events_url": "https://api.github.com/users/Prabhat1308/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Prabhat1308/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-03T15:49:27Z",
      "updated_at": "2025-04-03T15:49:27Z",
      "author_association": "CONTRIBUTOR",
      "body": "Running\n```\ncmake -B build -DCMAKE_C_COMPILER=\"clang\" -DCMAKE_CXX_COMPILER=\"clang++\" -DBUILD_FOR_FUZZING=ON -DSANITIZERS=\"undefined,address,fuzzer\"\n```\n\n<details>\n<summary>Output</summary>\n\n```\n\n-- The CXX compiler identification is Clang 19.1.7\n-- Detecting CXX compiler ABI info\n-- Detecting CXX compiler ABI info - done\n-- Check for working CXX compiler: /opt/homebrew/opt/llvm/bin/clang++ - skipped\n-- Detecting CXX compile features\n-- Detecting CXX compile features - done\n-- Setting build type to \"RelWithDebInfo\" as none was specified\n-- Performing Test CXX_SUPPORTS__WERROR\n-- Performing Test CXX_SUPPORTS__WERROR - Success\n-- Performing Test CXX_SUPPORTS__G3\n-- Performing Test CXX_SUPPORTS__G3 - Success\n-- Performing Test LINKER_SUPPORTS__G3\n-- Performing Test LINKER_SUPPORTS__G3 - Success\n-- Performing Test CXX_SUPPORTS__FTRAPV\n-- Performing Test CXX_SUPPORTS__FTRAPV - Success\n-- Performing Test LINKER_SUPPORTS__FTRAPV\n-- Performing Test LINKER_SUPPORTS__FTRAPV - Success\n-- Found SQLite3: /Library/Developer/CommandLineTools/SDKs/MacOSX15.2.sdk/usr/include (found suitable version \"3.43.2\", minimum required is \"3.7.17\")\nCMake Warning at CMakeLists.txt:216 (message):\n  BUILD_FOR_FUZZING=ON will disable all other targets and force\n  BUILD_FUZZ_BINARY=ON.\n\n\n-- Performing Test LINKER_SUPPORTS__WL__FATAL_WARNINGS\n-- Performing Test LINKER_SUPPORTS__WL__FATAL_WARNINGS - Success\n-- Performing Test LINKER_SUPPORTS__WL__DEAD_STRIP\n-- Performing Test LINKER_SUPPORTS__WL__DEAD_STRIP - Success\n-- Performing Test LINKER_SUPPORTS__WL__DEAD_STRIP_DYLIBS\n-- Performing Test LINKER_SUPPORTS__WL__DEAD_STRIP_DYLIBS - Success\n-- Performing Test LINKER_SUPPORTS__WL__HEADERPAD_MAX_INSTALL_NAMES\n-- Performing Test LINKER_SUPPORTS__WL__HEADERPAD_MAX_INSTALL_NAMES - Success\n-- Performing Test CMAKE_HAVE_LIBC_PTHREAD\n-- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Success\n-- Found Threads: TRUE\n-- Performing Test CXX_SUPPORTS__FSANITIZE_UNDEFINED_ADDRESS_FUZZER_NO_LINK\n-- Performing Test CXX_SUPPORTS__FSANITIZE_UNDEFINED_ADDRESS_FUZZER_NO_LINK - Success\n-- Performing Test LINKER_SUPPORTS__FSANITIZE_UNDEFINED_ADDRESS_FUZZER_NO_LINK_6231\n-- Performing Test LINKER_SUPPORTS__FSANITIZE_UNDEFINED_ADDRESS_FUZZER_NO_LINK_6231 - Success\n-- Performing Test FUZZ_BINARY_LINKS_WITHOUT_MAIN_FUNCTION\n-- Performing Test FUZZ_BINARY_LINKS_WITHOUT_MAIN_FUNCTION - Success\n-- Found Boost: /opt/homebrew/include (found suitable version \"1.87.0\", minimum required is \"1.73.0\")\n-- Performing Test NO_DIAGNOSTICS_BOOST_NO_CXX98_FUNCTION_BASE\n-- Performing Test NO_DIAGNOSTICS_BOOST_NO_CXX98_FUNCTION_BASE - Failed\n-- Found PkgConfig: /opt/homebrew/bin/pkg-config (found version \"2.3.0\")\n-- Found Libevent: /opt/homebrew/Cellar/libevent/2.1.12_1/lib (found suitable version \"2.1.12-stable\", minimum required is \"2.1.8\")\n-- Performing Test HAVE_EVHTTP_CONNECTION_GET_PEER_CONST_CHAR\n-- Performing Test HAVE_EVHTTP_CONNECTION_GET_PEER_CONST_CHAR - Failed\n-- Looking for C++ include sys/prctl.h\n-- Looking for C++ include sys/prctl.h - not found\n-- Looking for C++ include sys/resources.h\n-- Looking for C++ include sys/resources.h - not found\n-- Looking for C++ include sys/vmmeter.h\n-- Looking for C++ include sys/vmmeter.h - found\n-- Looking for C++ include vm/vm_param.h\n-- Looking for C++ include vm/vm_param.h - not found\n-- Looking for O_CLOEXEC\n-- Looking for O_CLOEXEC - found\n-- Looking for fdatasync\n-- Looking for fdatasync - not found\n-- Looking for fork\n-- Looking for fork - found\n-- Looking for pipe2\n-- Looking for pipe2 - not found\n-- Looking for setsid\n-- Looking for setsid - found\n-- Looking for C++ include sys/types.h\n-- Looking for C++ include sys/types.h - found\n-- Looking for C++ include ifaddrs.h\n-- Looking for C++ include ifaddrs.h - found\n-- Performing Test IFADDR_LINKS_WITHOUT_LIBSOCKET\n-- Performing Test IFADDR_LINKS_WITHOUT_LIBSOCKET - Success\n-- Performing Test STD_ATOMIC_LINKS_WITHOUT_LIBATOMIC\n-- Performing Test STD_ATOMIC_LINKS_WITHOUT_LIBATOMIC - Success\n-- Looking for std::system\n-- Looking for std::system - found\n-- Looking for ::_wsystem\n-- Looking for ::_wsystem - not found\n-- Performing Test STRERROR_R_CHAR_P\n-- Performing Test STRERROR_R_CHAR_P - Failed\n-- Looking for malloc_info\n-- Looking for malloc_info - not found\n-- Performing Test HAVE_MALLOPT_ARENA_MAX\n-- Performing Test HAVE_MALLOPT_ARENA_MAX - Failed\n-- Performing Test HAVE_POSIX_FALLOCATE\n-- Performing Test HAVE_POSIX_FALLOCATE - Failed\n-- Performing Test HAVE_STRONG_GETAUXVAL\n-- Performing Test HAVE_STRONG_GETAUXVAL - Failed\n-- Performing Test HAVE_SOCKADDR_UN\n-- Performing Test HAVE_SOCKADDR_UN - Success\n-- Performing Test HAVE_GETRANDOM\n-- Performing Test HAVE_GETRANDOM - Failed\n-- Performing Test HAVE_GETENTROPY_RAND\n-- Performing Test HAVE_GETENTROPY_RAND - Success\n-- Performing Test HAVE_SYSCTL\n-- Performing Test HAVE_SYSCTL - Success\n-- Performing Test HAVE_SYSCTL_ARND\n-- Performing Test HAVE_SYSCTL_ARND - Failed\n-- Performing Test HAVE_SSE41\n-- Performing Test HAVE_SSE41 - Failed\n-- Performing Test HAVE_AVX2\n-- Performing Test HAVE_AVX2 - Failed\n-- Performing Test HAVE_X86_SHANI\n-- Performing Test HAVE_X86_SHANI - Failed\n-- Performing Test HAVE_ARM_SHANI\n-- Performing Test HAVE_ARM_SHANI - Success\n-- Performing Test CXX_SUPPORTS__WALL\n-- Performing Test CXX_SUPPORTS__WALL - Success\n-- Performing Test CXX_SUPPORTS__WEXTRA\n-- Performing Test CXX_SUPPORTS__WEXTRA - Success\n-- Performing Test CXX_SUPPORTS__WGNU\n-- Performing Test CXX_SUPPORTS__WGNU - Success\n-- Performing Test CXX_SUPPORTS__WFORMAT__WFORMAT_SECURITY\n-- Performing Test CXX_SUPPORTS__WFORMAT__WFORMAT_SECURITY - Success\n-- Performing Test CXX_SUPPORTS__WVLA\n-- Performing Test CXX_SUPPORTS__WVLA - Success\n-- Performing Test CXX_SUPPORTS__WSHADOW_FIELD\n-- Performing Test CXX_SUPPORTS__WSHADOW_FIELD - Success\n-- Performing Test CXX_SUPPORTS__WTHREAD_SAFETY\n-- Performing Test CXX_SUPPORTS__WTHREAD_SAFETY - Success\n-- Performing Test CXX_SUPPORTS__WLOOP_ANALYSIS\n-- Performing Test CXX_SUPPORTS__WLOOP_ANALYSIS - Success\n-- Performing Test CXX_SUPPORTS__WREDUNDANT_DECLS\n-- Performing Test CXX_SUPPORTS__WREDUNDANT_DECLS - Success\n-- Performing Test CXX_SUPPORTS__WUNUSED_MEMBER_FUNCTION\n-- Performing Test CXX_SUPPORTS__WUNUSED_MEMBER_FUNCTION - Success\n-- Performing Test CXX_SUPPORTS__WDATE_TIME\n-- Performing Test CXX_SUPPORTS__WDATE_TIME - Success\n-- Performing Test CXX_SUPPORTS__WCONDITIONAL_UNINITIALIZED\n-- Performing Test CXX_SUPPORTS__WCONDITIONAL_UNINITIALIZED - Success\n-- Performing Test CXX_SUPPORTS__WDUPLICATED_BRANCHES\n-- Performing Test CXX_SUPPORTS__WDUPLICATED_BRANCHES - Failed\n-- Performing Test CXX_SUPPORTS__WDUPLICATED_COND\n-- Performing Test CXX_SUPPORTS__WDUPLICATED_COND - Failed\n-- Performing Test CXX_SUPPORTS__WLOGICAL_OP\n-- Performing Test CXX_SUPPORTS__WLOGICAL_OP - Failed\n-- Performing Test CXX_SUPPORTS__WOVERLOADED_VIRTUAL\n-- Performing Test CXX_SUPPORTS__WOVERLOADED_VIRTUAL - Success\n-- Performing Test CXX_SUPPORTS__WSUGGEST_OVERRIDE\n-- Performing Test CXX_SUPPORTS__WSUGGEST_OVERRIDE - Success\n-- Performing Test CXX_SUPPORTS__WIMPLICIT_FALLTHROUGH\n-- Performing Test CXX_SUPPORTS__WIMPLICIT_FALLTHROUGH - Success\n-- Performing Test CXX_SUPPORTS__WUNREACHABLE_CODE\n-- Performing Test CXX_SUPPORTS__WUNREACHABLE_CODE - Success\n-- Performing Test CXX_SUPPORTS__WDOCUMENTATION\n-- Performing Test CXX_SUPPORTS__WDOCUMENTATION - Success\n-- Performing Test CXX_SUPPORTS__WSELF_ASSIGN\n-- Performing Test CXX_SUPPORTS__WSELF_ASSIGN - Success\n-- Performing Test CXX_SUPPORTS__WBIDI_CHARS_ANY\n-- Performing Test CXX_SUPPORTS__WBIDI_CHARS_ANY - Failed\n-- Performing Test CXX_SUPPORTS__WUNDEF\n-- Performing Test CXX_SUPPORTS__WUNDEF - Success\n-- Performing Test CXX_SUPPORTS__WUNUSED_PARAMETER\n-- Performing Test CXX_SUPPORTS__WUNUSED_PARAMETER - Success\n-- Performing Test CXX_SUPPORTS__FNO_EXTENDED_IDENTIFIERS\n-- Performing Test CXX_SUPPORTS__FNO_EXTENDED_IDENTIFIERS - Failed\n-- Performing Test CXX_SUPPORTS__FDEBUG_PREFIX_MAP_A_B\n-- Performing Test CXX_SUPPORTS__FDEBUG_PREFIX_MAP_A_B - Success\n-- Performing Test CXX_SUPPORTS__FMACRO_PREFIX_MAP_A_B\n-- Performing Test CXX_SUPPORTS__FMACRO_PREFIX_MAP_A_B - Success\n-- Performing Test CXX_SUPPORTS__FSTACK_REUSE_NONE\n-- Performing Test CXX_SUPPORTS__FSTACK_REUSE_NONE - Failed\n-- Performing Test CXX_SUPPORTS__U_FORTIFY_SOURCE__D_FORTIFY_SOURCE_3_cc10\n-- Performing Test CXX_SUPPORTS__U_FORTIFY_SOURCE__D_FORTIFY_SOURCE_3_cc10 - Success\n-- Performing Test LINKER_SUPPORTS__U_FORTIFY_SOURCE__D_FORTIFY_SOURCE_3_cc10\n-- Performing Test LINKER_SUPPORTS__U_FORTIFY_SOURCE__D_FORTIFY_SOURCE_3_cc10 - Success\n-- Performing Test CXX_SUPPORTS__WSTACK_PROTECTOR\n-- Performing Test CXX_SUPPORTS__WSTACK_PROTECTOR - Success\n-- Performing Test CXX_SUPPORTS__FSTACK_PROTECTOR_ALL\n-- Performing Test CXX_SUPPORTS__FSTACK_PROTECTOR_ALL - Success\n-- Performing Test LINKER_SUPPORTS__FSTACK_PROTECTOR_ALL\n-- Performing Test LINKER_SUPPORTS__FSTACK_PROTECTOR_ALL - Success\n-- Performing Test CXX_SUPPORTS__FCF_PROTECTION_FULL\n-- Performing Test CXX_SUPPORTS__FCF_PROTECTION_FULL - Failed\n-- Performing Test CXX_SUPPORTS__FSTACK_CLASH_PROTECTION\n-- Performing Test CXX_SUPPORTS__FSTACK_CLASH_PROTECTION - Failed\n-- Performing Test CXX_SUPPORTS__MBRANCH_PROTECTION_BTI\n-- Performing Test CXX_SUPPORTS__MBRANCH_PROTECTION_BTI - Success\n-- Performing Test LINKER_SUPPORTS__WL___ENABLE_RELOC_SECTION\n-- Performing Test LINKER_SUPPORTS__WL___ENABLE_RELOC_SECTION - Failed\n-- Performing Test LINKER_SUPPORTS__WL___DYNAMICBASE\n-- Performing Test LINKER_SUPPORTS__WL___DYNAMICBASE - Failed\n-- Performing Test LINKER_SUPPORTS__WL___NXCOMPAT\n-- Performing Test LINKER_SUPPORTS__WL___NXCOMPAT - Failed\n-- Performing Test LINKER_SUPPORTS__WL___HIGH_ENTROPY_VA\n-- Performing Test LINKER_SUPPORTS__WL___HIGH_ENTROPY_VA - Failed\n-- Performing Test LINKER_SUPPORTS__WL__Z_RELRO\n-- Performing Test LINKER_SUPPORTS__WL__Z_RELRO - Failed\n-- Performing Test LINKER_SUPPORTS__WL__Z_NOW\n-- Performing Test LINKER_SUPPORTS__WL__Z_NOW - Failed\n-- Performing Test LINKER_SUPPORTS__WL__Z_SEPARATE_CODE\n-- Performing Test LINKER_SUPPORTS__WL__Z_SEPARATE_CODE - Failed\n-- Performing Test LINKER_SUPPORTS__WL__FIXUP_CHAINS\n-- Performing Test LINKER_SUPPORTS__WL__FIXUP_CHAINS - Success\n-- Found Python3: /opt/homebrew/bin/python3 (found suitable version \"3.13.2\", minimum required is \"3.10\") found components: Interpreter\n-- Could NOT find Doxygen (missing: DOXYGEN_EXECUTABLE) \n-- Performing Test HAVE_BUILTIN_PREFETCH\n-- Performing Test HAVE_BUILTIN_PREFETCH - Success\n-- Performing Test HAVE_MM_PREFETCH\n-- Performing Test HAVE_MM_PREFETCH - Failed\n-- Performing Test HAVE_SSE42\n-- Performing Test HAVE_SSE42 - Failed\n-- Performing Test HAVE_ARM64_CRC32C\n-- Performing Test HAVE_ARM64_CRC32C - Success\n-- Looking for F_FULLFSYNC\n-- Looking for F_FULLFSYNC - found\n-- Performing Test HAVE_CLMUL\n-- Performing Test HAVE_CLMUL - Failed\n\nConfiguring secp256k1 subtree...\n-- The C compiler identification is Clang 19.1.7\n-- Detecting C compiler ABI info\n-- Detecting C compiler ABI info - done\n-- Check for working C compiler: /opt/homebrew/opt/llvm/bin/clang - skipped\n-- Detecting C compile features\n-- Detecting C compile features - done\n-- Performing Test HAVE_X86_64_ASM\n-- Performing Test HAVE_X86_64_ASM - Failed\n-- Could NOT find Valgrind (missing: Valgrind_INCLUDE_DIR Valgrind_WORKS) \n-- Performing Test C_SUPPORTS__PEDANTIC\n-- Performing Test C_SUPPORTS__PEDANTIC - Success\n-- Performing Test C_SUPPORTS__WALL\n-- Performing Test C_SUPPORTS__WALL - Success\n-- Performing Test C_SUPPORTS__WCAST_ALIGN\n-- Performing Test C_SUPPORTS__WCAST_ALIGN - Success\n-- Performing Test C_SUPPORTS__WCAST_ALIGN_STRICT\n-- Performing Test C_SUPPORTS__WCAST_ALIGN_STRICT - Failed\n-- Performing Test C_SUPPORTS__WCONDITIONAL_UNINITIALIZED\n-- Performing Test C_SUPPORTS__WCONDITIONAL_UNINITIALIZED - Success\n-- Performing Test C_SUPPORTS__WEXTRA\n-- Performing Test C_SUPPORTS__WEXTRA - Success\n-- Performing Test C_SUPPORTS__WNESTED_EXTERNS\n-- Performing Test C_SUPPORTS__WNESTED_EXTERNS - Success\n-- Performing Test C_SUPPORTS__WNO_LONG_LONG\n-- Performing Test C_SUPPORTS__WNO_LONG_LONG - Success\n-- Performing Test C_SUPPORTS__WNO_OVERLENGTH_STRINGS\n-- Performing Test C_SUPPORTS__WNO_OVERLENGTH_STRINGS - Success\n-- Performing Test C_SUPPORTS__WNO_UNUSED_FUNCTION\n-- Performing Test C_SUPPORTS__WNO_UNUSED_FUNCTION - Success\n-- Performing Test C_SUPPORTS__WRESERVED_IDENTIFIER\n-- Performing Test C_SUPPORTS__WRESERVED_IDENTIFIER - Success\n-- Performing Test C_SUPPORTS__WSHADOW\n-- Performing Test C_SUPPORTS__WSHADOW - Success\n-- Performing Test C_SUPPORTS__WSTRICT_PROTOTYPES\n-- Performing Test C_SUPPORTS__WSTRICT_PROTOTYPES - Success\n-- Performing Test C_SUPPORTS__WUNDEF\n-- Performing Test C_SUPPORTS__WUNDEF - Success\n\n\nsecp256k1 configure summary\n===========================\nBuild artifacts:\n  library type ........................ Static\nOptional modules:\n  ECDH ................................ OFF\n  ECDSA pubkey recovery ............... ON\n  extrakeys ........................... ON\n  schnorrsig .......................... ON\n  musig ............................... OFF\n  ElligatorSwift ...................... ON\nParameters:\n  ecmult window size .................. 15\n  ecmult gen table size ............... 86 KiB\nOptional features:\n  assembly ............................ OFF\n  external callbacks .................. OFF\nOptional binaries:\n  benchmark ........................... OFF\n  noverify_tests ...................... OFF\n  tests ............................... OFF\n  exhaustive tests .................... OFF\n  ctime_tests ......................... OFF\n  examples ............................ OFF\n\nCross compiling ....................... FALSE\nValgrind .............................. OFF\nPreprocessor defined macros ........... ENABLE_MODULE_ELLSWIFT=1 ENABLE_MODULE_SCHNORRSIG=1 ENABLE_MODULE_EXTRAKEYS=1 ENABLE_MODULE_RECOVERY=1 ECMULT_WINDOW_SIZE=15 COMB_BLOCKS=43 COMB_TEETH=6\nC compiler ............................ Clang 19.1.7, /opt/homebrew/opt/llvm/bin/clang\nCFLAGS ................................ \nCompile options ....................... -pedantic -Wall -Wcast-align -Wconditional-uninitialized -Wextra -Wnested-externs -Wno-long-long -Wno-overlength-strings -Wno-unused-function -Wreserved-identifier -Wshadow -Wstrict-prototypes -Wundef\nBuild type:\n - CMAKE_BUILD_TYPE ................... RelWithDebInfo\n - CFLAGS ............................. -O2 -g \n - LDFLAGS for executables ............ \n - LDFLAGS for shared libraries ....... \nSECP256K1_APPEND_CFLAGS ............... -fsanitize=undefined,address,fuzzer-no-link\nSECP256K1_APPEND_LDFLAGS .............. -fsanitize=undefined,address,fuzzer-no-link\n\n\n\nConfigure summary\n=================\nExecutables:\n  bitcoind ............................ OFF\n  bitcoin-node (multiprocess) ......... OFF\n  bitcoin-qt (GUI) .................... OFF\n  bitcoin-gui (GUI, multiprocess) ..... OFF\n  bitcoin-cli ......................... OFF\n  bitcoin-tx .......................... OFF\n  bitcoin-util ........................ OFF\n  bitcoin-wallet ...................... OFF\n  bitcoin-chainstate (experimental) ... OFF\n  libbitcoinkernel (experimental) ..... OFF\nOptional features:\n  wallet support ...................... ON\n   - legacy wallets (Berkeley DB) ..... OFF\n  external signer ..................... OFF\n  ZeroMQ .............................. OFF\n  USDT tracing ........................ OFF\n  QR code (GUI) ....................... OFF\n  DBus (GUI, Linux only) .............. OFF\nTests:\n  test_bitcoin ........................ OFF\n  test_bitcoin-qt ..................... OFF\n  bench_bitcoin ....................... OFF\n  fuzz binary ......................... ON\n\nCross compiling ....................... FALSE\nC++ compiler .......................... Clang 19.1.7, /opt/homebrew/opt/llvm/bin/clang++\nCMAKE_BUILD_TYPE ...................... RelWithDebInfo\nPreprocessor defined macros ........... FUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION OBJC_OLD_DISPATCH_PROTOTYPES=0\nC++ compiler flags .................... -O2 -g -std=c++20 -fPIC -fdebug-prefix-map=/Users/prabhatverma/projects/bitcoin/src=. -fmacro-prefix-map=/Users/prabhatverma/projects/bitcoin/src=. -fsanitize=undefined,address,fuzzer-no-link -Wall -Wextra -Wgnu -Wformat -Wformat-security -Wvla -Wshadow-field -Wthread-safety -Wloop-analysis -Wredundant-decls -Wunused-member-function -Wdate-time -Wconditional-uninitialized -Woverloaded-virtual -Wsuggest-override -Wimplicit-fallthrough -Wunreachable-code -Wdocumentation -Wself-assign -Wundef -Wno-unused-parameter -U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=3 -Wstack-protector -fstack-protector-all -mbranch-protection=bti\nLinker flags .......................... -O2 -g -Wl,-dead_strip -Wl,-dead_strip_dylibs -Wl,-headerpad_max_install_names -fsanitize=undefined,address,fuzzer-no-link -fstack-protector-all -Wl,-fixup_chains -fPIE -Xlinker -pie\n\nNOTE: The summary above may not exactly match the final applied build flags\n      if any additional CMAKE_* or environment variables have been modified.\n      To see the exact flags applied, build with the --verbose option.\n\nAttempt to harden executables ......... ON\nTreat compiler warnings as errors ..... OFF\nUse ccache for compiling .............. OFF\n\n\n-- Configuring done (10.6s)\n-- Generating done (0.1s)\n-- Build files have been written to: /Users/prabhatverma/projects/bitcoin/build\n```\n</details>",
      "user": {
        "login": "Prabhat1308",
        "id": 94048855,
        "node_id": "U_kgDOBZsSVw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94048855?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Prabhat1308",
        "html_url": "https://github.com/Prabhat1308",
        "followers_url": "https://api.github.com/users/Prabhat1308/followers",
        "following_url": "https://api.github.com/users/Prabhat1308/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Prabhat1308/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Prabhat1308/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Prabhat1308/subscriptions",
        "organizations_url": "https://api.github.com/users/Prabhat1308/orgs",
        "repos_url": "https://api.github.com/users/Prabhat1308/repos",
        "events_url": "https://api.github.com/users/Prabhat1308/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Prabhat1308/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/32089#issuecomment-2776245517",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32089"
    },
    {
      "event": "commented",
      "id": 2776273741,
      "node_id": "IC_kwDOABII586lepNN",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2776273741",
      "actor": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-03T16:00:31Z",
      "updated_at": "2025-04-03T16:00:31Z",
      "author_association": "CONTRIBUTOR",
      "body": "Does the issue occur with clang 18?",
      "user": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/32089#issuecomment-2776273741",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32089"
    },
    {
      "event": "commented",
      "id": 2776312006,
      "node_id": "IC_kwDOABII586leyjG",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2776312006",
      "actor": {
        "login": "Prabhat1308",
        "id": 94048855,
        "node_id": "U_kgDOBZsSVw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94048855?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Prabhat1308",
        "html_url": "https://github.com/Prabhat1308",
        "followers_url": "https://api.github.com/users/Prabhat1308/followers",
        "following_url": "https://api.github.com/users/Prabhat1308/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Prabhat1308/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Prabhat1308/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Prabhat1308/subscriptions",
        "organizations_url": "https://api.github.com/users/Prabhat1308/orgs",
        "repos_url": "https://api.github.com/users/Prabhat1308/repos",
        "events_url": "https://api.github.com/users/Prabhat1308/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Prabhat1308/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-03T16:15:41Z",
      "updated_at": "2025-04-03T16:15:41Z",
      "author_association": "CONTRIBUTOR",
      "body": "> Does the issue occur with clang 18?\n\nworks with clang 18 but its bringing back https://github.com/bitcoin/bitcoin/issues/31591",
      "user": {
        "login": "Prabhat1308",
        "id": 94048855,
        "node_id": "U_kgDOBZsSVw",
        "avatar_url": "https://avatars.githubusercontent.com/u/94048855?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Prabhat1308",
        "html_url": "https://github.com/Prabhat1308",
        "followers_url": "https://api.github.com/users/Prabhat1308/followers",
        "following_url": "https://api.github.com/users/Prabhat1308/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Prabhat1308/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Prabhat1308/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Prabhat1308/subscriptions",
        "organizations_url": "https://api.github.com/users/Prabhat1308/orgs",
        "repos_url": "https://api.github.com/users/Prabhat1308/repos",
        "events_url": "https://api.github.com/users/Prabhat1308/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Prabhat1308/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/32089#issuecomment-2776312006",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32089"
    },
    {
      "event": "commented",
      "id": 2787299500,
      "node_id": "IC_kwDOABII586mItCs",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2787299500",
      "actor": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-04-08T18:14:22Z",
      "updated_at": "2025-04-08T18:14:22Z",
      "author_association": "CONTRIBUTOR",
      "body": "> works with clang 18 but its bringing back https://github.com/bitcoin/bitcoin/issues/31591\n\nAhh, I see. That's annoying. I'm just ignoring the errors for now and it seems to work as expected. I've historically had a bit of trouble with macOS fuzzing and sometimes things just tend to break.",
      "user": {
        "login": "Crypt-iQ",
        "id": 15145615,
        "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
        "avatar_url": "https://avatars.githubusercontent.com/u/15145615?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/Crypt-iQ",
        "html_url": "https://github.com/Crypt-iQ",
        "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
        "following_url": "https://api.github.com/users/Crypt-iQ/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/Crypt-iQ/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/Crypt-iQ/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
        "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
        "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
        "events_url": "https://api.github.com/users/Crypt-iQ/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/32089#issuecomment-2787299500",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32089"
    }
  ]
}