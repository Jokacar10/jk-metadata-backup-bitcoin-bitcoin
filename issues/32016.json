{
  "type": "issue",
  "issue": {
    "id": 2902544830,
    "node_id": "I_kwDOABII586tAVG-",
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32016",
    "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
    "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32016/labels%7B/name%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32016/comments",
    "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32016/events",
    "html_url": "https://github.com/bitcoin/bitcoin/issues/32016",
    "number": 32016,
    "state": "open",
    "state_reason": null,
    "title": "test: `p2p_message_capture.py` fails with GCC 14 & undefined sanitizer",
    "body": "Using Fedora 41:\n```bash\n# gcc (GCC) 14.2.1 20250110 (Red Hat 14.2.1-7)\n\ndnf install git cmake gcc-c++ make python3 libevent-devel boost-devel sqlite-devel zeromq-devel systemtap-sdt-devel ccache\ngit clone https://github.com/bitcoin/bitcoin\ncd bitcoin\ncmake -B build -DSANITIZERS=undefined\ncmake --build build -j17\n./build/test/functional/test_runner.py p2p_message_capture.py\n```\n\n```bash\n./build/test/functional/test_runner.py p2p_message_capture.py\nTemporary test directory at /tmp/test_runner_‚Çø_üèÉ_20250307_094110\nRemaining jobs: [p2p_message_capture.py]\n1/1 - p2p_message_capture.py failed, Duration: 1 s\n\nstdout:\n2025-03-07T09:41:10.975000Z TestFramework (INFO): PRNG seed is: 1537943552213102426\n2025-03-07T09:41:10.976000Z TestFramework (INFO): Initializing test directory /tmp/test_runner_‚Çø_üèÉ_20250307_094110/p2p_message_capture_0\n2025-03-07T09:41:11.673000Z TestFramework (INFO): Stopping nodes\n\n\nstderr:\nTraceback (most recent call last):\n  File \"/bitcoin/build/test/functional/p2p_message_capture.py\", line 72, in <module>\n    MessageCaptureTest(__file__).main()\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^\n  File \"/bitcoin/test/functional/test_framework/test_framework.py\", line 159, in main\n    exit_code = self.shutdown()\n  File \"/bitcoin/test/functional/test_framework/test_framework.py\", line 331, in shutdown\n    self.stop_nodes()\n    ~~~~~~~~~~~~~~~^^\n  File \"/bitcoin/test/functional/test_framework/test_framework.py\", line 603, in stop_nodes\n    node.wait_until_stopped()\n    ~~~~~~~~~~~~~~~~~~~~~~~^^\n  File \"/bitcoin/test/functional/test_framework/test_node.py\", line 444, in wait_until_stopped\n    self.wait_until(lambda: self.is_node_stopped(**kwargs), timeout=timeout)\n    ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/bitcoin/test/functional/test_framework/test_node.py\", line 840, in wait_until\n    return wait_until_helper_internal(test_function, timeout=timeout, timeout_factor=self.timeout_factor, check_interval=check_interval)\n  File \"/bitcoin/test/functional/test_framework/util.py\", line 310, in wait_until_helper_internal\n    if predicate():\n       ~~~~~~~~~^^\n  File \"/bitcoin/test/functional/test_framework/test_node.py\", line 444, in <lambda>\n    self.wait_until(lambda: self.is_node_stopped(**kwargs), timeout=timeout)\n                            ~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^\n  File \"/bitcoin/test/functional/test_framework/test_node.py\", line 429, in is_node_stopped\n    raise AssertionError(\"Unexpected stderr {} != {}\".format(stderr, expected_stderr))\nAssertionError: Unexpected stderr /bitcoin/src/streams.cpp:85:24: runtime error: null pointer passed as argument 1, which is declared to never be null != \n[node 0] Cleaning up leftover process\n```",
    "user": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/fanquake/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/fanquake/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false,
      "patch_url": null
    },
    "labels": [],
    "assignees": [],
    "author_association": "MEMBER",
    "locked": false,
    "comments": 0,
    "created_at": "2025-03-07T09:59:55Z",
    "updated_at": "2025-03-07T09:59:55Z"
  },
  "events": []
}