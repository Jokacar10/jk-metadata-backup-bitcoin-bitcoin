{
  "type": "issue",
  "issue": {
    "id": 2873242759,
    "node_id": "I_kwDOABII586rQjSH",
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31938",
    "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
    "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31938/labels%7B/name%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31938/comments",
    "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31938/events",
    "html_url": "https://github.com/bitcoin/bitcoin/issues/31938",
    "number": 31938,
    "state": "open",
    "state_reason": null,
    "title": "Ephemeral Dust 0-Fee Requirement Complexifies Downstream Protocols",
    "body": "In lightning, we often want to deal with HTLCs which are below the dust threshold and thus must be burned to fees (absent something better to do with them). When doing ephemeral anchors, we want to retain that property. Ephemeral dust currently, however, requires that we burn them into the anchor (as we aren't allowed to have a non-0 fee when dealing with ephemeral dust).\n\nIf we burn the entire dust HTLC sum (which may be nontrivial, though it should never be huge) into the anchor (and fees are low), either channel counterparty might see that dust HTLC sum as nice free money. If they're a miner, of course, the entire dust HTLC sum is always free money, but in most cases that isn't true, so they'd be incentivized to go use a private mempool service (eg MEVPool) which is bad for everyone.\n\nInstead, lightning would need to burn up to the dust limit in HTLC dust into the anchor output and then burn the remainder into the commitment transaction fee (as we can skip using the ephemeral dust rules once the anchor is no longer dust). Dealing with this is somewhat annoying (okay, its not *that* bad, but I'd really rather not have to), and its not clear to me that the 0-fee requirement accomplishes all that much:\n\nIn a world where blocks aren't full and there isn't sustained mempool pressure (today), anyone-can-spend dust isn't all that bad - cleaning it up is free for miners so there's not a lot of reason to worry about it.\nIn a world where blocks are sustainably full and feerates rise above the minimum relay fees (hopefully the future), the dust thresholds we have don't make sense anyway, so enforcing them doesn't really accomplish much.",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false,
      "patch_url": null
    },
    "labels": [],
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "locked": false,
    "comments": 0,
    "created_at": "2025-02-23T14:47:16Z",
    "updated_at": "2025-02-23T14:47:16Z"
  },
  "events": []
}