{
  "type": "issue",
  "issue": {
    "id": 3410376062,
    "node_id": "I_kwDOABII587LRjV-",
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/33375",
    "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
    "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/33375/labels%7B/name%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/33375/comments",
    "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/33375/events",
    "html_url": "https://github.com/bitcoin/bitcoin/issues/33375",
    "number": 33375,
    "state": "open",
    "state_reason": null,
    "title": "bench: unrealistic ConnectBlock benchmarks",
    "body": "The current `ConnectBlock` benchmarks in `bench/connectblock.cpp` do not reflect realistic mainnet workloads due to three key issues:\n\n#### 1. Unrealistic block composition\n\nEvery benchmarked block is constructed with a highly artificial transaction pattern:\n\n```c\n/*\n * - Each transaction has the same number of inputs and outputs\n * - All Taproot inputs use simple key path spends (no script path spends)\n * - All signatures use SIGHASH_ALL (default sighash)\n * - Each transaction spends all outputs from the previous transaction\n */\n```\n\nThis setup avoids realistic UTXO set fragmentation and script diversity. The benchmark effectively measures validation of a synthetic \"ladder\" of transactions rather than a block resembling mainnet traffic.\n\n#### 2. Unrealistic UTXO cache state\n\nBefore benchmarking, the code creates a block that produces the outputs, then immediately spends them all in the benchmark block. This keeps the entire UTXO set hot in memory (`CoinsTip()`).\n\nIn reality:\n\n* Many UTXO lookups hit LevelDB and require disk access.\n* Cache misses and eviction policies significantly impact block validation cost.\n\n#### 3. Unrealistic repetition\n\nEach benchmark repeatedly validates the same synthetic block:\n\n```cpp\n    const auto& test_block{CreateTestBlock(test_setup, keys, outputs)};\n    bench.unit(\"block\").run([&] {\n        /* ... */\n    });\n```\n\nThere is no variability in transaction graph, script mix, or UTXO evolution across iterations. As a result, the benchmark never exercises cache churn, block-to-block dependency patterns, or realistic workload diversity.\n\n---\n\n### Why this matters\n\nThese issues mean the benchmark results do not reflect real-world `ConnectBlock` performance. Instead, they measure a best-case, memory-only workload on a synthetic block structure.\n",
    "user": {
      "login": "Raimo33",
      "id": 104778891,
      "node_id": "U_kgDOBj7Miw",
      "avatar_url": "https://avatars.githubusercontent.com/u/104778891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Raimo33",
      "html_url": "https://github.com/Raimo33",
      "followers_url": "https://api.github.com/users/Raimo33/followers",
      "following_url": "https://api.github.com/users/Raimo33/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/Raimo33/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/Raimo33/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/Raimo33/subscriptions",
      "organizations_url": "https://api.github.com/users/Raimo33/orgs",
      "repos_url": "https://api.github.com/users/Raimo33/repos",
      "events_url": "https://api.github.com/users/Raimo33/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/Raimo33/received_events",
      "type": "User",
      "site_admin": false,
      "patch_url": null
    },
    "labels": [],
    "assignees": [],
    "author_association": "NONE",
    "locked": false,
    "comments": 0,
    "created_at": "2025-09-12T12:53:02Z",
    "updated_at": "2025-09-12T12:53:02Z"
  },
  "events": []
}