{
  "type": "issue",
  "issue": {
    "id": 2734329158,
    "node_id": "I_kwDOABII586i-o1G",
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31474",
    "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
    "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31474/labels%7B/name%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31474/comments",
    "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31474/events",
    "html_url": "https://github.com/bitcoin/bitcoin/issues/31474",
    "number": 31474,
    "state": "open",
    "state_reason": null,
    "title": "Potential crash (assert) rescanning wallet",
    "body": "### Is there an existing issue for this?\n\n- [X] I have searched the existing issues\n\n### Current behaviour\n\nPreface: This whole analysis was made using Elements Core, not Bitcoin Core, but the code and the conditions should line up in a way that makes this likely in Bitcoin too.\r\n\r\nThere's an assert crash in `assert(chain_depth >= 0); // coinbase tx should not be conflicted` calling `CWallet::GetTxBlocksToMaturity` because `CWallet::GetTxDepthInMainChain`  returns a negative value for `TxStateConfirmed` txs. The reason for this is that `m_last_block_processed` is set at the beginning of `AttachChain`, but the rescan loop keeps going beyond that point, so when `GetTxDepthInMainChain` is called right after the scan is done, m_last_block_processed is lower than the actual block in the latest txs, hence returning a negative value and crashing.\r\n\r\nIn discussions with @achow101 , it's possible that https://github.com/bitcoin/bitcoin/pull/30221 fixes this issue by calling `SetBestBlock` after the rescan is done. Another approach could be to stop the scan when `m_last_block_processed` is reached with something like this\r\n\r\n```diff\r\n@@ -1689,6 +1693,11 @@ CWallet::ScanResult CWallet::ScanForWalletTransactions(const uint256& start_bloc\r\n         if (max_height && block_height >= *max_height) {\r\n             break;\r\n         }\r\n+        if (block_height >= GetLastBlockHeight()) {\r\n+            WalletLogPrintf(\"Stopping scan. At block %d. Progress=%f\\n\", block_height, progress_current);\r\n+            break;\r\n+        }\r\n+\r\n         {\r\n             if (!next_block) {\r\n                 // break successfully when rescan has reached the tip, or\r\n```\n\n### Expected behaviour\n\nThe wallet data should be consistent to avoid the crash\n\n### Steps to reproduce\n\nThis is reproduced using QT\r\n\r\n1. Create a chain with many coinbase txs.\r\n2. Attach a wallet (could be read only) with the address of the coinbase txs\r\n3. While the wallet is still being loaded, create many more blocks with coinbase txs to that address\r\n4. Assert happens when the wallet is done loading\n\n### Relevant log output\n\n_No response_\n\n### How did you obtain Bitcoin Core\n\nCompiled from source\n\n### What version of Bitcoin Core are you using?\n\nmaster@62bd61de110b057cbfd6e31e4d0b727d93119c72\n\n### Operating system and version\n\nFedora 41\n\n### Machine specifications\n\n_No response_",
    "user": {
      "login": "psgreco",
      "id": 12950210,
      "node_id": "MDQ6VXNlcjEyOTUwMjEw",
      "avatar_url": "https://avatars.githubusercontent.com/u/12950210?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/psgreco",
      "html_url": "https://github.com/psgreco",
      "followers_url": "https://api.github.com/users/psgreco/followers",
      "following_url": "https://api.github.com/users/psgreco/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/psgreco/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/psgreco/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/psgreco/subscriptions",
      "organizations_url": "https://api.github.com/users/psgreco/orgs",
      "repos_url": "https://api.github.com/users/psgreco/repos",
      "events_url": "https://api.github.com/users/psgreco/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/psgreco/received_events",
      "type": "User",
      "site_admin": false,
      "patch_url": null
    },
    "labels": [],
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "locked": false,
    "comments": 7,
    "created_at": "2024-12-12T00:17:39Z",
    "updated_at": "2025-01-08T18:06:20Z"
  },
  "events": [
    {
      "event": "mentioned",
      "id": 15626768612,
      "node_id": "MEE_lADOABII586i-o1GzwAAAAOjbZDk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15626768612",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-12T00:17:40Z"
    },
    {
      "event": "subscribed",
      "id": 15626768619,
      "node_id": "SE_lADOABII586i-o1GzwAAAAOjbZDr",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15626768619",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-12T00:17:40Z"
    },
    {
      "event": "commented",
      "id": 2576178033,
      "node_id": "IC_kwDOABII586ZjVtx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2576178033",
      "actor": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-01-07T20:38:20Z",
      "updated_at": "2025-01-07T20:38:20Z",
      "author_association": "CONTRIBUTOR",
      "body": "I tried to reproduce the crash locally (putting a sleep into AttachChain) but didn't manage - Not the biggest GUI or wallet expert so I may well be missing something, but here's what I tried:\r\n- With qt, how do I create more transactions while the wallet is loading? The GUI blocks for me until the wallet is loaded.\r\n- With bitcoind, I was able create more blocks during the rescan - but those will create `blockConnected()` notifications, and several RPCs that call `GetTxBlocksToMaturity` (such as `getbalance`)  use `BlockUntilSyncedToCurrentChain`, waiting for the notifications to be processed and causing  `m_last_block_processed` to be set to the correct value when `GetTxBlocksToMaturity` is finally called.\r\n\r\nEven if I couldn't reproduce the crash, rescanning blocks higher than `m_last_block_processed` seems wrong, so the suggested fix makes sense to me.",
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/31474#issuecomment-2576178033",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31474"
    },
    {
      "event": "commented",
      "id": 2576295985,
      "node_id": "IC_kwDOABII586Zjygx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2576295985",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-01-07T21:54:19Z",
      "updated_at": "2025-01-07T21:54:19Z",
      "author_association": "MEMBER",
      "body": "> With qt, how do I create more transactions while the wallet is loading? The GUI blocks for me until the wallet is loaded.\r\n\r\nWould it be possible to start the GUI with `-server=1` and then use one of the RPC threads to create more blocks while the GUI is blocked?",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/31474#issuecomment-2576295985",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31474"
    },
    {
      "event": "commented",
      "id": 2576433431,
      "node_id": "IC_kwDOABII586ZkUEX",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2576433431",
      "actor": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-01-07T23:44:01Z",
      "updated_at": "2025-01-07T23:44:01Z",
      "author_association": "CONTRIBUTOR",
      "body": "> Would it be possible to start the GUI with `-server=1` and then use one of the RPC threads to create more blocks while the GUI is blocked?\r\n\r\nGood point, that worked! I could reproduce the crash in the GUI that way (with sleeps in `AttachChain()` and `blockConnected()` to avoid races) -  I can confirm that it's fixed by the patch in the OP, whereas I could still reproduce it with #30221, so that PR apparently doesn't fix it.",
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/31474#issuecomment-2576433431",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31474"
    },
    {
      "event": "commented",
      "id": 2577032254,
      "node_id": "IC_kwDOABII586ZmmQ-",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2577032254",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-01-08T08:21:07Z",
      "updated_at": "2025-01-08T08:21:39Z",
      "author_association": "MEMBER",
      "body": "Thanks for reproducing! It would be good to share the backtrace. I haven't tried reproducing myself and I am still wondering if this is a GUI issue or a wallet issue.",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/31474#issuecomment-2577032254",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31474"
    },
    {
      "event": "commented",
      "id": 2577633853,
      "node_id": "IC_kwDOABII586Zo5I9",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2577633853",
      "actor": {
        "login": "psgreco",
        "id": 12950210,
        "node_id": "MDQ6VXNlcjEyOTUwMjEw",
        "avatar_url": "https://avatars.githubusercontent.com/u/12950210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/psgreco",
        "html_url": "https://github.com/psgreco",
        "followers_url": "https://api.github.com/users/psgreco/followers",
        "following_url": "https://api.github.com/users/psgreco/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/psgreco/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/psgreco/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/psgreco/subscriptions",
        "organizations_url": "https://api.github.com/users/psgreco/orgs",
        "repos_url": "https://api.github.com/users/psgreco/repos",
        "events_url": "https://api.github.com/users/psgreco/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/psgreco/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-01-08T13:08:46Z",
      "updated_at": "2025-01-08T13:08:46Z",
      "author_association": "CONTRIBUTOR",
      "body": "From my tests, it's a wallet issue (inconsistent state), that only the GUI triggers, The wallet has an invalid state, but the \"happy path\" in the CLI version doesn't notice it",
      "user": {
        "login": "psgreco",
        "id": 12950210,
        "node_id": "MDQ6VXNlcjEyOTUwMjEw",
        "avatar_url": "https://avatars.githubusercontent.com/u/12950210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/psgreco",
        "html_url": "https://github.com/psgreco",
        "followers_url": "https://api.github.com/users/psgreco/followers",
        "following_url": "https://api.github.com/users/psgreco/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/psgreco/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/psgreco/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/psgreco/subscriptions",
        "organizations_url": "https://api.github.com/users/psgreco/orgs",
        "repos_url": "https://api.github.com/users/psgreco/repos",
        "events_url": "https://api.github.com/users/psgreco/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/psgreco/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/31474#issuecomment-2577633853",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31474"
    },
    {
      "event": "commented",
      "id": 2578115905,
      "node_id": "IC_kwDOABII586Zqu1B",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2578115905",
      "actor": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-01-08T16:34:15Z",
      "updated_at": "2025-01-08T16:34:15Z",
      "author_association": "CONTRIBUTOR",
      "body": "> From my tests, it's a wallet issue (inconsistent state), that only the GUI triggers, The wallet has an invalid state, but the \"happy path\" in the CLI version doesn't notice it\r\n\r\nI agree, my understanding is this: There is a temporary inconsistent state in the wallet when during a rescan the node receives additional blocks (could be via RPC or p2p), that are prematurely processed without updating `m_last_block_processed`. This will self-correct when the `blockConnected` signals for the added blocks are processed and `m_last_block_processed` is set to its correct value. But if `CWallet::GetTxBlocksToMaturity` is called after the rescan finished and before the signals are processed, the node crashes if the coinbase is a wallet tx. The reason why it only crashes in the GUI is that many RPC that end up calling `GetTxBlocksToMaturity`, such as `getbalance`, will first call `BlockUntilSyncedToCurrentChain` that would correct the issue, so I didn't find a way to trigger. However, the GUI calls the function as part of `refreshWallet` / `getWalletTxs`, see the backtrace below.\r\n\r\n> It would be good to share the backtrace.\r\n\r\n```\r\n#0  __pthread_kill_implementation (no_tid=0, signo=6, threadid=<optimized out>) at ./nptl/pthread_kill.c:44\r\n#1  __pthread_kill_internal (signo=6, threadid=<optimized out>) at ./nptl/pthread_kill.c:78\r\n#2  __GI___pthread_kill (threadid=<optimized out>, signo=signo@entry=6) at ./nptl/pthread_kill.c:89\r\n#3  0x00007ffff5e4526e in __GI_raise (sig=sig@entry=6) at ../sysdeps/posix/raise.c:26\r\n#4  0x00007ffff5e288ff in __GI_abort () at ./stdlib/abort.c:79\r\n#5  0x00007ffff5e2881b in __assert_fail_base (fmt=0x7ffff5fd01e8 \"%s%s%s:%u: %s%sAssertion `%s' failed.\\n%n\", assertion=assertion@entry=0x555556007eba \"chain_depth >= 0\", \r\n    file=file@entry=0x555556007da1 \"./wallet/wallet.cpp\", line=line@entry=3482, function=function@entry=0x555555fcf578 \"int wallet::CWallet::GetTxBlocksToMaturity(const wallet::CWalletTx&) const\")\r\n    at ./assert/assert.c:94\r\n#6  0x00007ffff5e3b507 in __assert_fail (assertion=0x555556007eba \"chain_depth >= 0\", file=0x555556007da1 \"./wallet/wallet.cpp\", line=3482, \r\n    function=0x555555fcf578 \"int wallet::CWallet::GetTxBlocksToMaturity(const wallet::CWalletTx&) const\") at ./assert/assert.c:103\r\n#7  0x0000555555c2ac94 in wallet::CWallet::GetTxBlocksToMaturity (this=this@entry=0x7fff1802a650, wtx=...) at ./wallet/wallet.cpp:3482\r\n#8  0x0000555555c2accd in wallet::CWallet::IsTxImmatureCoinBase (this=this@entry=0x7fff1802a650, wtx=...) at ./wallet/wallet.cpp:3491\r\n#9  0x0000555555bb4b6a in wallet::CachedTxGetCredit (wallet=..., wtx=..., filter=filter@entry=@0x7fff7cbfedd8: 3) at ./wallet/receive.cpp:114\r\n#10 0x0000555555b9cddd in wallet::(anonymous namespace)::MakeWalletTx (wallet=..., wtx=...) at ./wallet/interfaces.cpp:79\r\n#11 0x0000555555b9de40 in wallet::(anonymous namespace)::WalletImpl::getWalletTxs (this=0x7fff18222630) at ./wallet/interfaces.cpp:354\r\n#12 0x000055555581f832 in TransactionTablePriv::refreshWallet (this=0x7fff182927e0, wallet=...) at ./qt/transactiontablemodel.cpp:115\r\n#13 0x000055555581d168 in TransactionTableModel::TransactionTableModel (this=this@entry=0x7fff181247f0, _platformStyle=_platformStyle@entry=0x555556b4c9a0, parent=parent@entry=0x7fff18001450)\r\n    at ./qt/transactiontablemodel.cpp:259\r\n#14 0x0000555555792bc0 in WalletModel::WalletModel (this=this@entry=0x7fff18001450, wallet=std::unique_ptr<interfaces::Wallet> = {...}, client_model=..., platformStyle=0x555556b4c9a0, \r\n    parent=parent@entry=0x0) at ./qt/walletmodel.cpp:50\r\n#15 0x000055555577efaa in WalletController::getOrCreateWallet (this=0x5555575987c0, wallet=std::unique_ptr<interfaces::Wallet> = {...}) at /usr/include/c++/13/bits/unique_ptr.h:197\r\n#16 0x000055555577f510 in operator() (__closure=<optimized out>, wallet=std::unique_ptr<interfaces::Wallet> = {...}) at /usr/include/c++/13/bits/unique_ptr.h:197\r\n#17 std::__invoke_impl<void, WalletController::WalletController(ClientModel&, const PlatformStyle*, QObject*)::<lambda(std::unique_ptr<interfaces::Wallet>)>&, std::unique_ptr<interfaces::Wallet, std::default_delete<interfaces::Wallet> > > (__f=...) at /usr/include/c++/13/bits/invoke.h:61\r\n#18 std::__invoke_r<void, WalletController::WalletController(ClientModel&, const PlatformStyle*, QObject*)::<lambda(std::unique_ptr<interfaces::Wallet>)>&, std::unique_ptr<interfaces::Wallet, std::default_delete<interfaces::Wallet> > > (__fn=...) at /usr/include/c++/13/bits/invoke.h:111\r\n#19 std::_Function_handler<void(std::unique_ptr<interfaces::Wallet, std::default_delete<interfaces::Wallet> >), WalletController::WalletController(ClientModel&, const PlatformStyle*, QObject*)::<lambda(std::unique_ptr<interfaces::Wallet, std::default_delete<interfaces::Wallet> >)> >::_M_invoke(const std::_Any_data &, std::unique_ptr<interfaces::Wallet, std::default_delete<interfaces::Wallet> > &&) (\r\n    __functor=..., __args#0=...) at /usr/include/c++/13/bits/std_function.h:290\r\n#20 0x0000555555c28b2f in std::function<void (std::unique_ptr<interfaces::Wallet, std::default_delete<interfaces::Wallet> >)>::operator()(std::unique_ptr<interfaces::Wallet, std::default_delete<interfaces::Wallet> >) const (__args#0=std::unique_ptr<interfaces::Wallet> = {...}, this=0x555556a12440) at /usr/include/c++/13/bits/std_function.h:591\r\n#21 wallet::NotifyWalletLoaded (context=..., wallet=std::shared_ptr<wallet::CWallet> (use count 3, weak count 0) = {...}) at ./wallet/wallet.cpp:224\r\n#22 0x0000555555c490ed in wallet::(anonymous namespace)::LoadWalletInternal (warnings=std::vector of length 0, capacity 0, error=..., status=@0x7fff7cbff694: wallet::DatabaseStatus::SUCCESS, \r\n    options=..., load_on_start=..., name=\"\", context=...) at ./wallet/wallet.cpp:296\r\n#23 wallet::LoadWallet (context=..., name=\"\", load_on_start=..., load_on_start@entry=std::optional = {...}, options=..., status=@0x7fff7cbff694: wallet::DatabaseStatus::SUCCESS, error=..., \r\n    warnings=std::vector of length 0, capacity 0) at ./wallet/wallet.cpp:378\r\n#24 0x0000555555b9873d in wallet::(anonymous namespace)::WalletLoaderImpl::loadWallet (this=0x7fff78002070, name=\"\", warnings=std::vector of length 0, capacity 0) at /usr/include/c++/13/optional:213\r\n#25 0x000055555577fd4c in operator() (__closure=0x55555723b0f0) at ./qt/walletcontroller.cpp:359\r\n#26 QtPrivate::FunctorCall<QtPrivate::IndexesList<>, QtPrivate::List<>, void, OpenWalletActivity::open(const std::string&)::<lambda()> >::call (arg=<optimized out>, f=...)\r\n    at /usr/include/x86_64-linux-gnu/qt5/QtCore/qobjectdefs_impl.h:146\r\n#27 QtPrivate::Functor<OpenWalletActivity::open(const std::string&)::<lambda()>, 0>::call<QtPrivate::List<>, void> (arg=<optimized out>, f=...)\r\n    at /usr/include/x86_64-linux-gnu/qt5/QtCore/qobjectdefs_impl.h:256\r\n#28 QtPrivate::QFunctorSlotObject<OpenWalletActivity::open(const std::string&)::<lambda()>, 0, QtPrivate::List<>, void>::impl(int, QtPrivate::QSlotObjectBase *, QObject *, void **, bool *) (\r\n    which=<optimized out>, this_=0x55555723b0e0, r=<optimized out>, a=<optimized out>, ret=<optimized out>) at /usr/include/x86_64-linux-gnu/qt5/QtCore/qobjectdefs_impl.h:443\r\n#29 0x00007ffff6906343 in QObject::event(QEvent*) () from /lib/x86_64-linux-gnu/libQt5Core.so.5\r\n#30 0x00007ffff796bd45 in QApplicationPrivate::notify_helper(QObject*, QEvent*) () from /lib/x86_64-linux-gnu/libQt5Widgets.so.5\r\n--Type <RET> for more, q to quit, c to continue without paging--\r\n#31 0x00007ffff68d8118 in QCoreApplication::notifyInternal2(QObject*, QEvent*) () from /lib/x86_64-linux-gnu/libQt5Core.so.5\r\n#32 0x00007ffff68db94b in QCoreApplicationPrivate::sendPostedEvents(QObject*, int, QThreadData*) () from /lib/x86_64-linux-gnu/libQt5Core.so.5\r\n#33 0x00007ffff6935c0f in ?? () from /lib/x86_64-linux-gnu/libQt5Core.so.5\r\n#34 0x00007ffff59145b5 in ?? () from /lib/x86_64-linux-gnu/libglib-2.0.so.0\r\n#35 0x00007ffff5973717 in ?? () from /lib/x86_64-linux-gnu/libglib-2.0.so.0\r\n#36 0x00007ffff5913a53 in g_main_context_iteration () from /lib/x86_64-linux-gnu/libglib-2.0.so.0\r\n#37 0x00007ffff6935279 in QEventDispatcherGlib::processEvents(QFlags<QEventLoop::ProcessEventsFlag>) () from /lib/x86_64-linux-gnu/libQt5Core.so.5\r\n#38 0x00007ffff68d6a7b in QEventLoop::exec(QFlags<QEventLoop::ProcessEventsFlag>) () from /lib/x86_64-linux-gnu/libQt5Core.so.5\r\n#39 0x00007ffff66da36b in QThread::exec() () from /lib/x86_64-linux-gnu/libQt5Core.so.5\r\n#40 0x00007ffff66db674 in ?? () from /lib/x86_64-linux-gnu/libQt5Core.so.5\r\n#41 0x00007ffff5e9ca94 in start_thread (arg=<optimized out>) at ./nptl/pthread_create.c:447\r\n#42 0x00007ffff5f29c3c in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:78\r\n```\r\n\r\nI'll open a fix (probably just @psgreco's suggested fix, but I want to look into it a bit more).",
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/31474#issuecomment-2578115905",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31474"
    },
    {
      "event": "mentioned",
      "id": 15856795310,
      "node_id": "MEE_lADOABII586i-o1GzwAAAAOxI36u",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15856795310",
      "actor": {
        "login": "psgreco",
        "id": 12950210,
        "node_id": "MDQ6VXNlcjEyOTUwMjEw",
        "avatar_url": "https://avatars.githubusercontent.com/u/12950210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/psgreco",
        "html_url": "https://github.com/psgreco",
        "followers_url": "https://api.github.com/users/psgreco/followers",
        "following_url": "https://api.github.com/users/psgreco/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/psgreco/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/psgreco/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/psgreco/subscriptions",
        "organizations_url": "https://api.github.com/users/psgreco/orgs",
        "repos_url": "https://api.github.com/users/psgreco/repos",
        "events_url": "https://api.github.com/users/psgreco/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/psgreco/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-01-08T16:34:17Z"
    },
    {
      "event": "subscribed",
      "id": 15856795336,
      "node_id": "SE_lADOABII586i-o1GzwAAAAOxI37I",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15856795336",
      "actor": {
        "login": "psgreco",
        "id": 12950210,
        "node_id": "MDQ6VXNlcjEyOTUwMjEw",
        "avatar_url": "https://avatars.githubusercontent.com/u/12950210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/psgreco",
        "html_url": "https://github.com/psgreco",
        "followers_url": "https://api.github.com/users/psgreco/followers",
        "following_url": "https://api.github.com/users/psgreco/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/psgreco/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/psgreco/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/psgreco/subscriptions",
        "organizations_url": "https://api.github.com/users/psgreco/orgs",
        "repos_url": "https://api.github.com/users/psgreco/repos",
        "events_url": "https://api.github.com/users/psgreco/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/psgreco/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-01-08T16:34:17Z"
    },
    {
      "event": "commented",
      "id": 2578308486,
      "node_id": "IC_kwDOABII586Zrd2G",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2578308486",
      "actor": {
        "login": "psgreco",
        "id": 12950210,
        "node_id": "MDQ6VXNlcjEyOTUwMjEw",
        "avatar_url": "https://avatars.githubusercontent.com/u/12950210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/psgreco",
        "html_url": "https://github.com/psgreco",
        "followers_url": "https://api.github.com/users/psgreco/followers",
        "following_url": "https://api.github.com/users/psgreco/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/psgreco/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/psgreco/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/psgreco/subscriptions",
        "organizations_url": "https://api.github.com/users/psgreco/orgs",
        "repos_url": "https://api.github.com/users/psgreco/repos",
        "events_url": "https://api.github.com/users/psgreco/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/psgreco/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-01-08T18:06:19Z",
      "updated_at": "2025-01-08T18:06:19Z",
      "author_association": "CONTRIBUTOR",
      "body": "@mzumsande if you end up using my version, please look at the final version here https://github.com/ElementsProject/elements/pull/1376/files, which addresses the locking too",
      "user": {
        "login": "psgreco",
        "id": 12950210,
        "node_id": "MDQ6VXNlcjEyOTUwMjEw",
        "avatar_url": "https://avatars.githubusercontent.com/u/12950210?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/psgreco",
        "html_url": "https://github.com/psgreco",
        "followers_url": "https://api.github.com/users/psgreco/followers",
        "following_url": "https://api.github.com/users/psgreco/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/psgreco/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/psgreco/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/psgreco/subscriptions",
        "organizations_url": "https://api.github.com/users/psgreco/orgs",
        "repos_url": "https://api.github.com/users/psgreco/repos",
        "events_url": "https://api.github.com/users/psgreco/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/psgreco/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/31474#issuecomment-2578308486",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31474"
    },
    {
      "event": "mentioned",
      "id": 15857845387,
      "node_id": "MEE_lADOABII586i-o1GzwAAAAOxM4SL",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15857845387",
      "actor": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-01-08T18:06:20Z"
    },
    {
      "event": "subscribed",
      "id": 15857845394,
      "node_id": "SE_lADOABII586i-o1GzwAAAAOxM4SS",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15857845394",
      "actor": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-01-08T18:06:20Z"
    }
  ]
}