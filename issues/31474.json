{
  "type": "issue",
  "issue": {
    "id": 2734329158,
    "node_id": "I_kwDOABII586i-o1G",
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31474",
    "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
    "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31474/labels%7B/name%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31474/comments",
    "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31474/events",
    "html_url": "https://github.com/bitcoin/bitcoin/issues/31474",
    "number": 31474,
    "state": "open",
    "state_reason": null,
    "title": "Potential crash (assert) rescanning wallet",
    "body": "### Is there an existing issue for this?\n\n- [X] I have searched the existing issues\n\n### Current behaviour\n\nPreface: This whole analysis was made using Elements Core, not Bitcoin Core, but the code and the conditions should line up in a way that makes this likely in Bitcoin too.\r\n\r\nThere's an assert crash in `assert(chain_depth >= 0); // coinbase tx should not be conflicted` calling `CWallet::GetTxBlocksToMaturity` because `CWallet::GetTxDepthInMainChain`  returns a negative value for `TxStateConfirmed` txs. The reason for this is that `m_last_block_processed` is set at the beginning of `AttachChain`, but the rescan loop keeps going beyond that point, so when `GetTxDepthInMainChain` is called right after the scan is done, m_last_block_processed is lower than the actual block in the latest txs, hence returning a negative value and crashing.\r\n\r\nIn discussions with @achow101 , it's possible that https://github.com/bitcoin/bitcoin/pull/30221 fixes this issue by calling `SetBestBlock` after the rescan is done. Another approach could be to stop the scan when `m_last_block_processed` is reached with something like this\r\n\r\n```diff\r\n@@ -1689,6 +1693,11 @@ CWallet::ScanResult CWallet::ScanForWalletTransactions(const uint256& start_bloc\r\n         if (max_height && block_height >= *max_height) {\r\n             break;\r\n         }\r\n+        if (block_height >= GetLastBlockHeight()) {\r\n+            WalletLogPrintf(\"Stopping scan. At block %d. Progress=%f\\n\", block_height, progress_current);\r\n+            break;\r\n+        }\r\n+\r\n         {\r\n             if (!next_block) {\r\n                 // break successfully when rescan has reached the tip, or\r\n```\n\n### Expected behaviour\n\nThe wallet data should be consistent to avoid the crash\n\n### Steps to reproduce\n\nThis is reproduced using QT\r\n\r\n1. Create a chain with many coinbase txs.\r\n2. Attach a wallet (could be read only) with the address of the coinbase txs\r\n3. While the wallet is still being loaded, create many more blocks with coinbase txs to that address\r\n4. Assert happens when the wallet is done loading\n\n### Relevant log output\n\n_No response_\n\n### How did you obtain Bitcoin Core\n\nCompiled from source\n\n### What version of Bitcoin Core are you using?\n\nmaster@62bd61de110b057cbfd6e31e4d0b727d93119c72\n\n### Operating system and version\n\nFedora 41\n\n### Machine specifications\n\n_No response_",
    "user": {
      "login": "psgreco",
      "id": 12950210,
      "node_id": "MDQ6VXNlcjEyOTUwMjEw",
      "avatar_url": "https://avatars.githubusercontent.com/u/12950210?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/psgreco",
      "html_url": "https://github.com/psgreco",
      "followers_url": "https://api.github.com/users/psgreco/followers",
      "following_url": "https://api.github.com/users/psgreco/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/psgreco/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/psgreco/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/psgreco/subscriptions",
      "organizations_url": "https://api.github.com/users/psgreco/orgs",
      "repos_url": "https://api.github.com/users/psgreco/repos",
      "events_url": "https://api.github.com/users/psgreco/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/psgreco/received_events",
      "type": "User",
      "site_admin": false,
      "patch_url": null
    },
    "labels": [],
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "locked": false,
    "comments": 3,
    "created_at": "2024-12-12T00:17:39Z",
    "updated_at": "2025-01-07T23:44:02Z"
  },
  "events": [
    {
      "event": "mentioned",
      "id": 15626768612,
      "node_id": "MEE_lADOABII586i-o1GzwAAAAOjbZDk",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15626768612",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-12T00:17:40Z"
    },
    {
      "event": "subscribed",
      "id": 15626768619,
      "node_id": "SE_lADOABII586i-o1GzwAAAAOjbZDr",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/15626768619",
      "actor": {
        "login": "achow101",
        "id": 3782274,
        "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/achow101",
        "html_url": "https://github.com/achow101",
        "followers_url": "https://api.github.com/users/achow101/followers",
        "following_url": "https://api.github.com/users/achow101/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/achow101/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/achow101/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
        "organizations_url": "https://api.github.com/users/achow101/orgs",
        "repos_url": "https://api.github.com/users/achow101/repos",
        "events_url": "https://api.github.com/users/achow101/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/achow101/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-12-12T00:17:40Z"
    },
    {
      "event": "commented",
      "id": 2576178033,
      "node_id": "IC_kwDOABII586ZjVtx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2576178033",
      "actor": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-01-07T20:38:20Z",
      "updated_at": "2025-01-07T20:38:20Z",
      "author_association": "CONTRIBUTOR",
      "body": "I tried to reproduce the crash locally (putting a sleep into AttachChain) but didn't manage - Not the biggest GUI or wallet expert so I may well be missing something, but here's what I tried:\r\n- With qt, how do I create more transactions while the wallet is loading? The GUI blocks for me until the wallet is loaded.\r\n- With bitcoind, I was able create more blocks during the rescan - but those will create `blockConnected()` notifications, and several RPCs that call `GetTxBlocksToMaturity` (such as `getbalance`)  use `BlockUntilSyncedToCurrentChain`, waiting for the notifications to be processed and causing  `m_last_block_processed` to be set to the correct value when `GetTxBlocksToMaturity` is finally called.\r\n\r\nEven if I couldn't reproduce the crash, rescanning blocks higher than `m_last_block_processed` seems wrong, so the suggested fix makes sense to me.",
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/31474#issuecomment-2576178033",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31474"
    },
    {
      "event": "commented",
      "id": 2576295985,
      "node_id": "IC_kwDOABII586Zjygx",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2576295985",
      "actor": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-01-07T21:54:19Z",
      "updated_at": "2025-01-07T21:54:19Z",
      "author_association": "MEMBER",
      "body": "> With qt, how do I create more transactions while the wallet is loading? The GUI blocks for me until the wallet is loaded.\r\n\r\nWould it be possible to start the GUI with `-server=1` and then use one of the RPC threads to create more blocks while the GUI is blocked?",
      "user": {
        "login": "maflcko",
        "id": 6399679,
        "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maflcko",
        "html_url": "https://github.com/maflcko",
        "followers_url": "https://api.github.com/users/maflcko/followers",
        "following_url": "https://api.github.com/users/maflcko/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/maflcko/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/maflcko/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/maflcko/subscriptions",
        "organizations_url": "https://api.github.com/users/maflcko/orgs",
        "repos_url": "https://api.github.com/users/maflcko/repos",
        "events_url": "https://api.github.com/users/maflcko/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/maflcko/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/31474#issuecomment-2576295985",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31474"
    },
    {
      "event": "commented",
      "id": 2576433431,
      "node_id": "IC_kwDOABII586ZkUEX",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2576433431",
      "actor": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-01-07T23:44:01Z",
      "updated_at": "2025-01-07T23:44:01Z",
      "author_association": "CONTRIBUTOR",
      "body": "> Would it be possible to start the GUI with `-server=1` and then use one of the RPC threads to create more blocks while the GUI is blocked?\r\n\r\nGood point, that worked! I could reproduce the crash in the GUI that way (with sleeps in `AttachChain()` and `blockConnected()` to avoid races) -  I can confirm that it's fixed by the patch in the OP, whereas I could still reproduce it with #30221, so that PR apparently doesn't fix it.",
      "user": {
        "login": "mzumsande",
        "id": 48763452,
        "node_id": "MDQ6VXNlcjQ4NzYzNDUy",
        "avatar_url": "https://avatars.githubusercontent.com/u/48763452?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/mzumsande",
        "html_url": "https://github.com/mzumsande",
        "followers_url": "https://api.github.com/users/mzumsande/followers",
        "following_url": "https://api.github.com/users/mzumsande/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/mzumsande/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/mzumsande/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/mzumsande/subscriptions",
        "organizations_url": "https://api.github.com/users/mzumsande/orgs",
        "repos_url": "https://api.github.com/users/mzumsande/repos",
        "events_url": "https://api.github.com/users/mzumsande/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/mzumsande/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/31474#issuecomment-2576433431",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/31474"
    }
  ]
}