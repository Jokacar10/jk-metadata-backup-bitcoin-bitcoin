{
  "type": "issue",
  "issue": {
    "id": 2189085209,
    "node_id": "I_kwDOABII586CesoZ",
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29662",
    "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
    "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29662/labels%7B/name%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29662/comments",
    "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29662/events",
    "html_url": "https://github.com/bitcoin/bitcoin/issues/29662",
    "number": 29662,
    "state": "open",
    "state_reason": null,
    "title": "More control of maintenance processes at startup/restart",
    "body": "### Please describe the feature you'd like to see added.\r\n\r\nI'd like some way to control the levelDB compaction processes a bit more. Specifically, if I could control when they are scheduled (hourly in the background, for example), and possibly limit resources they consume (I/O, in particular), I think it would help.\r\n\r\n### Is your feature related to a problem, if so please describe it.\r\n\r\nThe problem I'm having is that when I reboot my bitcoin-core node (which runs with `txindex=1`), the RPC listener comes up pretty promptly, so my healthchecks (currently just TCP) pass. However, the service is not in its usual baseline state; it is doing a lot of read I/O, and logging about levelDB compaction. This condition lasts for about an hour. \r\n\r\nHere is an illustration of the I/O level relative to baseline. The left side is the restart, and the lower right side is after this abates. Dark blue is read:\r\n\r\n<img width=\"634\" alt=\"image\" src=\"https://github.com/bitcoin/bitcoin/assets/35895831/f0902e3d-a41f-4a45-bbd4-b22c18537fa6\">\r\n\r\nHere's a summary of the logs at this time:\r\n\r\n<img width=\"500\" alt=\"image\" src=\"https://github.com/bitcoin/bitcoin/assets/35895831/4d42e318-5430-45a7-b761-5c16394d76ab\">\r\n\r\nThe \"Compacting\" log line is extremely elevated during this period (though it does occur at a much lower level after):\r\n\r\n<img width=\"765\" alt=\"image\" src=\"https://github.com/bitcoin/bitcoin/assets/35895831/815b361b-b242-4a89-a32a-a7c5c7e66155\">\r\n\r\nHere's a graph of RPC trace P50 duration before, during, and after this phase:\r\n\r\n<img width=\"1200\" alt=\"image\" src=\"https://github.com/bitcoin/bitcoin/assets/35895831/f6c6ca27-6db2-4ef2-937f-d390da18e66d\">\r\n\r\nThe real problem is the last graph, the elevated RPC latency. The tail and head latencies are also much worse than normal, so it's not just a tail latency issue I could solve with timeouts / hedging. The server goes from microsecond/millisecond latency to 10s of seconds, especially for `sendrawtransaction` (10-30s max), with `listunspent` a distant second (3-4s max).\r\n\r\nThis latency abates as soon as the high I/O and compaction logging stops. I am therefore making the **intuitive leap** (so experts, please consider this critically and I welcome other explanations) that resource utilization during compaction is causing some RPCs to be very slow. I also considered lock contention (perhaps `cs_main`) but I couldn't see it in the code.\r\n\r\n### Describe the solution you'd like\r\n\r\nI'd like the experts to recommend a solution. Intuitively, it seems like levelDB could amortize this compaction work during normal operation as a background task ([the README seems to imply it already should?](https://github.com/google/leveldb?tab=readme-ov-file#read-performance)). Or maybe some way to limit resources used for compaction? \r\n\r\n### Describe any alternatives you've considered\r\n\r\nCurrently, I'm looking at alternative ways to do the RPC I enabled `txindex` for, which is `getrawtransaction` without the blockhash. But, that will only sidestep this issue with compaction and RPC latency.\r\n\r\n### Please leave any additional context\r\n\r\nI am using a slower filesystem than most. It is a regionally-replicated NFS store, which we chose for resiliency reasons. Intuitively, I'd expect this problem to be less severe (or shorter duration) with lower-latency storage, but still present.\r\n\r\nCommand line args: \r\n\r\n```\r\ntxindex=\"1\", rpcworkqueue=\"1024\", rpc_*=\"redacted\", debug=\"coindb\", debug=\"estimatefee\", debug=\"reindex\", debug=\"leveldb\", debug=\"walletdb\", debug=\"lock\", debug=\"rpc\", dbcache=\"5734\", datadir=\"/home/bitcoin/data\", chain=\"main\"\r\n```",
    "user": {
      "login": "domZippilli",
      "id": 35895831,
      "node_id": "MDQ6VXNlcjM1ODk1ODMx",
      "avatar_url": "https://avatars.githubusercontent.com/u/35895831?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/domZippilli",
      "html_url": "https://github.com/domZippilli",
      "followers_url": "https://api.github.com/users/domZippilli/followers",
      "following_url": "https://api.github.com/users/domZippilli/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/domZippilli/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/domZippilli/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/domZippilli/subscriptions",
      "organizations_url": "https://api.github.com/users/domZippilli/orgs",
      "repos_url": "https://api.github.com/users/domZippilli/repos",
      "events_url": "https://api.github.com/users/domZippilli/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/domZippilli/received_events",
      "type": "User",
      "site_admin": false,
      "patch_url": null
    },
    "labels": [
      {
        "id": 64583,
        "node_id": "MDU6TGFiZWw2NDU4Mw==",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Feature",
        "name": "Feature",
        "color": "7cf575",
        "default": false
      },
      {
        "id": 326918230,
        "node_id": "MDU6TGFiZWwzMjY5MTgyMzA=",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/labels/Resource%20usage",
        "name": "Resource usage",
        "color": "981023",
        "default": false
      }
    ],
    "assignees": [],
    "author_association": "NONE",
    "locked": false,
    "comments": 5,
    "created_at": "2024-03-15T16:53:22Z",
    "updated_at": "2025-06-04T12:49:38Z"
  },
  "events": [
    {
      "event": "labeled",
      "id": 12134374927,
      "node_id": "LE_lADOABII586CesoZzwAAAALTQ94P",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12134374927",
      "actor": {
        "login": "domZippilli",
        "id": 35895831,
        "node_id": "MDQ6VXNlcjM1ODk1ODMx",
        "avatar_url": "https://avatars.githubusercontent.com/u/35895831?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/domZippilli",
        "html_url": "https://github.com/domZippilli",
        "followers_url": "https://api.github.com/users/domZippilli/followers",
        "following_url": "https://api.github.com/users/domZippilli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/domZippilli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/domZippilli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/domZippilli/subscriptions",
        "organizations_url": "https://api.github.com/users/domZippilli/orgs",
        "repos_url": "https://api.github.com/users/domZippilli/repos",
        "events_url": "https://api.github.com/users/domZippilli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/domZippilli/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-15T16:53:22Z",
      "label": {
        "name": "Feature",
        "color": "7cf575"
      }
    },
    {
      "event": "commented",
      "id": 2006956184,
      "node_id": "IC_kwDOABII5853n7iY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2006956184",
      "actor": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-19T11:39:19Z",
      "updated_at": "2024-03-19T11:39:19Z",
      "author_association": "MEMBER",
      "body": "Hi @domZippilli.\r\n\r\nWhilst I think having more control over leveldb compaction would be nice, it seems to me that the changes would be pretty invasive to our leveldb subtree, which we don't particularly want to touch.\r\n\r\nI tried some minimal changes, such as skipping the scheduled compaction on startup, however it's clear to me on testing this that these compaction jobs are scheduled very regularly by the DB implementation (and see below), as this made almost no difference to when I observed compaction running. It would also be possible to increase the leveldb cache size to trigger compactions less frequently (in combination with the previous change).\r\n\r\nHaving read the leveldb documentation compaction is run:\r\n\r\n1. when the DB is opened (which I tested changes to)\r\n2. when the log gets full (unavoidable) or \r\n3. when manual compaction is called.\r\n\r\nYou might be able to get some different performance characteristics by changing the database cache size in the source code manually, but I think it's unlikely that these changes/options will see implementation in main branch here.\r\n\r\nIf you are in IBD compactions will be unavoidable as you sync and the cache fills, but it sounds like you are either restarting or recovering from failure?\r\n\r\nThe startup compactions I saw are mostly coming from initial chainstate verifcation -- we verify the first 6 blocks at startup which triggers a few of these. Without disabling this (highly not recommended) I don't see any way to avoid them either. Disabling these check did see fewer startup compactions. You could probably therefore see improved performance by setting `-checkblocks=1`, which would be preferable to the below (crude, untested, don't run these!) changes which skips block checks altogether.\r\n\r\n<details>\r\n<summary>diff</summary>\r\n\r\n```diff\r\ndiff --git a/src/init.cpp b/src/init.cpp\r\nindex 1a4fce4678..f55aadc9de 100644\r\n--- a/src/init.cpp\r\n+++ b/src/init.cpp\r\n@@ -614,6 +614,7 @@ void SetupServerArgs(ArgsManager& argsman)\r\n     argsman.AddArg(\"-checkblocks=<n>\", strprintf(\"How many blocks to check at startup (default: %u, 0 = all)\", DEFAULT_CHECKBLOCKS), ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::DEBUG_TEST);\r\n     argsman.AddArg(\"-checklevel=<n>\", strprintf(\"How thorough the block verification of -checkblocks is: %s (0-4, default: %u)\", Join(CHECKLEVEL_DOC, \", \"), DEFAULT_CHECKLEVEL), ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::DEBUG_TEST);\r\n     argsman.AddArg(\"-checkblockindex\", strprintf(\"Do a consistency check for the block tree, chainstate, and other validation data structures occasionally. (default: %u, regtest: %u)\", defaultChainParams->DefaultConsistencyChecks(), regtestChainParams->DefaultConsistencyChecks()), ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::DEBUG_TEST);\r\n+    argsman.AddArg(\"-skipverify\", strprintf(\"Skip chain verification at startup (default %b)\", DEFAULT_SKIP_VERIFY), ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::DEBUG_TEST);\r\n     argsman.AddArg(\"-checkaddrman=<n>\", strprintf(\"Run addrman consistency checks every <n> operations. Use 0 to disable. (default: %u)\", DEFAULT_ADDRMAN_CONSISTENCY_CHECKS), ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::DEBUG_TEST);\r\n     argsman.AddArg(\"-checkmempool=<n>\", strprintf(\"Run mempool consistency checks every <n> transactions. Use 0 to disable. (default: %u, regtest: %u)\", defaultChainParams->DefaultConsistencyChecks(), regtestChainParams->DefaultConsistencyChecks()), ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::DEBUG_TEST);\r\n     argsman.AddArg(\"-checkpoints\", strprintf(\"Enable rejection of any forks from the known historical chain until block %s (default: %u)\", defaultChainParams->Checkpoints().GetHeight(), DEFAULT_CHECKPOINTS_ENABLED), ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::DEBUG_TEST);\r\n@@ -1573,6 +1574,7 @@ bool AppInitMain(NodeContext& node, interfaces::BlockAndHeaderTipInfo* tip_info)\r\n         options.mempool = Assert(node.mempool.get());\r\n         options.reindex = node::fReindex;\r\n         options.reindex_chainstate = fReindexChainState;\r\n+        options.skip_verify = args.GetIntArg(\"-skipverify\", DEFAULT_SKIP_VERIFY);\r\n         options.prune = chainman.m_blockman.IsPruneMode();\r\n         options.check_blocks = args.GetIntArg(\"-checkblocks\", DEFAULT_CHECKBLOCKS);\r\n         options.check_level = args.GetIntArg(\"-checklevel\", DEFAULT_CHECKLEVEL);\r\ndiff --git a/src/node/chainstate.cpp b/src/node/chainstate.cpp\r\nindex bf1fc06b0b..d241b580e6 100644\r\n--- a/src/node/chainstate.cpp\r\n+++ b/src/node/chainstate.cpp\r\n@@ -249,6 +249,10 @@ ChainstateLoadResult VerifyLoadedChainstate(ChainstateManager& chainman, const C\r\n     auto is_coinsview_empty = [&](Chainstate* chainstate) EXCLUSIVE_LOCKS_REQUIRED(::cs_main) {\r\n         return options.reindex || options.reindex_chainstate || chainstate->CoinsTip().GetBestBlock().IsNull();\r\n     };\r\n+    if (options.skip_verify) {\r\n+        LogPrintf(\"[chainstate] WARNING: skipping chain verification due to --skipverify flag\\n\");\r\n+        return {ChainstateLoadStatus::SUCCESS, {}};\r\n+    };\r\n \r\n     LOCK(cs_main);\r\n \r\ndiff --git a/src/node/chainstate.h b/src/node/chainstate.h\r\nindex a6e9a0331b..36321dbebd 100644\r\n--- a/src/node/chainstate.h\r\n+++ b/src/node/chainstate.h\r\n@@ -24,6 +24,7 @@ struct ChainstateLoadOptions {\r\n     bool coins_db_in_memory{false};\r\n     bool reindex{false};\r\n     bool reindex_chainstate{false};\r\n+    bool skip_verify{false};\r\n     bool prune{false};\r\n     //! Setting require_full_verification to true will require all checks at\r\n     //! check_level (below) to succeed for loading to succeed. Setting it to\r\ndiff --git a/src/validation.h b/src/validation.h\r\nindex b64ba4dcbc..147fd13ed9 100644\r\n--- a/src/validation.h\r\n+++ b/src/validation.h\r\n@@ -65,6 +65,7 @@ class SignalInterrupt;\r\n /** Block files containing a block-height within MIN_BLOCKS_TO_KEEP of ActiveChain().Tip() will not be pruned. */\r\n static const unsigned int MIN_BLOCKS_TO_KEEP = 288;\r\n static const signed int DEFAULT_CHECKBLOCKS = 6;\r\n+static const bool DEFAULT_SKIP_VERIFY{false};\r\n static constexpr int DEFAULT_CHECKLEVEL{3};\r\n // Require that user allocate at least 550 MiB for block & undo files (blk???.dat and rev???.dat)\r\n // At 1MB per block, 288 blocks = 288MB.\r\n```\r\n\r\n</details>\r\n\r\nApart from that startup option, your only other solution as I see it is to speed up your storage backend/replication somehow. These compactions are barely noticable for me on a local SSD...\r\n\r\nI hope this helps in some way.",
      "user": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/29662#issuecomment-2006956184",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29662"
    },
    {
      "event": "mentioned",
      "id": 12167950415,
      "node_id": "MEE_lADOABII586CesoZzwAAAALVRDBP",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12167950415",
      "actor": {
        "login": "domZippilli",
        "id": 35895831,
        "node_id": "MDQ6VXNlcjM1ODk1ODMx",
        "avatar_url": "https://avatars.githubusercontent.com/u/35895831?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/domZippilli",
        "html_url": "https://github.com/domZippilli",
        "followers_url": "https://api.github.com/users/domZippilli/followers",
        "following_url": "https://api.github.com/users/domZippilli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/domZippilli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/domZippilli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/domZippilli/subscriptions",
        "organizations_url": "https://api.github.com/users/domZippilli/orgs",
        "repos_url": "https://api.github.com/users/domZippilli/repos",
        "events_url": "https://api.github.com/users/domZippilli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/domZippilli/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-19T11:39:21Z"
    },
    {
      "event": "subscribed",
      "id": 12167950427,
      "node_id": "SE_lADOABII586CesoZzwAAAALVRDBb",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12167950427",
      "actor": {
        "login": "domZippilli",
        "id": 35895831,
        "node_id": "MDQ6VXNlcjM1ODk1ODMx",
        "avatar_url": "https://avatars.githubusercontent.com/u/35895831?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/domZippilli",
        "html_url": "https://github.com/domZippilli",
        "followers_url": "https://api.github.com/users/domZippilli/followers",
        "following_url": "https://api.github.com/users/domZippilli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/domZippilli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/domZippilli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/domZippilli/subscriptions",
        "organizations_url": "https://api.github.com/users/domZippilli/orgs",
        "repos_url": "https://api.github.com/users/domZippilli/repos",
        "events_url": "https://api.github.com/users/domZippilli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/domZippilli/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-19T11:39:21Z"
    },
    {
      "event": "labeled",
      "id": 12191697240,
      "node_id": "LE_lADOABII586CesoZzwAAAALWrolY",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/12191697240",
      "actor": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-20T21:41:01Z",
      "label": {
        "name": "Resource usage",
        "color": "981023"
      }
    },
    {
      "event": "commented",
      "id": 2020660954,
      "node_id": "IC_kwDOABII5854cNba",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2020660954",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-26T14:56:16Z",
      "updated_at": "2024-03-26T14:56:16Z",
      "author_association": "CONTRIBUTOR",
      "body": "Can you describe in more detail why skipping the on-open compaction is a bad idea in general (and, eg, schedule it to run in five minutes)? This behavior is very annoying even outside of a high-latency storage - right when you want your machine to be a bit more free so you can start other things LevelDB decides to spam I/O as fast as it can.",
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/29662#issuecomment-2020660954",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29662"
    },
    {
      "event": "commented",
      "id": 2023168295,
      "node_id": "IC_kwDOABII5854lxkn",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2023168295",
      "actor": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-27T16:13:46Z",
      "updated_at": "2024-03-27T16:13:46Z",
      "author_association": "MEMBER",
      "body": "> Can you describe in more detail why skipping the on-open compaction is a bad idea in general (and, eg, schedule it to run in five minutes)?\r\n\r\nSorry I haven't made myself clear; what I think is a bad idea is default disabling the startup checkblocks, not DB compaction scheduling.\r\n\r\nI don't see any great requirement for DB compaction on-open (but I am no LevelDB wizard), only as far as I can tell disabling it for Bitcoin Core would be quite invasive to the subtree.\r\n\r\n> This behavior is very annoying even outside of a high-latency storage - right when you want your machine to be a bit more free so you can start other things LevelDB decides to spam I/O as fast as it can.\r\n\r\nIf this problem is affecting more than just 1 user with high-latency storage then perhaps it warrants more investigation than I've given it so far, but it wasn't clear to me from this report that this might be the case.\r\n\r\nWhen I profile from cold start to \"Loading Wallet...\" using an SSD, the compaction stuff doesn't seem problematic: https://tmp.256k1.dev/check_block_6_startup.svg?s=DoCompaction",
      "user": {
        "login": "willcl-ark",
        "id": 6606587,
        "node_id": "MDQ6VXNlcjY2MDY1ODc=",
        "avatar_url": "https://avatars.githubusercontent.com/u/6606587?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/willcl-ark",
        "html_url": "https://github.com/willcl-ark",
        "followers_url": "https://api.github.com/users/willcl-ark/followers",
        "following_url": "https://api.github.com/users/willcl-ark/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/willcl-ark/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/willcl-ark/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/willcl-ark/subscriptions",
        "organizations_url": "https://api.github.com/users/willcl-ark/orgs",
        "repos_url": "https://api.github.com/users/willcl-ark/repos",
        "events_url": "https://api.github.com/users/willcl-ark/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/willcl-ark/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/29662#issuecomment-2023168295",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29662"
    },
    {
      "event": "commented",
      "id": 2026379482,
      "node_id": "IC_kwDOABII5854yBja",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2026379482",
      "actor": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2024-03-29T00:30:08Z",
      "updated_at": "2024-03-29T00:30:08Z",
      "author_association": "CONTRIBUTOR",
      "body": "> If this problem is affecting more than just 1 user with high-latency storage then perhaps it warrants more investigation than I've given it so far, but it wasn't clear to me from this report that this might be the case.\n\nThis is definitely not just a one person issue. I would posit a guess that most bitcoin core nodes are on network-attached storage (though mostly a VM's backing storage in the same datacenter, not trying to sync storage across two datacenters). But also this can be nasty if you crashed and you have to do replay on startup, in that case you have a lot of IO and now compaction is not only much larger but also competing with the block validation.",
      "user": {
        "login": "TheBlueMatt",
        "id": 649246,
        "node_id": "MDQ6VXNlcjY0OTI0Ng==",
        "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/TheBlueMatt",
        "html_url": "https://github.com/TheBlueMatt",
        "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
        "following_url": "https://api.github.com/users/TheBlueMatt/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/TheBlueMatt/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/TheBlueMatt/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
        "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
        "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
        "events_url": "https://api.github.com/users/TheBlueMatt/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/29662#issuecomment-2026379482",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29662"
    },
    {
      "event": "commented",
      "id": 2939919799,
      "node_id": "IC_kwDOABII586vO523",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/2939919799",
      "actor": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-06-04T12:49:37Z",
      "updated_at": "2025-06-04T12:49:37Z",
      "author_association": "CONTRIBUTOR",
      "body": "Hey @domZippilli, LevelDB compaction sucks, especially since it's single threaded. It's why RocksDB has spread it to multiple threads, reducing compaction burden considerably - switching Bitcoin Core experimentally to RocksDB results in an instant ~20% speedup because of this. Unfortunately we can't just switch over, RocksDB is too complicated, at best we can slowly strangle out LevelDB usage, but we can't just drop it.\n\nI have measured a similar compaction scenario in a related post, can you please check if upgrading to Core v29 alleviates your reported problem (or if it makes it worse, like the other user reported): https://github.com/bitcoin/bitcoin/issues/32455#issuecomment-2939857873",
      "user": {
        "login": "l0rinc",
        "id": 1841944,
        "node_id": "MDQ6VXNlcjE4NDE5NDQ=",
        "avatar_url": "https://avatars.githubusercontent.com/u/1841944?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/l0rinc",
        "html_url": "https://github.com/l0rinc",
        "followers_url": "https://api.github.com/users/l0rinc/followers",
        "following_url": "https://api.github.com/users/l0rinc/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/l0rinc/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/l0rinc/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/l0rinc/subscriptions",
        "organizations_url": "https://api.github.com/users/l0rinc/orgs",
        "repos_url": "https://api.github.com/users/l0rinc/repos",
        "events_url": "https://api.github.com/users/l0rinc/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/l0rinc/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "html_url": "https://github.com/bitcoin/bitcoin/issues/29662#issuecomment-2939919799",
      "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/29662"
    },
    {
      "event": "mentioned",
      "id": 17981140870,
      "node_id": "MEE_lADOABII586CesoZzwAAAAQvwm-G",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17981140870",
      "actor": {
        "login": "domZippilli",
        "id": 35895831,
        "node_id": "MDQ6VXNlcjM1ODk1ODMx",
        "avatar_url": "https://avatars.githubusercontent.com/u/35895831?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/domZippilli",
        "html_url": "https://github.com/domZippilli",
        "followers_url": "https://api.github.com/users/domZippilli/followers",
        "following_url": "https://api.github.com/users/domZippilli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/domZippilli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/domZippilli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/domZippilli/subscriptions",
        "organizations_url": "https://api.github.com/users/domZippilli/orgs",
        "repos_url": "https://api.github.com/users/domZippilli/repos",
        "events_url": "https://api.github.com/users/domZippilli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/domZippilli/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-06-04T12:49:38Z"
    },
    {
      "event": "subscribed",
      "id": 17981140899,
      "node_id": "SE_lADOABII586CesoZzwAAAAQvwm-j",
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/events/17981140899",
      "actor": {
        "login": "domZippilli",
        "id": 35895831,
        "node_id": "MDQ6VXNlcjM1ODk1ODMx",
        "avatar_url": "https://avatars.githubusercontent.com/u/35895831?v=4",
        "gravatar_id": "",
        "url": "https://api.github.com/users/domZippilli",
        "html_url": "https://github.com/domZippilli",
        "followers_url": "https://api.github.com/users/domZippilli/followers",
        "following_url": "https://api.github.com/users/domZippilli/following%7B/other_user%7D",
        "gists_url": "https://api.github.com/users/domZippilli/gists%7B/gist_id%7D",
        "starred_url": "https://api.github.com/users/domZippilli/starred%7B/owner%7D%7B/repo%7D",
        "subscriptions_url": "https://api.github.com/users/domZippilli/subscriptions",
        "organizations_url": "https://api.github.com/users/domZippilli/orgs",
        "repos_url": "https://api.github.com/users/domZippilli/repos",
        "events_url": "https://api.github.com/users/domZippilli/events%7B/privacy%7D",
        "received_events_url": "https://api.github.com/users/domZippilli/received_events",
        "type": "User",
        "site_admin": false,
        "patch_url": null
      },
      "commit_id": null,
      "commit_url": null,
      "created_at": "2025-06-04T12:49:38Z"
    }
  ]
}