{
  "type": "issue",
  "issue": {
    "id": 3134729056,
    "node_id": "I_kwDOABII58662Ctg",
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32722",
    "repository_url": "https://api.github.com/repos/bitcoin/bitcoin",
    "labels_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32722/labels%7B/name%7D",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32722/comments",
    "events_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/32722/events",
    "html_url": "https://github.com/bitcoin/bitcoin/issues/32722",
    "number": 32722,
    "state": "open",
    "state_reason": null,
    "title": "`signrawtransactionwithkey` doesn't work with non segwit p2sh scripts",
    "body": "### Is there an existing issue for this?\n\n- [x] I have searched the existing issues\n\n### Current behaviour\n\nI'm attempting to reproduce the transaction specified by AJ Towns that pointed out BitVM bridges with CTV+CSFS for p2sh outputs are vulnerable to theft. You can read more about the topic [here](https://delvingbitcoin.org/t/how-ctv-csfs-improves-bitvm-bridges/1591/8).\n\nThe TLDR is i'm attempting to sign a `p2sh(p2pk)` script.\n\nI've attempted to create this transaction via the `signrawtransactionwithkey` RPC. I kept receiving an error saying \n\n```{ 'error': 'Unable to sign input, invalid stack size (possibly missing key)'}]}```\n\ndespite explicitly passing in the public key and redeem script in the `prevTxs` and `keys` rpc argument. You can view this here: \n\nhttps://github.com/Christewart/bitcoin/blob/ae6d4476b730d0909f88405f9a9c08383611a49f/test/functional/feature_bitvmctvcsfs_bridge.py#L48\n\nAfter wandering through the source code, it seems that there is a disconnect between the `Solver` and creation of the `KeyStore` inside of `ParsePrevOuts`. \n\n[The `KeyStore` attempts to search for the KeyId of the _p2sh output script_. ](https://github.com/bitcoin/bitcoin/blob/157bbd0a07c06503bc9fa1ccc1087c794d0e5c44/src/script/solver.cpp#L149)\n\n[The `ParsePrevOuts` function only adds the `KeyId` of the redeemScript for p2sh outputs. ](https://github.com/bitcoin/bitcoin/blob/157bbd0a07c06503bc9fa1ccc1087c794d0e5c44/src/rpc/rawtransaction_util.cpp#L250)\n\nI've modified the code on my feature branch to add _both_ the keyid of the p2sh redeem script and the keyid of the output script to the keystore, and now I at least get a digital signature produced (rather than `Unable to sign input, invalid stack size (possibly missing key)`).\n\nhttps://github.com/Christewart/bitcoin/blob/ae6d4476b730d0909f88405f9a9c08383611a49f/src/rpc/rawtransaction_util.cpp#L251\n\nFrom a quick glance through [`rpc_signrawtransactionwithkey.py`](https://github.com/Christewart/bitcoin/blob/2025-06-07-ctvcsfs-bitvm/test/functional/rpc_signrawtransactionwithkey.py) it seems that `p2sh(p2wsh())` is tested, but AFAICT legacy p2sh is not tested.\n\n### Expected behaviour\n\n`rpc_signrawtransactionwithkey` should be able to sign p2pk redeem scripts\n\n### Steps to reproduce\n\nRun `./build/test/functional/feature_bitvmctvcsfs_bridge.py` on this commit: https://github.com/Christewart/bitcoin/commit/ae6d4476b730d0909f88405f9a9c08383611a49f\n\nand remove this line of code to see the failure: \n\nhttps://github.com/Christewart/bitcoin/blob/2025-06-07-ctvcsfs-bitvm/src/rpc/rawtransaction_util.cpp#L251\n\n### Relevant log output\n\n_No response_\n\n### How did you obtain Bitcoin Core\n\nCompiled from source\n\n### What version of Bitcoin Core are you using?\n\nhttps://github.com/Christewart/bitcoin/commit/ae6d4476b730d0909f88405f9a9c08383611a49f\n\n### Operating system and version\n\nMac\n\n### Machine specifications\n\n_No response_",
    "user": {
      "login": "Christewart",
      "id": 3514957,
      "node_id": "MDQ6VXNlcjM1MTQ5NTc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3514957?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Christewart",
      "html_url": "https://github.com/Christewart",
      "followers_url": "https://api.github.com/users/Christewart/followers",
      "following_url": "https://api.github.com/users/Christewart/following%7B/other_user%7D",
      "gists_url": "https://api.github.com/users/Christewart/gists%7B/gist_id%7D",
      "starred_url": "https://api.github.com/users/Christewart/starred%7B/owner%7D%7B/repo%7D",
      "subscriptions_url": "https://api.github.com/users/Christewart/subscriptions",
      "organizations_url": "https://api.github.com/users/Christewart/orgs",
      "repos_url": "https://api.github.com/users/Christewart/repos",
      "events_url": "https://api.github.com/users/Christewart/events%7B/privacy%7D",
      "received_events_url": "https://api.github.com/users/Christewart/received_events",
      "type": "User",
      "site_admin": false,
      "patch_url": null
    },
    "labels": [],
    "assignees": [],
    "author_association": "CONTRIBUTOR",
    "locked": false,
    "comments": 0,
    "created_at": "2025-06-10T20:09:45Z",
    "updated_at": "2025-06-10T20:22:57Z"
  },
  "events": []
}